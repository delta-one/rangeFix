# eCos saved configuration

# ---- commands --------------------------------------------------------
# This section contains information about the savefile format.
# It should not be edited. Any modifications made to this section
# may make it impossible for the configuration tools to read
# the savefile.

cdl_savefile_version 1;
cdl_savefile_command cdl_savefile_version {};
cdl_savefile_command cdl_savefile_command {};
cdl_savefile_command cdl_configuration { description hardware template package };
cdl_savefile_command cdl_package { value_source user_value wizard_value inferred_value };
cdl_savefile_command cdl_component { value_source user_value wizard_value inferred_value };
cdl_savefile_command cdl_option { value_source user_value wizard_value inferred_value };
cdl_savefile_command cdl_interface { value_source user_value wizard_value inferred_value };

# ---- toplevel --------------------------------------------------------
# This section defines the toplevel configuration object. The only
# values that can be changed are the name of the configuration and
# the description field. It is not possible to modify the target,
# the template or the set of packages simply by editing the lines
# below because these changes have wide-ranging effects. Instead
# the appropriate tools should be used to make such modifications.

cdl_configuration eCos {
    description "" ;

    # These fields should not be modified.
    hardware    ea2468 ;
    template    redboot ;
    package -hardware CYGPKG_HAL_ARM v3_0 ;
    package -hardware CYGPKG_HAL_ARM_LPC24XX v3_0 ;
    package -hardware CYGPKG_HAL_ARM_LPC24XX_EA2468 v3_0 ;
    package -hardware CYGPKG_DEVICES_WATCHDOG_ARM_LPC2XXX v3_0 ;
    package -hardware CYGPKG_DEVICES_WALLCLOCK_ARM_LPC2XXX v3_0 ;
    package -hardware CYGPKG_IO_SERIAL_GENERIC_16X5X v3_0 ;
    package -hardware CYGPKG_IO_SERIAL_ARM_LPC24XX v3_0 ;
    package -hardware CYGPKG_DEVS_CAN_LPC2XXX v3_0 ;
    package -hardware CYGPKG_DEVS_FLASH_EA2468 v3_0 ;
    package -hardware CYGPKG_DEVS_FLASH_SST_39VFXXX v3_0 ;
    package -hardware CYGPKG_DEVS_ETH_PHY v3_0 ;
    package -hardware CYGPKG_DEVS_ETH_ARM_LPC2XXX v3_0 ;
    package -hardware CYGPKG_IO_I2C v3_0 ;
    package -hardware CYGPKG_DEVS_I2C_ARM_LPC2XXX v3_0 ;
    package -hardware CYGPKG_DEVS_ADC_ARM_LPC24XX v3_0 ;
    package -template CYGPKG_HAL v3_0 ;
    package -template CYGPKG_INFRA v3_0 ;
    package -template CYGPKG_REDBOOT v3_0 ;
    package -template CYGPKG_ISOINFRA v3_0 ;
    package -template CYGPKG_LIBC_STRING v3_0 ;
    package -template CYGPKG_CRC v3_0 ;
    package CYGPKG_IO_ETH_DRIVERS v3_0 ;
};

# ---- conflicts -------------------------------------------------------
# There are no conflicts.

# ---- contents --------------------------------------------------------
# >
# >
# Global build options
# Global build options including control over compiler flags,
# linker flags and choice of toolchain.
#
cdl_component CYGBLD_GLOBAL_OPTIONS {
    # There is no associated value.

    # The following properties are affected by this value
};

# >
# Global command prefix
# This option specifies the command prefix used when
# invoking the build tools.
#
cdl_option CYGBLD_GLOBAL_COMMAND_PREFIX {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value arm-eabi
    # value_source default
    # Default value: arm-eabi

    # The following properties are affected by this value
    # option CYGBLD_HAL_ARM_EABI
    #     DefaultValue:  (is_substr(CYGBLD_GLOBAL_COMMAND_PREFIX, "-eabi") &&  !is_substr(CYGBLD_GLOBAL_CFLAGS, "-mabi=apcs-gnu") &&  !is_substr(CYGBLD_GLOBAL_CFLAGS, "-mabi=atpcs")) ||  is_substr(CYGBLD_GLOBAL_CFLAGS, "-mabi=aapcs") 
};

# Global compiler flags
# This option controls the global compiler flags which
# are used to compile all packages by default. Individual
# packages may define options which override these global
# flags.
#
cdl_option CYGBLD_GLOBAL_CFLAGS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    # value_source default
    # Default value:  CYGBLD_GLOBAL_WARNFLAGS . CYGBLD_ARCH_CFLAGS .
    #                                 "-mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions " 
    #     CYGBLD_GLOBAL_WARNFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings "
    #     CYGBLD_ARCH_CFLAGS == " -mthumb-interwork "
    #   --> "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "

    # The following properties are affected by this value
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:   CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:   CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:   CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:  !CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:  !CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:  !CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:   CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:   CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:   CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:  !CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:  !CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:  !CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:   CYGHWR_HAL_ARM_BIGENDIAN          implies  is_substr(CYGBLD_GLOBAL_CFLAGS, " -mbig-endian ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:  !CYGHWR_HAL_ARM_BIGENDIAN          implies !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mbig-endian ") 
    # option CYGBLD_HAL_ARM_EABI
    #     DefaultValue:  (is_substr(CYGBLD_GLOBAL_COMMAND_PREFIX, "-eabi") &&  !is_substr(CYGBLD_GLOBAL_CFLAGS, "-mabi=apcs-gnu") &&  !is_substr(CYGBLD_GLOBAL_CFLAGS, "-mabi=atpcs")) ||  is_substr(CYGBLD_GLOBAL_CFLAGS, "-mabi=aapcs") 
    # option CYGBLD_HAL_ARM_EABI
    #     DefaultValue:  (is_substr(CYGBLD_GLOBAL_COMMAND_PREFIX, "-eabi") &&  !is_substr(CYGBLD_GLOBAL_CFLAGS, "-mabi=apcs-gnu") &&  !is_substr(CYGBLD_GLOBAL_CFLAGS, "-mabi=atpcs")) ||  is_substr(CYGBLD_GLOBAL_CFLAGS, "-mabi=aapcs") 
    # option CYGBLD_HAL_ARM_EABI
    #     DefaultValue:  (is_substr(CYGBLD_GLOBAL_COMMAND_PREFIX, "-eabi") &&  !is_substr(CYGBLD_GLOBAL_CFLAGS, "-mabi=apcs-gnu") &&  !is_substr(CYGBLD_GLOBAL_CFLAGS, "-mabi=atpcs")) ||  is_substr(CYGBLD_GLOBAL_CFLAGS, "-mabi=aapcs") 
    # option CYGBLD_INFRA_CFLAGS_WARNINGS_AS_ERRORS
    #     Requires:  is_substr(CYGBLD_GLOBAL_CFLAGS, " -Werror") 
    # option CYGBLD_INFRA_CFLAGS_PIPE
    #     Requires:  is_substr(CYGBLD_GLOBAL_CFLAGS, " -pipe") 
};

# Global linker flags
# This option controls the global linker flags. Individual
# packages may define options which override these global
# flags.
#
cdl_option CYGBLD_GLOBAL_LDFLAGS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    # value_source default
    # Default value:  CYGBLD_ARCH_LDFLAGS . "-mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib" 
    #     CYGBLD_ARCH_LDFLAGS == " -mthumb-interwork "
    #   --> " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"

    # The following properties are affected by this value
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:   CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:   CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:   CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:  !CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:  !CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:  !CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:   CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:   CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:   CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:  !CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:  !CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:  !CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:   CYGHWR_HAL_ARM_BIGENDIAN          implies  is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mbig-endian ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:  !CYGHWR_HAL_ARM_BIGENDIAN          implies !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mbig-endian ") 
};

# Architecture-specific compiler flags
#
cdl_option CYGBLD_ARCH_CFLAGS {
    # Calculated value:  (CYGHWR_THUMB ? " -mthumb " : "") .
    #                 (CYGBLD_ARM_ENABLE_THUMB_INTERWORK ? " -mthumb-interwork " : " -mno-thumb-interwork ") .
    #                 (CYGHWR_HAL_ARM_BIGENDIAN ? " -mbig-endian " : "")
    #             
    #     CYGHWR_THUMB == 0
    #     CYGBLD_ARM_ENABLE_THUMB_INTERWORK == 1
    #     CYGHWR_HAL_ARM_BIGENDIAN == 0
    # Flavor: data
    # Current_value:  -mthumb-interwork 
    # Requires:   CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    #     CYGHWR_THUMB == 0
    #     CYGBLD_ARM_ENABLE_THUMB_INTERWORK == 1
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #   --> 1
    # Requires:  !CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    #     CYGHWR_THUMB == 0
    #     CYGBLD_ARM_ENABLE_THUMB_INTERWORK == 1
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #   --> 1
    # Requires:   CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    #     CYGHWR_THUMB == 0
    #     CYGBLD_ARM_ENABLE_THUMB_INTERWORK == 1
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #   --> 1
    # Requires:  !CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    #     CYGHWR_THUMB == 0
    #     CYGBLD_ARM_ENABLE_THUMB_INTERWORK == 1
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #   --> 1
    # Requires:   CYGHWR_HAL_ARM_BIGENDIAN          implies  is_substr(CYGBLD_GLOBAL_CFLAGS, " -mbig-endian ") 
    #     CYGHWR_HAL_ARM_BIGENDIAN == 0
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #   --> 1
    # Requires:  !CYGHWR_HAL_ARM_BIGENDIAN          implies !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mbig-endian ") 
    #     CYGHWR_HAL_ARM_BIGENDIAN == 0
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #   --> 1

    # The following properties are affected by this value
    # option CYGBLD_GLOBAL_CFLAGS
    #     DefaultValue:  CYGBLD_GLOBAL_WARNFLAGS . CYGBLD_ARCH_CFLAGS .
    #                                 "-mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions " 
};

# Architecture-specific linker flags
#
cdl_option CYGBLD_ARCH_LDFLAGS {
    # Calculated value:  (CYGHWR_THUMB ? " -mthumb " : "") .
    #                 (CYGBLD_ARM_ENABLE_THUMB_INTERWORK ? " -mthumb-interwork " : " -mno-thumb-interwork ") .
    #                 (CYGHWR_HAL_ARM_BIGENDIAN ? " -mbig-endian " : "")
    #             
    #     CYGHWR_THUMB == 0
    #     CYGBLD_ARM_ENABLE_THUMB_INTERWORK == 1
    #     CYGHWR_HAL_ARM_BIGENDIAN == 0
    # Flavor: data
    # Current_value:  -mthumb-interwork 
    # Requires:   CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    #     CYGHWR_THUMB == 0
    #     CYGBLD_ARM_ENABLE_THUMB_INTERWORK == 1
    #     CYGBLD_GLOBAL_LDFLAGS == " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    #     CYGBLD_GLOBAL_LDFLAGS == " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    #     CYGBLD_GLOBAL_LDFLAGS == " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    #   --> 1
    # Requires:  !CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    #     CYGHWR_THUMB == 0
    #     CYGBLD_ARM_ENABLE_THUMB_INTERWORK == 1
    #     CYGBLD_GLOBAL_LDFLAGS == " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    #     CYGBLD_GLOBAL_LDFLAGS == " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    #     CYGBLD_GLOBAL_LDFLAGS == " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    #   --> 1
    # Requires:   CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    #     CYGHWR_THUMB == 0
    #     CYGBLD_ARM_ENABLE_THUMB_INTERWORK == 1
    #     CYGBLD_GLOBAL_LDFLAGS == " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    #     CYGBLD_GLOBAL_LDFLAGS == " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    #     CYGBLD_GLOBAL_LDFLAGS == " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    #   --> 1
    # Requires:  !CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    #     CYGHWR_THUMB == 0
    #     CYGBLD_ARM_ENABLE_THUMB_INTERWORK == 1
    #     CYGBLD_GLOBAL_LDFLAGS == " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    #     CYGBLD_GLOBAL_LDFLAGS == " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    #     CYGBLD_GLOBAL_LDFLAGS == " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    #   --> 1
    # Requires:   CYGHWR_HAL_ARM_BIGENDIAN          implies  is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mbig-endian ") 
    #     CYGHWR_HAL_ARM_BIGENDIAN == 0
    #     CYGBLD_GLOBAL_LDFLAGS == " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    #   --> 1
    # Requires:  !CYGHWR_HAL_ARM_BIGENDIAN          implies !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mbig-endian ") 
    #     CYGHWR_HAL_ARM_BIGENDIAN == 0
    #     CYGBLD_GLOBAL_LDFLAGS == " -mthumb-interwork -mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    #   --> 1

    # The following properties are affected by this value
    # option CYGBLD_GLOBAL_LDFLAGS
    #     DefaultValue:  CYGBLD_ARCH_LDFLAGS . "-mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib" 
};

# Standard compiler warning flags
# This option specifies the default warning-related compiler flags used
# on all eCos platforms.
#
cdl_option CYGBLD_GLOBAL_WARNFLAGS {
    # Calculated value:  "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings " 
    # Flavor: data
    # Current_value: -Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings 

    # The following properties are affected by this value
    # option CYGBLD_GLOBAL_CFLAGS
    #     DefaultValue:  CYGBLD_GLOBAL_WARNFLAGS . CYGBLD_ARCH_CFLAGS .
    #                                 "-mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions " 
};

# Build common GDB stub ROM image
# Unless a target board has specific requirements to the
# stub implementation, it can use a simple common stub.
# This option, which gets enabled by platform HALs as
# appropriate, controls the building of the common stub.
#
cdl_option CYGBLD_BUILD_COMMON_GDB_STUBS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1
};

# <
# ARM LPC2XXX watchdog driver
# This package uses the watchdog device integrated
# in the LPC2XXX to execute a predefined action if the
# application fails to call the reset function for
# longer than a given timeout interval.
#
cdl_package CYGPKG_DEVICES_WATCHDOG_ARM_LPC2XXX {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_WATCHDOG
    #     CYGPKG_IO_WATCHDOG (unknown) == 0
    #   --> 0
    # ActiveIf constraint: CYGIMP_WATCHDOG_HARDWARE
    #     CYGIMP_WATCHDOG_HARDWARE == 1
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
    # Requires: CYGPKG_HAL_ARM_LPC2XXX
    #     CYGPKG_HAL_ARM_LPC2XXX (unknown) == 0
    #   --> 0
    # Requires: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0
};

# >
# Desired timeout value
# This parameter controls the watchdog timeout interval.
# Note that you may not get the exact value requested
# here, the timeout interval may have to be adjusted
# because of hardware limitations. The actual timeout
# used will be the smallest possible value that is not
# less than this parameter.
#
cdl_option CYGNUM_DEVS_WATCHDOG_ARM_LPC2XXX_DESIRED_TIMEOUT_MS {
    # This option is not active
    # The parent CYGPKG_DEVICES_WATCHDOG_ARM_LPC2XXX is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100
    # value_source default
    # Default value: 100
    # Legal values: 1 to 2047
};

# Generate reset on watchdog expiration
# Enabling this option changes the watchdog operation mode
# to generate a system reset upon expiration instead of
# invoking an application-defined action.
#
cdl_option CYGSEM_DEVS_WATCHDOG_ARM_LPC2XXX_RESET {
    # This option is not active
    # The parent CYGPKG_DEVICES_WATCHDOG_ARM_LPC2XXX is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# LPC2XXX watchdog build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_DEVICES_WATCHDOG_ARM_LPC2XXX_OPTIONS {
    # This option is not active
    # The parent CYGPKG_DEVICES_WATCHDOG_ARM_LPC2XXX is not active

    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the watchdog device. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_DEVICES_WATCHDOG_ARM_LPC2XXX_CFLAGS_ADD {
    # This option is not active
    # The parent CYGPKG_DEVICES_WATCHDOG_ARM_LPC2XXX_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the watchdog device. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_DEVICES_WATCHDOG_ARM_LPC2XXX_CFLAGS_REMOVE {
    # This option is not active
    # The parent CYGPKG_DEVICES_WATCHDOG_ARM_LPC2XXX_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# <
# Hardware watchdog
#
cdl_option CYGIMP_WATCHDOG_HARDWARE {
    # Calculated value: 1
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # package CYGPKG_DEVICES_WATCHDOG_ARM_LPC2XXX
    #     ActiveIf: CYGIMP_WATCHDOG_HARDWARE
};

# LPC2xxx Real-time clock
# RTC driver for the LPC2xxx controller
#
cdl_package CYGPKG_DEVICES_WALLCLOCK_ARM_LPC2XXX {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_WALLCLOCK
    #     CYGPKG_IO_WALLCLOCK (unknown) == 0
    #   --> 0
    # ActiveIf constraint: CYGPKG_HAL_ARM_LPC2XXX || CYGPKG_HAL_ARM_LPC24XX
    #     CYGPKG_HAL_ARM_LPC2XXX (unknown) == 0
    #     CYGPKG_HAL_ARM_LPC24XX == v3_0
    #   --> 1
    # ActiveIf constraint: CYGIMP_WALLCLOCK_HARDWARE
    #     CYGIMP_WALLCLOCK_HARDWARE == 1
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
    # Requires:  CYGHWR_HAL_ARM_LPC2XXX_IDLE_PWRSAVE == 0 
    #     CYGHWR_HAL_ARM_LPC2XXX_IDLE_PWRSAVE (unknown) == 0
    #   --> 1
};

# Hardware wallclock
#
cdl_option CYGIMP_WALLCLOCK_HARDWARE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # package CYGPKG_DEVICES_WALLCLOCK_ARM_LPC2XXX
    #     ActiveIf: CYGIMP_WALLCLOCK_HARDWARE
};

# 16x5x generic serial device drivers
# This option enables the serial device drivers for the
# 16x5x compatiple controllers.
#
cdl_package CYGPKG_IO_SERIAL_GENERIC_16X5X {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_SERIAL
    #     CYGPKG_IO_SERIAL (unknown) == 0
    #   --> 0
    # ActiveIf constraint: CYGINT_IO_SERIAL_GENERIC_16X5X_REQUIRED
    #     CYGINT_IO_SERIAL_GENERIC_16X5X_REQUIRED == 0
    #   --> 0

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
    # Requires: CYGPKG_ERROR
    #     CYGPKG_ERROR (unknown) == 0
    #   --> 0
};

# >
# Per channel interrupt priority support
# A platform should implement this interface if it supports
# per channel interrupt priorities. If a platform implements
# this interface it needs to provide an interrupt priority
# value for each UART channel it supports.
#
cdl_interface CYGINT_IO_SERIAL_GENERIC_16X5X_CHAN_INTPRIO {
    # Implemented by CYGPKG_IO_SERIAL_ARM_LPC24XX, inactive, enabled
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_GENERIC_16X5X is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
};

# Transmission require priming
# This option should be switched on when enabling THRE interrupt
# does not generate interrupt unless bytes are posted to the FIFO.
#
cdl_option CYGPKG_IO_SERIAL_GENERIC_16X5X_XMIT_REQUIRE_PRIME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_GENERIC_16X5X is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# 16x5x FIFO support
# Options to configure the FIFO on a 16550 (or above) variant.
#
cdl_component CYGPKG_IO_SERIAL_GENERIC_16X5X_FIFO {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_GENERIC_16X5X is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Threshold for RX interrupt on 16550 FIFO
# This options configures the threshold value at which
# the RX interrupt occurs when a FIFO is used. (16550 and
# above only), this may be after 1, 4, 8 or 14 characters.
#
cdl_option CYGPKG_IO_SERIAL_GENERIC_16X5X_FIFO_RX_THRESHOLD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_GENERIC_16X5X_FIFO is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Legal values:  14 8 4 1 
};

# 16x5x TX FIFO size
# Configures the maximum number of bytes written to the
# 16x5x UART transmit FIFO when the TX interrupt occurs.
#
cdl_option CYGNUM_IO_SERIAL_GENERIC_16X5X_FIFO_TX_SIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_GENERIC_16X5X_FIFO is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value: 16
};

# <
# Serial device driver build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_IO_SERIAL_GENERIC_16X5X_OPTIONS {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_GENERIC_16X5X is not active

    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building these serial device drivers. These flags are
# used in addition to the set of global flags.
#
cdl_option CYGPKG_IO_SERIAL_GENERIC_16X5X_CFLAGS_ADD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_GENERIC_16X5X_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building these serial device drivers. These flags are
# removed from the set of global flags if present.
#
cdl_option CYGPKG_IO_SERIAL_GENERIC_16X5X_CFLAGS_REMOVE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_GENERIC_16X5X_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# <
# ARM LPC24xx serial device drivers
# This option enables the serial device drivers for the
# ARM LPC24xx.
#
cdl_package CYGPKG_IO_SERIAL_ARM_LPC24XX {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_SERIAL
    #     CYGPKG_IO_SERIAL (unknown) == 0
    #   --> 0
    # ActiveIf constraint: CYGPKG_HAL_ARM_LPC24XX
    #     CYGPKG_HAL_ARM_LPC24XX == v3_0
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
    # Requires: CYGPKG_ERROR
    #     CYGPKG_ERROR (unknown) == 0
    #   --> 0
};

# >
# Generic 16x5x serial driver required
#
cdl_interface CYGINT_IO_SERIAL_GENERIC_16X5X_REQUIRED {
    # Implemented by CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL0, inactive, enabled
    # Implemented by CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL1, inactive, enabled
    # Implemented by CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL2, inactive, enabled
    # Implemented by CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL3, inactive, enabled
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # package CYGPKG_IO_SERIAL_GENERIC_16X5X
    #     ActiveIf: CYGINT_IO_SERIAL_GENERIC_16X5X_REQUIRED
};

# Platform provides UART 0
# This interface will be implemented if the specific LPC24xx
# processor being used has on-chip UART 0, and if
# that UART is accessible on the target hardware.
#
cdl_interface CYGINT_IO_SERIAL_LPC24XX_UART0 {
    # Implemented by CYGPKG_HAL_ARM_LPC24XX_EA2468, active, enabled
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL0
    #     ActiveIf: CYGINT_IO_SERIAL_LPC24XX_UART0
};

# ARM LPC24cxx UART 0 driver
# This option includes the serial device driver for the ARM
# LPC24xx UART 0.
#
cdl_component CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL0 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX is not active
    # ActiveIf constraint: CYGINT_IO_SERIAL_LPC24XX_UART0
    #     CYGINT_IO_SERIAL_LPC24XX_UART0 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_ARM_LPC24XX_TESTING
    #     ActiveIf: CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL0
};

# >
# Device name for UART 0
# This option specifies the name of the serial device
# for the ARM LPC24xx UART 0.
#
cdl_option CYGDAT_IO_SERIAL_ARM_LPC24XX_SERIAL0_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser0\""
    # value_source default
    # Default value: "\"/dev/ser0\""

    # The following properties are affected by this value
    # option CYGPRI_SER_TEST_SER_DEV
    #     DefaultValue:  CYGDAT_IO_SERIAL_ARM_LPC24XX_SERIAL0_NAME 
};

# Baud rate for UART 0
# This option specifies the default baud rate (speed)
# for the ARM LPC24xx UART 0.
#
cdl_option CYGNUM_IO_SERIAL_ARM_LPC24XX_SERIAL0_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 38400
    # value_source default
    # Default value: 38400
    # Legal values:  50 75 110 "134_5" 150 200 300 600 1200 1800 
    #                                     2400 3600 4800 7200 9600 14400 19200 38400
    #                                     57600 115200 230400 
};

# Buffer size for the UART 0
# This option specifies the size of the internal buffers
# used for the ARM LPC24xx UART 0.
#
cdl_option CYGNUM_IO_SERIAL_ARM_LPC24XX_SERIAL0_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Interrupt priority of UART 0
# This option selects the interupt priority for the
# UART 0 interrupts. There are 16
# priority levels corresponding to the values 0
# through 15 decimal, of which 15 is the lowest
# priority. The reset value of these registers
# defaults all interrupt to the lowest priority,
# allowing a single write to elevate the priority of
# an individual interrupt.
#
cdl_option CYGNUM_IO_SERIAL_ARM_LPC24XX_SERIAL0_INTPRIO {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 15
    # value_source default
    # Default value: 15
    # Legal values: 0 to 15
};

# <
# Platform provides UART 1
# This interface will be implemented if the specific LPC24xx
# processor being used has on-chip UART 1, and if
# that UART is accessible on the target hardware.
#
cdl_interface CYGINT_IO_SERIAL_LPC24XX_UART1 {
    # Implemented by CYGPKG_HAL_ARM_LPC24XX_EA2468, active, enabled
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL1
    #     ActiveIf: CYGINT_IO_SERIAL_LPC24XX_UART1
};

# ARM LPC24cxx UART 1 driver
# This option includes the serial device driver for the ARM
# LPC24xx UART 1.
#
cdl_component CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL1 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX is not active
    # ActiveIf constraint: CYGINT_IO_SERIAL_LPC24XX_UART1
    #     CYGINT_IO_SERIAL_LPC24XX_UART1 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Device name for UART 1
# This option specifies the name of the serial device
# for the ARM LPC24xx UART 1.
#
cdl_option CYGDAT_IO_SERIAL_ARM_LPC24XX_SERIAL1_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser1\""
    # value_source default
    # Default value: "\"/dev/ser1\""
};

# Baud rate for UART 1
# This option specifies the default baud rate (speed)
# for the ARM LPC24xx UART 1.
#
cdl_option CYGNUM_IO_SERIAL_ARM_LPC24XX_SERIAL1_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 38400
    # value_source default
    # Default value: 38400
    # Legal values:  50 75 110 "134_5" 150 200 300 600 1200 1800 
    #                                     2400 3600 4800 7200 9600 14400 19200 38400
    #                                     57600 115200 230400 
};

# Buffer size for the UART 1
# This option specifies the size of the internal buffers
# used for the ARM LPC24xx UART 1.
#
cdl_option CYGNUM_IO_SERIAL_ARM_LPC24XX_SERIAL1_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Interrupt priority of UART 1
# This option selects the interupt priority for the
# UART 1 interrupts. There are 16
# priority levels corresponding to the values 0
# through 15 decimal, of which 15 is the lowest
# priority. The reset value of these registers
# defaults all interrupt to the lowest priority,
# allowing a single write to elevate the priority of
# an individual interrupt.
#
cdl_option CYGNUM_IO_SERIAL_ARM_LPC24XX_SERIAL1_INTPRIO {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 15
    # value_source default
    # Default value: 15
    # Legal values: 0 to 15
};

# <
# Platform provides UART 2
# This interface will be implemented if the specific LPC24xx
# processor being used has on-chip UART 2, and if
# that UART is accessible on the target hardware.
#
cdl_interface CYGINT_IO_SERIAL_LPC24XX_UART2 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL2
    #     ActiveIf: CYGINT_IO_SERIAL_LPC24XX_UART2
};

# ARM LPC24cxx UART 2 driver
# This option includes the serial device driver for the ARM
# LPC24xx UART 2.
#
cdl_component CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL2 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX is not active
    # ActiveIf constraint: CYGINT_IO_SERIAL_LPC24XX_UART2
    #     CYGINT_IO_SERIAL_LPC24XX_UART2 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Device name for UART 2
# This option specifies the name of the serial device
# for the ARM LPC24xx UART 2.
#
cdl_option CYGDAT_IO_SERIAL_ARM_LPC24XX_SERIAL2_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL2 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser2\""
    # value_source default
    # Default value: "\"/dev/ser2\""
};

# Baud rate for UART 2
# This option specifies the default baud rate (speed)
# for the ARM LPC24xx UART 2.
#
cdl_option CYGNUM_IO_SERIAL_ARM_LPC24XX_SERIAL2_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL2 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 38400
    # value_source default
    # Default value: 38400
    # Legal values:  50 75 110 "134_5" 150 200 300 600 1200 1800 
    #                                     2400 3600 4800 7200 9600 14400 19200 38400
    #                                     57600 115200 230400 
};

# Buffer size for the UART 2
# This option specifies the size of the internal buffers
# used for the ARM LPC24xx UART 2.
#
cdl_option CYGNUM_IO_SERIAL_ARM_LPC24XX_SERIAL2_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL2 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Interrupt priority of UART 2
# This option selects the interupt priority for the
# UART 2 interrupts. There are 16
# priority levels corresponding to the values 0
# through 15 decimal, of which 15 is the lowest
# priority. The reset value of these registers
# defaults all interrupt to the lowest priority,
# allowing a single write to elevate the priority of
# an individual interrupt.
#
cdl_option CYGNUM_IO_SERIAL_ARM_LPC24XX_SERIAL2_INTPRIO {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL2 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 15
    # value_source default
    # Default value: 15
    # Legal values: 0 to 15
};

# <
# Platform provides UART 3
# This interface will be implemented if the specific LPC24xx
# processor being used has on-chip UART 3, and if
# that UART is accessible on the target hardware.
#
cdl_interface CYGINT_IO_SERIAL_LPC24XX_UART3 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL3
    #     ActiveIf: CYGINT_IO_SERIAL_LPC24XX_UART3
};

# ARM LPC24cxx UART 3 driver
# This option includes the serial device driver for the ARM
# LPC24xx UART 3.
#
cdl_component CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL3 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX is not active
    # ActiveIf constraint: CYGINT_IO_SERIAL_LPC24XX_UART3
    #     CYGINT_IO_SERIAL_LPC24XX_UART3 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Device name for UART 3
# This option specifies the name of the serial device
# for the ARM LPC24xx UART 3.
#
cdl_option CYGDAT_IO_SERIAL_ARM_LPC24XX_SERIAL3_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL3 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser3\""
    # value_source default
    # Default value: "\"/dev/ser3\""
};

# Baud rate for UART 3
# This option specifies the default baud rate (speed)
# for the ARM LPC24xx UART 3.
#
cdl_option CYGNUM_IO_SERIAL_ARM_LPC24XX_SERIAL3_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL3 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 38400
    # value_source default
    # Default value: 38400
    # Legal values:  50 75 110 "134_5" 150 200 300 600 1200 1800 
    #                                     2400 3600 4800 7200 9600 14400 19200 38400
    #                                     57600 115200 230400 
};

# Buffer size for the UART 3
# This option specifies the size of the internal buffers
# used for the ARM LPC24xx UART 3.
#
cdl_option CYGNUM_IO_SERIAL_ARM_LPC24XX_SERIAL3_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL3 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Interrupt priority of UART 3
# This option selects the interupt priority for the
# UART 3 interrupts. There are 16
# priority levels corresponding to the values 0
# through 15 decimal, of which 15 is the lowest
# priority. The reset value of these registers
# defaults all interrupt to the lowest priority,
# allowing a single write to elevate the priority of
# an individual interrupt.
#
cdl_option CYGNUM_IO_SERIAL_ARM_LPC24XX_SERIAL3_INTPRIO {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL3 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 15
    # value_source default
    # Default value: 15
    # Legal values: 0 to 15
};

# <
# Testing parameters
#
cdl_component CYGPKG_IO_SERIAL_ARM_LPC24XX_TESTING {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX is not active
    # ActiveIf constraint: CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL0
    #     CYGPKG_IO_SERIAL_ARM_LPC24XX_SERIAL0 == 0
    #   --> 0

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# >
# Serial device used for testing
#
cdl_option CYGPRI_SER_TEST_SER_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_LPC24XX_TESTING is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGDAT_IO_SERIAL_ARM_LPC24XX_SERIAL0_NAME 
    #     CYGDAT_IO_SERIAL_ARM_LPC24XX_SERIAL0_NAME == 0
    #   --> 0
};

# <
# <
# Philips LPC2xxx CAN device drivers
# This option enables the CAN device drivers for the
# Philips LPC2XXX.
#
cdl_package CYGPKG_DEVS_CAN_LPC2XXX {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_CAN
    #     CYGPKG_IO_CAN (unknown) == 0
    #   --> 0
    # ActiveIf constraint: CYGPKG_HAL_ARM_LPC2XXX || CYGPKG_HAL_ARM_LPC24XX
    #     CYGPKG_HAL_ARM_LPC2XXX (unknown) == 0
    #     CYGPKG_HAL_ARM_LPC24XX == v3_0
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
    # Requires: CYGPKG_ERROR
    #     CYGPKG_ERROR (unknown) == 0
    #   --> 0
};

# >
# Acceptance filter runtime configuration
# The LPC2xxx CAN module supports a global acceptance
# filter. Enabling this option provides support for runtime
# configuration of this acceptance filter.  If each CAN
# channel should receive all CAN messages and individual
# message filtering is not required then disable this option
# to eliminate almost the complete acceptance filter code
# and to decrease code size. If this option is disabled the
# option CYGOPT_IO_CAN_RUNTIME_MBOX_CFG is not available and
# the configuration key CYG_IO_SET_CONFIG_CAN_MSGBUF is not
# supported by this driver.
#
cdl_component CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGOPT_DEVS_CAN_LPC2XXX_CAN0_ACCFILT_STARTUP_CFG
    #     ActiveIf: CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT
    # option CYGOPT_DEVS_CAN_LPC2XXX_CAN1_ACCFILT_STARTUP_CFG
    #     ActiveIf: CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT
    # option CYGOPT_DEVS_CAN_LPC2XXX_CAN2_ACCFILT_STARTUP_CFG
    #     ActiveIf: CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT
    # option CYGOPT_DEVS_CAN_LPC2XXX_CAN3_ACCFILT_STARTUP_CFG
    #     ActiveIf: CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT
};

# >
# Extended acceptance filtering
# The common CAN I/O layer supports setup of single
# message filters for reception of single CAN
# messages. The global LPC2xxx acceptance filter
# supports not only single message filters but also
# message groups.  A message group is defined by a
# lower bound CAN identifier and an upper bound CAN
# identifier. The acceptance filter will accept all
# messages within this range of CAN identifiers. The
# acceptance filter supports a number of message
# groups for each CAN channel. The support of
# message filter groups is not conform to the
# standard API of the CAN I/O layer and should only
# be used for application where portability is not
# important.
#
cdl_option CYGOPT_DEVS_CAN_LPC2XXX_EXTENDED_CFG_KEYS {
    # This option is not active
    # The parent CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT is not active
    # The parent CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# LUT Error Support
# The CAN module contains a look-up table for
# acceptance filtering of incoming CAN messages. The
# look-up table indicates errors in the LUT error
# registers. If this option is enabled, additional
# error check code is executed if an interrupt is
# serviced. Normally the acceptance filter code should
# fill the look-up table properly and no LUT error
# should ever occur. You need to decide if LUT error
# checking is required for your application because it
# adds some bytes of code and slows down the ISR/DSR
# handling a little bit because of the additional code
# that need to be executed.
#
cdl_option CYGOPT_DEVS_CAN_LPC2XXX_LUT_ERR_SUPP {
    # This option is not active
    # The parent CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT is not active
    # The parent CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Use Self Reception Request command
# Enable this option for using work-around of problem with
# receiving messages while arbitration is lost. If this work
# around is used each transmitted CAN message will be
# received. This will produce additional RX interrupts an
# requires additional time for processing these interrupts
# and for filtering of received messages.
# The errata sheet tells the following about this issue:
# Introduction: The CAN module can lose arbitration to
# another CAN node during an attempt to transmit a CAN
# message. The message of the CAN node the arbitration was
# lost to is supposed to be received correctly by the CAN
# module.
# Problem: Messages might not be received correctly if
# during a CAN Transmission the CAN bus arbitration is lost
# to another CAN node.
# Work-around: Use the Self Reception Request command
# instead of the Transmission Request command. However, it
# has to be taken into account that now all transmitted
# messages may be received if not prevented by appropriate
# Acceptance Filter settings.  (Don't set up Acceptance
# Filter Message Identifiers for the messages you are
# transmitting yourself.).
#
cdl_option CYGOPT_DEVS_CAN_LPC2XXX_USE_SELF_RECEPTION {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active
    # ActiveIf constraint: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    #     CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION == 4
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Arbitration lost interrupt enable
# If the CAN controller loses arbitration while attempting to 
# transmit a message, an interrupt can be triggered. Normally
# this is no real error condition and it is not necessary to
# propagate these events to upper layers. But you can enable
# this option if you want to check for arbitration lost events.
#
cdl_option CYGOPT_DEVS_CAN_LPC2XXX_ALIE {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Support printing debug information
# Check this box to turn ON debug options for LPC2XXXX 
# CAN device driver.
#
cdl_option CYGDBG_DEVS_CAN_LPC2XXX_DEBUG {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Platform provides CAN 0
# This interface will be implemented if the specific LPC2xxx
# processor being used has on-chip CAN 0, and if
# that CAN module is accessible on the target hardware.
#
cdl_interface CYGINT_DEVS_CAN_LPC2XXX_CAN0 {
    # Implemented by CYGPKG_HAL_ARM_LPC24XX_EA2468, active, enabled
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # component CYGPKG_DEVS_CAN_LPC2XXX_CAN0
    #     ActiveIf: CYGINT_DEVS_CAN_LPC2XXX_CAN0
};

# Allow access to the on-chip CAN 0 via a CAN driver
# If the application needs to access the on-chip CAN
# module 0 via an eCos CAN driver then
# this option should be enabled.
#
cdl_component CYGPKG_DEVS_CAN_LPC2XXX_CAN0 {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active
    # ActiveIf constraint: CYGINT_DEVS_CAN_LPC2XXX_CAN0
    #     CYGINT_DEVS_CAN_LPC2XXX_CAN0 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Device name for CAN module 0
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGPKG_DEVS_CAN_LPC2XXX_CAN0_NAME {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/can0\""
    # value_source default
    # Default value: "\"/dev/can0\""
};

# Default baud rate for CAN module 0
# This option determines the initial baud rate in
# KBaud for CAN module 0
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN0_KBAUD {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100
    # value_source default
    # Default value: 100
    # Legal values:  10 20 50 100 125 250 500 800 1000 "AUTO"
};

# Size of TX Queue for the CAN module 0 driver
# The CAN device driver will run in interrupt mode
# and will perform buffering of outgoing data. This
# option controls the number of CAN messages the TX
# queue can store.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN0_QUEUESIZE_TX {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
    # Legal values: 1 to 1024
};

# Size of RX Queue for the CAN module 0 driver
# The CAN device driver will run in interrupt mode
# and will perform buffering of incoming data. This
# option controls the number of CAN events the RX
# queue can store.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN0_QUEUESIZE_RX {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 64
    # value_source default
    # Default value: 64
    # Legal values: 8 to 4096
};

# Acceptance filter startup configuration
# Normally the acceptance filter will be configured
# at startup time to receive all available CAN
# messages. The application can setup single message
# filters during runtime later. If RX_NONE is
# selected then the acceptance filter for this
# channel is configured to receive no CAN message
# identifier.
#
cdl_option CYGOPT_DEVS_CAN_LPC2XXX_CAN0_ACCFILT_STARTUP_CFG {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN0 is not active
    # ActiveIf constraint: CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT
    #     CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value RX_ALL
    # value_source default
    # Default value: RX_ALL
    # Legal values: "RX_ALL" "RX_NONE"
};

# Priority level of CAN module 0 receive interrupt
# This option sets CAN module 0
# device receive interrupt priority level.  We
# support up to 17 interrupt levels. Interrupts
# 0 - 15 are vectored interrupt
# requests. Priority 16 indicates a non vectored
# IRQ. Vectored IRQs have the higher priority
# then non vectored IRQs and slot 0 has the
# highest priority and slot 15 has the lowest.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN0_RX_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN0 is not active
    # ActiveIf constraint: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    #     CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION == 4
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value: 16
    # Legal values: 0 to 16
};

# Priority level of CAN module 0 transmit interrupt
# This option sets CAN module 0
# device transmit interrupt priority level.  We
# support up to 17 interrupt levels. Interrupts
# 0 - 15 are vectored interrupt
# requests. Priority 16 indicates a non vectored
# IRQ. Vectored IRQs have the higher priority
# then non vectored IRQs and slot 0 has the
# highest priority and slot 15 has the lowest.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN0_TX_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN0 is not active
    # ActiveIf constraint: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    #     CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION == 4
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value: 16
    # Legal values: 0 to 16
};

# <
# Platform provides CAN 1
# This interface will be implemented if the specific LPC2xxx
# processor being used has on-chip CAN 1, and if
# that CAN module is accessible on the target hardware.
#
cdl_interface CYGINT_DEVS_CAN_LPC2XXX_CAN1 {
    # Implemented by CYGPKG_HAL_ARM_LPC24XX_EA2468, active, enabled
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # component CYGPKG_DEVS_CAN_LPC2XXX_CAN1
    #     ActiveIf: CYGINT_DEVS_CAN_LPC2XXX_CAN1
};

# Allow access to the on-chip CAN 1 via a CAN driver
# If the application needs to access the on-chip CAN
# module 1 via an eCos CAN driver then
# this option should be enabled.
#
cdl_component CYGPKG_DEVS_CAN_LPC2XXX_CAN1 {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active
    # ActiveIf constraint: CYGINT_DEVS_CAN_LPC2XXX_CAN1
    #     CYGINT_DEVS_CAN_LPC2XXX_CAN1 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Device name for CAN module 1
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGPKG_DEVS_CAN_LPC2XXX_CAN1_NAME {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/can1\""
    # value_source default
    # Default value: "\"/dev/can1\""
};

# Default baud rate for CAN module 1
# This option determines the initial baud rate in
# KBaud for CAN module 1
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN1_KBAUD {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100
    # value_source default
    # Default value: 100
    # Legal values:  10 20 50 100 125 250 500 800 1000 "AUTO"
};

# Size of TX Queue for the CAN module 1 driver
# The CAN device driver will run in interrupt mode
# and will perform buffering of outgoing data. This
# option controls the number of CAN messages the TX
# queue can store.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN1_QUEUESIZE_TX {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
    # Legal values: 1 to 1024
};

# Size of RX Queue for the CAN module 1 driver
# The CAN device driver will run in interrupt mode
# and will perform buffering of incoming data. This
# option controls the number of CAN events the RX
# queue can store.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN1_QUEUESIZE_RX {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 64
    # value_source default
    # Default value: 64
    # Legal values: 8 to 4096
};

# Acceptance filter startup configuration
# Normally the acceptance filter will be configured
# at startup time to receive all available CAN
# messages. The application can setup single message
# filters during runtime later. If RX_NONE is
# selected then the acceptance filter for this
# channel is configured to receive no CAN message
# identifier.
#
cdl_option CYGOPT_DEVS_CAN_LPC2XXX_CAN1_ACCFILT_STARTUP_CFG {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN1 is not active
    # ActiveIf constraint: CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT
    #     CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value RX_ALL
    # value_source default
    # Default value: RX_ALL
    # Legal values: "RX_ALL" "RX_NONE"
};

# Priority level of CAN module 1 receive interrupt
# This option sets CAN module 1
# device receive interrupt priority level.  We
# support up to 17 interrupt levels. Interrupts
# 0 - 15 are vectored interrupt
# requests. Priority 16 indicates a non vectored
# IRQ. Vectored IRQs have the higher priority
# then non vectored IRQs and slot 0 has the
# highest priority and slot 15 has the lowest.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN1_RX_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN1 is not active
    # ActiveIf constraint: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    #     CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION == 4
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value: 16
    # Legal values: 0 to 16
};

# Priority level of CAN module 1 transmit interrupt
# This option sets CAN module 1
# device transmit interrupt priority level.  We
# support up to 17 interrupt levels. Interrupts
# 0 - 15 are vectored interrupt
# requests. Priority 16 indicates a non vectored
# IRQ. Vectored IRQs have the higher priority
# then non vectored IRQs and slot 0 has the
# highest priority and slot 15 has the lowest.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN1_TX_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN1 is not active
    # ActiveIf constraint: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    #     CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION == 4
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value: 16
    # Legal values: 0 to 16
};

# <
# Platform provides CAN 2
# This interface will be implemented if the specific LPC2xxx
# processor being used has on-chip CAN 2, and if
# that CAN module is accessible on the target hardware.
#
cdl_interface CYGINT_DEVS_CAN_LPC2XXX_CAN2 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGPKG_DEVS_CAN_LPC2XXX_CAN2
    #     ActiveIf: CYGINT_DEVS_CAN_LPC2XXX_CAN2
};

# Allow access to the on-chip CAN 2 via a CAN driver
# If the application needs to access the on-chip CAN
# module 2 via an eCos CAN driver then
# this option should be enabled.
#
cdl_component CYGPKG_DEVS_CAN_LPC2XXX_CAN2 {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active
    # ActiveIf constraint: CYGINT_DEVS_CAN_LPC2XXX_CAN2
    #     CYGINT_DEVS_CAN_LPC2XXX_CAN2 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Device name for CAN module 2
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGPKG_DEVS_CAN_LPC2XXX_CAN2_NAME {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN2 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/can2\""
    # value_source default
    # Default value: "\"/dev/can2\""
};

# Default baud rate for CAN module 2
# This option determines the initial baud rate in
# KBaud for CAN module 2
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN2_KBAUD {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN2 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100
    # value_source default
    # Default value: 100
    # Legal values:  10 20 50 100 125 250 500 800 1000 "AUTO"
};

# Size of TX Queue for the CAN module 2 driver
# The CAN device driver will run in interrupt mode
# and will perform buffering of outgoing data. This
# option controls the number of CAN messages the TX
# queue can store.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN2_QUEUESIZE_TX {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN2 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
    # Legal values: 1 to 1024
};

# Size of RX Queue for the CAN module 2 driver
# The CAN device driver will run in interrupt mode
# and will perform buffering of incoming data. This
# option controls the number of CAN events the RX
# queue can store.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN2_QUEUESIZE_RX {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN2 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 64
    # value_source default
    # Default value: 64
    # Legal values: 8 to 4096
};

# Acceptance filter startup configuration
# Normally the acceptance filter will be configured
# at startup time to receive all available CAN
# messages. The application can setup single message
# filters during runtime later. If RX_NONE is
# selected then the acceptance filter for this
# channel is configured to receive no CAN message
# identifier.
#
cdl_option CYGOPT_DEVS_CAN_LPC2XXX_CAN2_ACCFILT_STARTUP_CFG {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN2 is not active
    # ActiveIf constraint: CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT
    #     CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value RX_ALL
    # value_source default
    # Default value: RX_ALL
    # Legal values: "RX_ALL" "RX_NONE"
};

# Priority level of CAN module 2 receive interrupt
# This option sets CAN module 2
# device receive interrupt priority level.  We
# support up to 17 interrupt levels. Interrupts
# 0 - 15 are vectored interrupt
# requests. Priority 16 indicates a non vectored
# IRQ. Vectored IRQs have the higher priority
# then non vectored IRQs and slot 0 has the
# highest priority and slot 15 has the lowest.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN2_RX_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN2 is not active
    # ActiveIf constraint: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    #     CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION == 4
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value: 16
    # Legal values: 0 to 16
};

# Priority level of CAN module 2 transmit interrupt
# This option sets CAN module 2
# device transmit interrupt priority level.  We
# support up to 17 interrupt levels. Interrupts
# 0 - 15 are vectored interrupt
# requests. Priority 16 indicates a non vectored
# IRQ. Vectored IRQs have the higher priority
# then non vectored IRQs and slot 0 has the
# highest priority and slot 15 has the lowest.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN2_TX_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN2 is not active
    # ActiveIf constraint: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    #     CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION == 4
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value: 16
    # Legal values: 0 to 16
};

# <
# Platform provides CAN 3
# This interface will be implemented if the specific LPC2xxx
# processor being used has on-chip CAN 3, and if
# that CAN module is accessible on the target hardware.
#
cdl_interface CYGINT_DEVS_CAN_LPC2XXX_CAN3 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGPKG_DEVS_CAN_LPC2XXX_CAN3
    #     ActiveIf: CYGINT_DEVS_CAN_LPC2XXX_CAN3
};

# Allow access to the on-chip CAN 3 via a CAN driver
# If the application needs to access the on-chip CAN
# module 3 via an eCos CAN driver then
# this option should be enabled.
#
cdl_component CYGPKG_DEVS_CAN_LPC2XXX_CAN3 {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active
    # ActiveIf constraint: CYGINT_DEVS_CAN_LPC2XXX_CAN3
    #     CYGINT_DEVS_CAN_LPC2XXX_CAN3 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Device name for CAN module 3
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGPKG_DEVS_CAN_LPC2XXX_CAN3_NAME {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN3 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/can3\""
    # value_source default
    # Default value: "\"/dev/can3\""
};

# Default baud rate for CAN module 3
# This option determines the initial baud rate in
# KBaud for CAN module 3
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN3_KBAUD {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN3 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100
    # value_source default
    # Default value: 100
    # Legal values:  10 20 50 100 125 250 500 800 1000 "AUTO"
};

# Size of TX Queue for the CAN module 3 driver
# The CAN device driver will run in interrupt mode
# and will perform buffering of outgoing data. This
# option controls the number of CAN messages the TX
# queue can store.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN3_QUEUESIZE_TX {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN3 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
    # Legal values: 1 to 1024
};

# Size of RX Queue for the CAN module 3 driver
# The CAN device driver will run in interrupt mode
# and will perform buffering of incoming data. This
# option controls the number of CAN events the RX
# queue can store.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN3_QUEUESIZE_RX {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN3 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 64
    # value_source default
    # Default value: 64
    # Legal values: 8 to 4096
};

# Acceptance filter startup configuration
# Normally the acceptance filter will be configured
# at startup time to receive all available CAN
# messages. The application can setup single message
# filters during runtime later. If RX_NONE is
# selected then the acceptance filter for this
# channel is configured to receive no CAN message
# identifier.
#
cdl_option CYGOPT_DEVS_CAN_LPC2XXX_CAN3_ACCFILT_STARTUP_CFG {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN3 is not active
    # ActiveIf constraint: CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT
    #     CYGOPT_DEVS_CAN_LPC2XXX_RUNTIME_ACCFILT == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value RX_ALL
    # value_source default
    # Default value: RX_ALL
    # Legal values: "RX_ALL" "RX_NONE"
};

# Priority level of CAN module 3 receive interrupt
# This option sets CAN module 3
# device receive interrupt priority level.  We
# support up to 17 interrupt levels. Interrupts
# 0 - 15 are vectored interrupt
# requests. Priority 16 indicates a non vectored
# IRQ. Vectored IRQs have the higher priority
# then non vectored IRQs and slot 0 has the
# highest priority and slot 15 has the lowest.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN3_RX_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN3 is not active
    # ActiveIf constraint: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    #     CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION == 4
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value: 16
    # Legal values: 0 to 16
};

# Priority level of CAN module 3 transmit interrupt
# This option sets CAN module 3
# device transmit interrupt priority level.  We
# support up to 17 interrupt levels. Interrupts
# 0 - 15 are vectored interrupt
# requests. Priority 16 indicates a non vectored
# IRQ. Vectored IRQs have the higher priority
# then non vectored IRQs and slot 0 has the
# highest priority and slot 15 has the lowest.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_CAN3_TX_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX_CAN3 is not active
    # ActiveIf constraint: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    #     CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION == 4
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value: 16
    # Legal values: 0 to 16
};

# <
# Priority level of CAN error interrupt
# This option sets CAN device error interrupt priority level.
# We support up to 17 interrupt levels. Interrupts 0 - 15
# are vectored interrupt requests. Priority 16 indicates a
# non vectored IRQ. Vectored IRQs have the higher priority
# then non vectored IRQs and slot 0 has the highest priority
# and slot 15 has the lowest.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_ERR_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active
    # ActiveIf constraint: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    #     CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION == 4
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value: 16
    # Legal values: 0 to 16
};

# Priority level of all CAN interrupts
# The LPC24xx family uses one single interrupt vector for
# all CAN interrupts of all CAN channels. This if very 
# different from former LPC2xxx variants where each CAN
# channels has its own interrupt vectors for transmit
# and receive interrupts. There are 16 priority 
# levels, corresponding to the values 0 through  15 decimal, 
# of which 15 is the lowest priority. The reset value of 
# these interrupt priority registers defaults all interrupts 
# to the lowest priority 15, allowing a single write to 
# elevate the priority of an individual interrupt.
#
cdl_option CYGNUM_DEVS_CAN_LPC2XXX_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active
    # ActiveIf constraint: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION >= 4
    #     CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION == 4
    #   --> 1

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 15
    # value_source default
    # Default value: 15
    # Legal values: 0 to 15
};

# CAN LPC2xxx device driver tests
# This option specifies the set of tests for the LPC2xxx 
# CAN device driver.
#
cdl_option CYGPKG_DEVS_CAN_LPC2XXX_TESTS {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active

    # Calculated value:  "tests/can_busload tests/can_rx_tx" 
    # Flavor: data
    # Current_value: tests/can_busload tests/can_rx_tx
};

# Build extra CAN tests
# This option enables the building of some extra tests which
# can be used when testing / debugging the LPC2xxx CAN driver. These
# are not built by default since they do not use the dedicated
# testing infrastructure. All tests require a properly configured
# CAN network with a second CAN node that can send and receive
# CAN messages.
#
cdl_option CYGBLD_DEVS_CAN_LPC2XXX_EXTRA_TESTS {
    # This option is not active
    # The parent CYGPKG_DEVS_CAN_LPC2XXX is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# EA LPC2468 OEM board FLASH memory support
# FLASH memory device support for Embedded Artists LPC2468 OEM board
#
cdl_package CYGPKG_DEVS_FLASH_EA2468 {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_FLASH
    #     CYGPKG_IO_FLASH (unknown) == 0
    #   --> 0

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
    # Requires: CYGPKG_HAL_ARM_LPC24XX
    #     CYGPKG_HAL_ARM_LPC24XX == v3_0
    #   --> 1
    # Requires: !CYGSEM_REDBOOT_FLASH_COMBINED_FIS_AND_CONFIG
    #     CYGSEM_REDBOOT_FLASH_COMBINED_FIS_AND_CONFIG == 0
    #   --> 1
    # Requires: CYGNUM_REDBOOT_FLASH_CONFIG_SIZE <= 4096
    #     CYGNUM_REDBOOT_FLASH_CONFIG_SIZE == 0
    #   --> 1
    # Requires: (CYGNUM_REDBOOT_FIS_DIRECTORY_ENTRY_SIZE *
    #                      CYGNUM_REDBOOT_FIS_DIRECTORY_ENTRY_COUNT) <= 4096
    #     CYGNUM_REDBOOT_FIS_DIRECTORY_ENTRY_SIZE == 0
    #     CYGNUM_REDBOOT_FIS_DIRECTORY_ENTRY_COUNT == 0
    #   --> 1
};

# >
# Generic SST 39VFXXX driver required
#
cdl_interface CYGINT_DEVS_FLASH_SST_39VFXXX_REQUIRED {
    # Implemented by CYGPKG_DEVS_FLASH_EA2468, inactive, enabled
    # This option is not active
    # The parent CYGPKG_DEVS_FLASH_EA2468 is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # package CYGPKG_DEVS_FLASH_SST_39VFXXX
    #     ActiveIf: CYGINT_DEVS_FLASH_SST_39VFXXX_REQUIRED
};

# <
# SST 39VFXXX FLASH memory support
# FLASH memory device support for SST 39VFXXX
#
cdl_package CYGPKG_DEVS_FLASH_SST_39VFXXX {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_FLASH
    #     CYGPKG_IO_FLASH (unknown) == 0
    #   --> 0
    # ActiveIf constraint: CYGINT_DEVS_FLASH_SST_39VFXXX_REQUIRED
    #     CYGINT_DEVS_FLASH_SST_39VFXXX_REQUIRED == 0
    #   --> 0

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
};

# ADC hardware device driver for LPC24xx family of ARM controllers
# This package provides a generic ADC device driver for the on-chip
# ADC peripherals in LPX24xx processors.
#
cdl_package CYGPKG_DEVS_ADC_ARM_LPC24XX {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_ADC_DEVICES
    #     CYGPKG_IO_ADC_DEVICES (unknown) == 0
    #   --> 0
    # ActiveIf constraint: CYGPKG_HAL_ARM_LPC24XX
    #     CYGPKG_HAL_ARM_LPC24XX == v3_0
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
    # Requires: CYGNUM_IO_ADC_SAMPLE_SIZE <= 10
    #     CYGNUM_IO_ADC_SAMPLE_SIZE (unknown) == 0
    #   --> 1
    # Requires: CYGNUM_IO_ADC_SAMPLE_SIZE >= 3
    #     CYGNUM_IO_ADC_SAMPLE_SIZE (unknown) == 0
    #   --> 0
};

# >
# Number of ADC channels
#
cdl_interface CYGINT_DEVS_ADC_ARM_LPC24XX_CHANNELS {
    # Implemented by CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL0, inactive, enabled
    # Implemented by CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL1, inactive, disabled
    # Implemented by CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL2, inactive, disabled
    # Implemented by CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL3, inactive, disabled
    # Implemented by CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL4, inactive, disabled
    # Implemented by CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL5, inactive, disabled
    # Implemented by CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL6, inactive, disabled
    # Implemented by CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL7, inactive, disabled
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
};

# Driver debug output level
# This option specifies the level of debug data output by
# the LPC24XX ADC device driver. A value of 0 signifies
# no debug data output; 1 signifies normal debug data
# output. If an overrun occurred then this can only be
# detected by debug output messages.
#
cdl_option CYGPKG_DEVS_ADC_ARM_LPC24XX_DEBUG_LEVEL {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 1 2
};

# Interrupt priority
# This option selects the interrupt priority for the ADC
# interrupts.  Timer 1 is used for generating the sample
# clock. So this option configures the interrupt priority
# for timer 1. There are 16 priority levels corresponding to
# the values 0 through 15 decimal, of which 15 is the lowest
# priority. The reset value of these registers defaults all
# interrupts to the lowest priority, allowing a single write
# to elevate the priority of an individual interrupt.
#
cdl_option CYGNUM_DEVS_ADC_ARM_LPC24XX_INTPRIO {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 15
    # value_source default
    # Default value: 15
    # Legal values: 0 to 15
};

# Default sample rate
# The driver will be initialized with the default sample rate.
# If you raise the default sample rate you might need to increase
# the buffer size for each channel.
#
cdl_option CYGNUM_DEVS_ADC_ARM_LPC24XX_DEFAULT_RATE {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100
    # value_source default
    # Default value: 100
    # Legal values: 1 to 10000
};

# Access ADC channel 0
# If the application needs to access the on-chip ADC
# channel 0 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL0 {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL0_NAME {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc00\""
    # value_source default
    # Default value: "\"/dev/adc00\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM depends on the
# sample size and on the number of samples. If the
# sample size is <= 8 bit the the required RAM =
# size of data buffer. If the sample size is 9 or 10
# bit then required RAM = size of data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL0_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 512
    # value_source default
    # Default value: 512
    # Legal values: 0x01 to 0x2000000
};

# <
# Access ADC channel 1
# If the application needs to access the on-chip ADC
# channel 1 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL1 {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL1_NAME {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL1 is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc01\""
    # value_source default
    # Default value: "\"/dev/adc01\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM depends on the
# sample size and on the number of samples. If the
# sample size is <= 8 bit the the required RAM =
# size of data buffer. If the sample size is 9 or 10
# bit then required RAM = size of data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL1_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL1 is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 512
    # value_source default
    # Default value: 512
    # Legal values: 0x01 to 0x2000000
};

# <
# Access ADC channel 2
# If the application needs to access the on-chip ADC
# channel 2 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL2 {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL2_NAME {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL2 is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc02\""
    # value_source default
    # Default value: "\"/dev/adc02\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM depends on the
# sample size and on the number of samples. If the
# sample size is <= 8 bit the the required RAM =
# size of data buffer. If the sample size is 9 or 10
# bit then required RAM = size of data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL2_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL2 is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 512
    # value_source default
    # Default value: 512
    # Legal values: 0x01 to 0x2000000
};

# <
# Access ADC channel 3
# If the application needs to access the on-chip ADC
# channel 3 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL3 {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL3_NAME {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL3 is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc03\""
    # value_source default
    # Default value: "\"/dev/adc03\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM depends on the
# sample size and on the number of samples. If the
# sample size is <= 8 bit the the required RAM =
# size of data buffer. If the sample size is 9 or 10
# bit then required RAM = size of data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL3_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL3 is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 512
    # value_source default
    # Default value: 512
    # Legal values: 0x01 to 0x2000000
};

# <
# Access ADC channel 4
# If the application needs to access the on-chip ADC
# channel 4 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL4 {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL4_NAME {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL4 is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc04\""
    # value_source default
    # Default value: "\"/dev/adc04\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM depends on the
# sample size and on the number of samples. If the
# sample size is <= 8 bit the the required RAM =
# size of data buffer. If the sample size is 9 or 10
# bit then required RAM = size of data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL4_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL4 is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 512
    # value_source default
    # Default value: 512
    # Legal values: 0x01 to 0x2000000
};

# <
# Access ADC channel 5
# If the application needs to access the on-chip ADC
# channel 5 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL5 {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL5_NAME {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL5 is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc05\""
    # value_source default
    # Default value: "\"/dev/adc05\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM depends on the
# sample size and on the number of samples. If the
# sample size is <= 8 bit the the required RAM =
# size of data buffer. If the sample size is 9 or 10
# bit then required RAM = size of data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL5_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL5 is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 512
    # value_source default
    # Default value: 512
    # Legal values: 0x01 to 0x2000000
};

# <
# Access ADC channel 6
# If the application needs to access the on-chip ADC
# channel 6 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL6 {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL6_NAME {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL6 is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL6 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc06\""
    # value_source default
    # Default value: "\"/dev/adc06\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM depends on the
# sample size and on the number of samples. If the
# sample size is <= 8 bit the the required RAM =
# size of data buffer. If the sample size is 9 or 10
# bit then required RAM = size of data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL6_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL6 is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL6 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 512
    # value_source default
    # Default value: 512
    # Legal values: 0x01 to 0x2000000
};

# <
# Access ADC channel 7
# If the application needs to access the on-chip ADC
# channel 7 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL7 {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL7_NAME {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL7 is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL7 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc07\""
    # value_source default
    # Default value: "\"/dev/adc07\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM depends on the
# sample size and on the number of samples. If the
# sample size is <= 8 bit the the required RAM =
# size of data buffer. If the sample size is 9 or 10
# bit then required RAM = size of data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_ARM_LPC24XX_CHANNEL7_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL7 is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX_CHANNEL7 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 512
    # value_source default
    # Default value: 512
    # Legal values: 0x01 to 0x2000000
};

# <
# Tests for LPC24xx ADC driver
# This option specifies the set of tests for the LPC24xx 
# ADC device driver.
#
cdl_option CYGPKG_DEVS_ADC_ARM_LPC24XX_TESTS {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_ARM_LPC24XX is not active

    # Calculated value:  "tests/lpc24xx_adc_test" 
    # Flavor: data
    # Current_value: tests/lpc24xx_adc_test
};

# <
# ISO C library string functions
# doc: ref/libc.html
# This package provides string functions specified by the
# ISO C standard - ISO/IEC 9899:1990.
#
cdl_package CYGPKG_LIBC_STRING {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
    # Requires:  CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires:  CYGBLD_ISO_STRING_MEMFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRING_MEMFUNCS_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires:  CYGBLD_ISO_STRING_STRFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRING_STRFUNCS_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires:  CYGBLD_ISO_STRTOK_R_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRTOK_R_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == v3_0
    #   --> 1
};

# >
# Inline versions of <string.h> functions
# This option chooses whether some of the
# particularly simple string functions from
# <string.h> are available as inline
# functions. This may improve performance, and as
# the functions are small, may even improve code
# size.
#
cdl_option CYGIMP_LIBC_STRING_INLINES {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Optimize string functions for code size
# This option tries to reduce string function
# code size at the expense of execution speed. The
# same effect can be produced if the code is
# compiled with the -Os option to the compiler.
#
cdl_option CYGIMP_LIBC_STRING_PREFER_SMALL_TO_FAST {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Provide BSD compatibility functions
# Enabling this option causes various compatibility functions
# commonly found in the BSD UNIX operating system to be included.
# These are functions such as bzero, bcmp, bcopy, bzero, strcasecmp,
# strncasecmp, index, rindex and swab.
#
cdl_option CYGFUN_LIBC_STRING_BSD_FUNCS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # The inferred value should not be edited directly.
    inferred_value 0
    # value_source inferred
    # Default value: 1
    # Requires:  CYGBLD_ISO_STRING_BSD_FUNCS_HEADER ==  "<cyg/libc/string/bsdstring.h>" 
    #     CYGBLD_ISO_STRING_BSD_FUNCS_HEADER == <cyg/libc/string/bsdstring.h>
    #   --> 1
    # Requires: CYGINT_ISO_CTYPE
    #     CYGINT_ISO_CTYPE == 0
    #   --> 0
};

# strtok
# These options control the behaviour of the
# strtok() and strtok_r() string tokenization
# functions.
#
cdl_component CYGPKG_LIBC_STRING_STRTOK {
    # There is no associated value.
};

# >
# Per-thread strtok()
# This option controls whether the string function
# strtok() has its state recorded on a per-thread
# basis rather than global. If this option is
# disabled, some per-thread space can be saved.
# Note there is also a POSIX-standard strtok_r()
# function to achieve a similar effect with user
# support. Enabling this option will use one slot
# of kernel per-thread data. You should ensure you
# have enough slots configured for all your
# per-thread data.
#
cdl_option CYGSEM_LIBC_STRING_PER_THREAD_STRTOK {
    # This option is not active
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGVAR_KERNEL_THREADS_DATA
    #     CYGVAR_KERNEL_THREADS_DATA (unknown) == 0
    #   --> 0
    # Requires: CYGVAR_KERNEL_THREADS_DATA
    #     CYGVAR_KERNEL_THREADS_DATA (unknown) == 0
    #   --> 0
};

# Tracing level
# Trace verbosity level for debugging the <string.h>
# functions strtok() and strtok_r(). Increase this
# value to get additional trace output.
#
cdl_option CYGNUM_LIBC_STRING_STRTOK_TRACE_LEVEL {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to 1
};

# <
# strdup
# This option indicates whether strdup() is to be supported.
#
cdl_option CYGFUN_LIBC_STRING_STRDUP {
    # This option is not active
    # ActiveIf constraint: CYGINT_ISO_MALLOC
    #     CYGINT_ISO_MALLOC == 0
    #   --> 0

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# C library string functions build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_LIBC_STRING_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the C library. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_LIBC_STRING_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the C library. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_LIBC_STRING_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# C library string function tests
# This option specifies the set of tests for the C library
# string functions.
#
cdl_option CYGPKG_LIBC_STRING_TESTS {
    # Calculated value:  "tests/memchr tests/memcmp1 tests/memcmp2 tests/memcpy1 tests/memcpy2 tests/memmove1 tests/memmove2 tests/memset tests/strcat1 tests/strcat2 tests/strchr tests/strcmp1 tests/strcmp2 tests/strcoll1 tests/strcoll2 tests/strcpy1 tests/strcpy2 tests/strcspn tests/strcspn tests/strlen tests/strncat1 tests/strncat2 tests/strncpy1 tests/strncpy2 tests/strpbrk tests/strrchr tests/strspn tests/strstr tests/strtok tests/strxfrm1 tests/strxfrm2" 
    # Flavor: data
    # Current_value: tests/memchr tests/memcmp1 tests/memcmp2 tests/memcpy1 tests/memcpy2 tests/memmove1 tests/memmove2 tests/memset tests/strcat1 tests/strcat2 tests/strchr tests/strcmp1 tests/strcmp2 tests/strcoll1 tests/strcoll2 tests/strcpy1 tests/strcpy2 tests/strcspn tests/strcspn tests/strlen tests/strncat1 tests/strncat2 tests/strncpy1 tests/strncpy2 tests/strpbrk tests/strrchr tests/strspn tests/strstr tests/strtok tests/strxfrm1 tests/strxfrm2
};

# <
# <
# Common ethernet support
# doc: ref/io-eth-drv-generic.html
# Platform independent ethernet drivers
#
cdl_package CYGPKG_IO_ETH_DRIVERS {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0

    # The following properties are affected by this value
    # package CYGPKG_DEVS_ETH_PHY
    #     ActiveIf: CYGPKG_IO_ETH_DRIVERS
    # package CYGPKG_DEVS_ETH_ARM_LPC2XXX
    #     ActiveIf: CYGPKG_IO_ETH_DRIVERS
    # component CYGPKG_REDBOOT_NETWORKING
    #     ActiveIf: CYGPKG_IO_ETH_DRIVERS
};

# >
# Network drivers
#
cdl_interface CYGHWR_NET_DRIVERS {
    # Implemented by CYGPKG_DEVS_ETH_ARM_LPC2XXX, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGDAT_REDBOOT_DEFAULT_NETWORK_DEVICE
    #     ActiveIf:  CYGHWR_NET_DRIVERS > 1 
    # option CYGSEM_REDBOOT_NETWORK_INIT_ONE_DEVICE
    #     ActiveIf:  CYGHWR_NET_DRIVERS > 1 
};

# Driver supports multicast addressing
# This interface defines whether or not a driver can handle
# requests for multicast addressing.
#
cdl_interface CYGINT_IO_ETH_MULTICAST {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Support printing driver debug information
# Selecting this option will include code to allow the driver to
# print lots of information on diagnostic output such as full
# packet dumps.
#
cdl_component CYGDBG_IO_ETH_DRIVERS_DEBUG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Driver debug output verbosity
# The value of this option indicates the default verbosity
# level of debugging output. 0 means no debugging output
# is made by default. Higher values indicate higher verbosity.
# The verbosity level may also be changed at run time by
# changing the variable cyg_io_eth_net_debug.
#
cdl_option CYGDBG_IO_ETH_DRIVERS_DEBUG_VERBOSITY {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Size of scatter-gather I/O lists
# A scatter-gather list is used to pass requests to/from
# the physical device driver.  This list can typically be
# small, as the data is normally already packed into reasonable
# chunks.
#
cdl_option CYGNUM_IO_ETH_DRIVERS_SG_LIST_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
};

# Support for standard eCos TCP/IP stack.
#
cdl_component CYGPKG_IO_ETH_DRIVERS_NET {
    # This option is not active
    # ActiveIf constraint: CYGPKG_NET
    #     CYGPKG_NET (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGINT_ISO_STRING_STRFUNCS
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 1
};

# >
# Warn when there are no more mbufs
# Warnings about running out of mbufs are printed to the
# diagnostic output channel via diag_printf() if this option
# is enabled.  Mbufs are the network stack's basic dynamic
# memory objects that hold all packets in transit; running
# out is bad for performance but not fatal, not a crash.
# You might want to turn off the warnings to preserve realtime
# properties of the system even in extremis.
#
cdl_component CYGPKG_IO_ETH_DRIVERS_WARN_NO_MBUFS {
    # This option is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_NET is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Simulate network failures for testing
# This package contains a suite of simulated failure modes
# for the ethernet device layer, including dropping and/or
# corrupting received packets, dropping packets queued for
# transmission, and simulating a complete network break.
# It requires the kernel as a source of time information.
#
cdl_component CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES {
    # This option is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_NET is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Drop incoming packets (percentage)
#
cdl_option CYGPKG_IO_ETH_DRIVERS_SIMULATE_DROP_RX {
    # This option is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is disabled

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 10
    # value_source default
    # Default value: 1 10
    # Legal values: 10 50 80
};

# Corrupt incoming packets (percentage)
#
cdl_option CYGPKG_IO_ETH_DRIVERS_SIMULATE_CORRUPT_RX {
    # This option is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is disabled

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 10
    # value_source default
    # Default value: 1 10
    # Legal values: 10 50 80
};

# Drop outgoing packets (percentage)
#
cdl_option CYGPKG_IO_ETH_DRIVERS_SIMULATE_DROP_TX {
    # This option is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is disabled

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 10
    # value_source default
    # Default value: 1 10
    # Legal values: 10 50 80
};

# Simulate a line cut from time to time
# This option causes the system to drop all packets for a
# short random period (10s of seconds), and then act
# normally for up to 4 times that long.  This simulates your
# sysadmin fiddling with plugs in the network switch
# cupboard.
#
cdl_option CYGPKG_IO_ETH_DRIVERS_SIMULATE_LINE_CUT {
    # This option is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# <
# Support for stand-alone network stack.
#
cdl_component CYGPKG_IO_ETH_DRIVERS_STAND_ALONE {
    # ActiveIf constraint: !CYGPKG_NET
    #     CYGPKG_NET (unknown) == 0
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGINT_ISO_STRING_MEMFUNCS
    #     CYGINT_ISO_STRING_MEMFUNCS == 1
    #   --> 1
};

# >
# Pass packets to an alternate stack
# Define this to allow packets seen by this layer to be
# passed on to the previous logical layer, i.e. when
# stand-alone processing replaces system (eCos) processing.
#
cdl_option CYGSEM_IO_ETH_DRIVERS_PASS_PACKETS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  0 != CYGPKG_REDBOOT_NETWORKING 
    #     CYGPKG_REDBOOT_NETWORKING == 1
    #   --> 1
};

# Number of [network] buffers
# This option is used to allocate space to buffer incoming network
# packets.  These buffers are used to hold data until they can be
# logically processed by higher layers.
#
cdl_option CYGNUM_IO_ETH_DRIVERS_NUM_PKT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4
    # value_source default
    # Default value: 4
    # Legal values: 2 to 32
};

# Show driver warnings
# Selecting this option will allows the stand-alone ethernet driver
# to display warnings on the system console when incoming network
# packets are being discarded due to lack of buffer space.
#
cdl_option CYGSEM_IO_ETH_DRIVERS_WARN {
    # ActiveIf constraint: CYGPKG_REDBOOT
    #     CYGPKG_REDBOOT == v3_0
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Support for lwIP network stack.
#
cdl_component CYGPKG_IO_ETH_DRIVERS_LWIP {
    # This option is not active
    # ActiveIf constraint: CYGPKG_NET_LWIP
    #     CYGPKG_NET_LWIP (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: !CYGPKG_NET
    #     CYGPKG_NET (unknown) == 0
    #   --> 1
};

# Interrupt support required
# This interface is used to indicate to the low
# level device drivers that interrupt driven operation
# is required by higher layers.
#
cdl_interface CYGINT_IO_ETH_INT_SUPPORT_REQUIRED {
    # Implemented by CYGPKG_IO_ETH_DRIVERS_NET, inactive, enabled
    # Implemented by CYGPKG_IO_ETH_DRIVERS_LWIP, inactive, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0

    # The following properties are affected by this value
};

# Common ethernet support build options
#
cdl_component CYGPKG_IO_ETH_DRIVERS_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the common ethernet support package. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_IO_ETH_DRIVERS_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "-D_KERNEL -D__ECOS"
    # value_source default
    # Default value: "-D_KERNEL -D__ECOS"
};

# <
# Ethernet transciever (PHY) support
# doc: ref/io-eth-phy-generic.html
# API for ethernet PHY devices
#
cdl_package CYGPKG_DEVS_ETH_PHY {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # ActiveIf constraint: CYGPKG_IO_ETH_DRIVERS
    #     CYGPKG_IO_ETH_DRIVERS == v3_0
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    #     CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT == 1
    #   --> 1

    # The following properties are affected by this value
    # package CYGPKG_HAL_ARM_LPC24XX_EA2468
    #     Requires:  is_active(CYGPKG_DEVS_ETH_PHY) implies
    #                         (1 == CYGHWR_DEVS_ETH_PHY_KSZ8001) 
};

# >
# Enable driver debugging
# Enables the diagnostic debug messages on the
# console device.
#
cdl_option CYGDBG_DEVS_ETH_PHY {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: 0
};

# Time period (seconds) to wait for auto-negotiation
# The length of time to wait for auto-negotiation to complete
# before giving up and declaring the link dead/missing.
#
cdl_option CYGINT_DEVS_ETH_PHY_AUTO_NEGOTIATION_TIME {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 5
    # value_source default
    # Default value: 5
};

# NSDP83847
# Include support for National Semiconductor DP83847 DsPHYTER II
#
cdl_option CYGHWR_DEVS_ETH_PHY_DP83847 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# AMD 79C874
# Include support for AMD 79C874 NetPHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_AM79C874 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Intel LXT972
# Include support for Intel LXT972xxx PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_INLXT972 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# ICS 1890
# Include support for ICS 1890 PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_ICS1890 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# ICS 1892
# Include support for ICS 1892 PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_ICS1892 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# ICS 1893
# Include support for ICS 1893 and 1893AF PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_ICS1893 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Davicom DM9161A
# Include support for the Davicom DM9161A PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_DM9161A {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Micrel KS8721
# Include support for the Micrel KS8721 PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_KS8721 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Micrel KSZ8001
# Include support for the Micrel KSZ8001 PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_KSZ8001 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # The inferred value should not be edited directly.
    inferred_value 1
    # value_source inferred
    # Default value: 0

    # The following properties are affected by this value
    # package CYGPKG_HAL_ARM_LPC24XX_EA2468
    #     Requires:  is_active(CYGPKG_DEVS_ETH_PHY) implies
    #                         (1 == CYGHWR_DEVS_ETH_PHY_KSZ8001) 
};

# Micrel KSZ8041
# Include support for the Micrel KSZ8041 PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_KSZ8041 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# NXP LPC2xxx ethernet driver
# Ethernet driver for NXP LPC2xxx core. This has been tested with the 
# LPC2468, but should be easy to get to work on other LPC2xxx cores that
# have the EMAC peripheral.
#
cdl_package CYGPKG_DEVS_ETH_ARM_LPC2XXX {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # ActiveIf constraint: CYGPKG_IO_ETH_DRIVERS
    #     CYGPKG_IO_ETH_DRIVERS == v3_0
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
};

# >
# Driver debug output level
# This option specifies the level of debug data output by
# the LPC2XXX ethernet device driver. A value of 0 signifies
# no debug data output; 1 signifies normal debug data
# output; and 2 signifies maximum debug data output (not
# suitable when GDB and application are sharing an ethernet
# port). Debug level 3 is a special kind of debug level. 
# It prints the same debug messages like level 2 but it forces 
# the debug output to the second serial port. This is 
# required for debugging the ethernet driver if the stand-alone 
# network stack from redboot is used. It is possible to print 
# debug messages while an application is loaded and run via GDB
# TCP/IP connection
#
cdl_option CYGPKG_DEVS_ETH_ARM_LPC2XXX_DEBUG_LEVEL {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Legal values: 0 1 2 3
};

# Interrupt priority
# This option selects the interrupt priority for the EMAC interrupts. 
# There are 16 priority levels corresponding to the values 0 through 
# 15 decimal, of which 15 is the lowest priority. The reset value of 
# these registers defaults all interrupts to the lowest priority, 
# allowing a single write to elevate the priority of an 
# individual interrupt.
#
cdl_option CYGPKG_DEVS_ETH_ARM_LPC2XXX_INTPRIO {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 15
    # value_source default
    # Default value: 15
    # Legal values: 0 to 15
};

# Number of RX buffers
# Number of receive buffers. The number of receive buffers defines 
# the number of descriptors in the descriptor array. Each receive 
# descriptor element in the descriptor array has an associated status 
# field which consists of the HashCRC word and Status Information 
# word. Because of a device errata the status words are updated 
# incorrectly if the number of descriptors set is greater than or 
# equal to 5. Therefore the Rx buffers are limited to a maximum 
# of 4. Each buffer is 1536 (0x600) bytes in size
#
cdl_option CYGNUM_DEVS_ETH_ARM_LPC2XXX_RX_BUFS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4
    # value_source default
    # Default value: 4
    # Legal values: 2 to 4
};

# Number of TX descriptors
# Number of transmit buffer descriptors. We need one descriptor
# for each element in the scatter/gather list.
#
cdl_option CYGNUM_DEVS_ETH_ARM_LPC2XXX_TX_BUFS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 10
    # value_source default
    # Default value: 10
    # Legal values: 2 to 10
};

# RedBoot manages ESA initialization data
# Enabling this option will allow the ethernet station
# address to be acquired from RedBoot's configuration data,
# stored in flash memory.  It can be overridden individually
# by the 'Set the ethernet station address' option for each
# interface.
#
cdl_component CYGPKG_DEVS_ETH_ARM_LPC2XXX_REDBOOT_HOLDS_ESA {
    # ActiveIf constraint: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    #     CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT == 1
    #   --> 1
    # ActiveIf constraint: (CYGPKG_REDBOOT || CYGSEM_HAL_USE_ROM_MONITOR)
    #     CYGPKG_REDBOOT == v3_0
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Export RedBoot command to set ESA in FLASH config
# This component contains options which, when enabled, allow
# RedBoot to support the setting of the ESA in the FLASH
# configuration. This can then subsequently be accessed by
# applications using virtual vector calls if those applications
# are also built with
# CYGPKG_DEVS_ETH_ARM_LPC2XXX_REDBOOT_HOLDS_ESA enabled.
#
cdl_component CYGPKG_DEVS_ETH_ARM_LPC2XXX_REDBOOT_HOLDS_ESA_VARS {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_ARM_LPC2XXX_REDBOOT_HOLDS_ESA is disabled

    # There is no associated value.
};

# >
# RedBoot manages ESA for eth0
#
cdl_option CYGSEM_DEVS_ETH_ARM_LPC2XXX_REDBOOT_HOLDS_ESA_ETH0 {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_ARM_LPC2XXX_REDBOOT_HOLDS_ESA_VARS is not active
    # ActiveIf constraint: CYGSEM_REDBOOT_FLASH_CONFIG
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 0
    #   --> 0
    # ActiveIf constraint: CYGPKG_REDBOOT_NETWORKING
    #     CYGPKG_REDBOOT_NETWORKING == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# <
# Ethernet station (MAC) address for eth0
# The default ethernet station address. This is the
# MAC address used when no value is found in the
# RedBoot FLASH configuration field.
#
cdl_option CYGPKG_DEVS_ETH_ARM_LPC2XXX_MACADDR {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "0x12, 0x34, 0x56, 0x78, 0x9A, 0xBC"
    # value_source default
    # Default value: "0x12, 0x34, 0x56, 0x78, 0x9A, 0xBC"
};

# Additional compiler flags
# This option modifies the set of compiler flags for
# building the Atmel LPC2XXX ethernet driver package.
# These flags are used in addition to the set of global flags.
#
cdl_option CYGPKG_DEVS_ETH_ARM_LPC2XXX_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "-D_KERNEL -D__ECOS"
    # value_source default
    # Default value: "-D_KERNEL -D__ECOS"
};

# <
# <
# <
# I2C support
# doc: ref/io-i2c.html
# The generic I2C package provides an API for accessing devices
# attached to an I2C bus. It specifies how I2C bus drivers should
# be written and how I2C devices should be defined. There is also
# support for bit-banged I2C buses.
#
cdl_package CYGPKG_IO_I2C {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
    # Requires: CYGPKG_INFRA CYGPKG_HAL
    #     CYGPKG_INFRA == v3_0
    #     CYGPKG_HAL == v3_0
    #   --> 1

    # The following properties are affected by this value
    # package CYGPKG_DEVS_I2C_ARM_LPC2XXX
    #     ActiveIf: CYGPKG_IO_I2C
};

# >
# I2C build options
# Package specific build options including control over
# compiler flags used only in building the generic I2C
# package, and details of which tests are built.
#
cdl_component CYGPKG_IO_I2C_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the generic I2C package. These flags are
# used in addition to the set of global flags.
#
cdl_option CYGPKG_IO_I2C_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the generic I2C package. These flags are
# removed from the set of global flags if present.
#
cdl_option CYGPKG_IO_I2C_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# I2C driver for LPC2xxx family of ARM controllers
# This package provides a generic I2C device driver for the on-chip
# I2C peripherals in LPX2xxx processors.
#
cdl_package CYGPKG_DEVS_I2C_ARM_LPC2XXX {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # ActiveIf constraint: CYGPKG_IO_I2C
    #     CYGPKG_IO_I2C == v3_0
    #   --> 1
    # ActiveIf constraint: CYGPKG_HAL_ARM_LPC2XXX || CYGPKG_HAL_ARM_LPC24XX
    #     CYGPKG_HAL_ARM_LPC2XXX (unknown) == 0
    #     CYGPKG_HAL_ARM_LPC24XX == v3_0
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0

    # The following properties are affected by this value
    # component CYGHWR_HAL_ARM_LPC24XX_I2C0_SUPP
    #     ActiveIf: CYGPKG_DEVS_I2C_ARM_LPC2XXX
    # component CYGHWR_HAL_ARM_LPC24XX_I2C1_SUPP
    #     ActiveIf: CYGPKG_DEVS_I2C_ARM_LPC2XXX
    # component CYGHWR_HAL_ARM_LPC24XX_I2C2_SUPP
    #     ActiveIf: CYGPKG_DEVS_I2C_ARM_LPC2XXX
};

# >
# Target hardware may have multiple I2C buses
# The LPC2xxx I2C driver can support multiple I2C bus devices. By
# default the driver assumes only a single device is present and will
# optimize for that case, using constant definitions provided by the
# platform HAL rather than per-device structure fields. If the hardware
# has multiple I2C bus devices, or if a singleton bus is instantiated
# by some other package and hence the platform HAL cannot provide the
# necessary definitions, then this option should be enabled.
#
cdl_option CYGHWR_DEVS_I2C_ARM_LPC2XXX_MULTIPLE_BUSES {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Driver debug output level
# This option specifies the level of debug data output by
# the LPC2XXX I2C device driver. A value of 0 signifies
# no debug data output; 1 signifies normal debug data
# output. The generic eCos I2C driver functions do not return any 
# error information if a I2C transfer failed. If this option is
# 1 then the driver prints the status flags if a transfer failed
# or was aborted. It prints the status flags in case of a missing 
# data or address acknowledge, in case of lost arbitration and in 
# case of a bus error. A missing acknowledge does not realy indicate
# an error and may be part of a normal I2C communication. Therefore
# this option should only be >0 for debug reasons.
#
cdl_option CYGPKG_DEVS_I2C_ARM_LPC2XXX_DEBUG_LEVEL {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 1
};

# I2C channel 0 configuration
# I2C channel 0 configuration data.
#
cdl_component CYGHWR_HAL_ARM_LPC24XX_I2C0_SUPP {
    # ActiveIf constraint: CYGPKG_DEVS_I2C_ARM_LPC2XXX
    #     CYGPKG_DEVS_I2C_ARM_LPC2XXX == v3_0
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# I2C channel 0 interrupt priority
# There are 16 priority levels, corresponding to the
# values 0 through 15 decimal, of which 15 is the
# lowest priority.  The reset value of these
# interrupt priority registers defaults all
# interrupts to the lowest priority 15, allowing a
# single write to elevate the priority of an
# individual interrupt.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_I2C0_INT_PRIO {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 15
    # value_source default
    # Default value: 15
    # Legal values: 0 to 15
};

# I2C channel 0 bus frequency (Hz)
# This option selects the data rate for the I2C bus.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_I2C0_BUS_FREQ {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100000
    # value_source default
    # Default value: 100000
    # Legal values: 100000 400000
};

# <
# I2C channel 1 configuration
# I2C channel 1 configuration data.
#
cdl_component CYGHWR_HAL_ARM_LPC24XX_I2C1_SUPP {
    # ActiveIf constraint: CYGPKG_DEVS_I2C_ARM_LPC2XXX
    #     CYGPKG_DEVS_I2C_ARM_LPC2XXX == v3_0
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# I2C channel 1 interrupt priority
# There are 16 priority levels, corresponding to the
# values 0 through 15 decimal, of which 15 is the
# lowest priority.  The reset value of these
# interrupt priority registers defaults all
# interrupts to the lowest priority 15, allowing a
# single write to elevate the priority of an
# individual interrupt.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_I2C1_INT_PRIO {
    # This option is not active
    # The parent CYGHWR_HAL_ARM_LPC24XX_I2C1_SUPP is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 15
    # value_source default
    # Default value: 15
    # Legal values: 0 to 15
};

# I2C channel 1 bus frequency (Hz)
# This option selects the data rate for the I2C bus.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_I2C1_BUS_FREQ {
    # This option is not active
    # The parent CYGHWR_HAL_ARM_LPC24XX_I2C1_SUPP is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100000
    # value_source default
    # Default value: 100000
    # Legal values: 100000 400000
};

# <
# I2C channel 2 configuration
# I2C channel 2 configuration data.
#
cdl_component CYGHWR_HAL_ARM_LPC24XX_I2C2_SUPP {
    # ActiveIf constraint: CYGPKG_DEVS_I2C_ARM_LPC2XXX
    #     CYGPKG_DEVS_I2C_ARM_LPC2XXX == v3_0
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# I2C channel 2 interrupt priority
# There are 16 priority levels, corresponding to the
# values 0 through 15 decimal, of which 15 is the
# lowest priority.  The reset value of these
# interrupt priority registers defaults all
# interrupts to the lowest priority 15, allowing a
# single write to elevate the priority of an
# individual interrupt.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_I2C2_INT_PRIO {
    # This option is not active
    # The parent CYGHWR_HAL_ARM_LPC24XX_I2C2_SUPP is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 15
    # value_source default
    # Default value: 15
    # Legal values: 0 to 15
};

# I2C channel 2 bus frequency (Hz)
# This option selects the data rate for the I2C bus.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_I2C2_BUS_FREQ {
    # This option is not active
    # The parent CYGHWR_HAL_ARM_LPC24XX_I2C2_SUPP is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100000
    # value_source default
    # Default value: 100000
    # Legal values: 100000 400000
};

# <
# <
# <
# eCos HAL
# doc: ref/the-ecos-hardware-abstraction-layer.html
# The eCos HAL package provide a porting layer for
# higher-level parts of the system such as the kernel and the
# C library. Each installation should have HAL packages for
# one or more architectures, and for each architecture there
# may be one or more supported platforms. It is necessary to
# select one target architecture and one platform for that
# architecture. There are also a number of configuration
# options that are common to all HAL packages.
#
cdl_package CYGPKG_HAL {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
    # Requires: CYGPKG_INFRA
    #     CYGPKG_INFRA == v3_0
    #   --> 1

    # The following properties are affected by this value
    # package CYGPKG_IO_I2C
    #     Requires: CYGPKG_INFRA CYGPKG_HAL
};

# >
# Platform-independent HAL options
# A number of configuration options are common to most or all
# HAL packages, for example options controlling how much state
# should be saved during a context switch. The implementations
# of these options will vary from architecture to architecture.
#
cdl_component CYGPKG_HAL_COMMON {
    # There is no associated value.
};

# >
# Provide eCos kernel support
# The HAL can be configured to either support the full eCos
# kernel, or to support only very simple applications which do
# not require a full kernel. If kernel support is not required
# then some of the startup, exception, and interrupt handling
# code can be eliminated.
#
cdl_option CYGFUN_HAL_COMMON_KERNEL_SUPPORT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0
    # Requires: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0
};

# HAL exception support
# When a processor exception occurs, for example an attempt to
# execute an illegal instruction or to perform a divide by
# zero, this exception may be handled in a number of different
# ways. If the target system has gdb support then typically
# the exception will be handled by gdb code. Otherwise if the
# HAL exception support is enabled then the HAL will invoke a
# routine deliver_exception(). Typically this routine will be
# provided by the eCos kernel, but it is possible for
# application code to provide its own implementation. If the
# HAL exception support is not enabled and a processor
# exception occurs then the behaviour of the system is
# undefined.
#
cdl_option CYGPKG_HAL_EXCEPTIONS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGPKG_KERNEL_EXCEPTIONS
    #     CYGPKG_KERNEL_EXCEPTIONS (unknown) == 0
    #   --> 0
    # Requires: CYGPKG_KERNEL_EXCEPTIONS
    #     CYGPKG_KERNEL_EXCEPTIONS (unknown) == 0
    #   --> 0
};

# Stop calling constructors early
# This option supports environments where some constructors
# must be run in the context of a thread rather than at
# simple system startup time. A boolean flag named
# cyg_hal_stop_constructors is set to 1 when constructors
# should no longer be invoked. It is up to some other
# package to deal with the rest of the constructors.
# In the current version this is only possible with the
# C library.
#
cdl_option CYGSEM_HAL_STOP_CONSTRUCTORS_ON_FLAG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGSEM_LIBC_INVOKE_DEFAULT_STATIC_CONSTRUCTORS
    #     CYGSEM_LIBC_INVOKE_DEFAULT_STATIC_CONSTRUCTORS (unknown) == 0
    #   --> 0
};

# HAL uses the MMU and allows for CDL manipulation of it's use
#
cdl_interface CYGINT_HAL_SUPPORTS_MMU_TABLES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGSEM_HAL_INSTALL_MMU_TABLES
    #     ActiveIf: CYGINT_HAL_SUPPORTS_MMU_TABLES
};

# Install MMU tables.
# This option controls whether this application installs
# its own Memory Management Unit (MMU) tables, or relies on the
# existing environment to run.
#
cdl_option CYGSEM_HAL_INSTALL_MMU_TABLES {
    # This option is not active
    # ActiveIf constraint: CYGINT_HAL_SUPPORTS_MMU_TABLES
    #     CYGINT_HAL_SUPPORTS_MMU_TABLES == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  CYG_HAL_STARTUP != "RAM" 
    #     CYG_HAL_STARTUP == ROM
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_STATIC_MMU_TABLES
    #     Requires: CYGSEM_HAL_INSTALL_MMU_TABLES
};

# Use static MMU tables.
# This option defines an environment where any Memory
# Management Unit (MMU) tables are constant.  Normally used by ROM
# based environments, this provides a way to save RAM usage which
# would otherwise be required for these tables.
#
cdl_option CYGSEM_HAL_STATIC_MMU_TABLES {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGSEM_HAL_INSTALL_MMU_TABLES
    #     CYGSEM_HAL_INSTALL_MMU_TABLES == 0
    #   --> 0
};

# Route diagnostic output to debug channel
# If not inheriting the console setup from the ROM monitor,
# it is possible to redirect diagnostic output to the debug
# channel by enabling this option. Depending on the debugger
# used it may also be necessary to select a mangler for the
# output to be displayed by the debugger.
#
cdl_component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN {
    # ActiveIf constraint: !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE == 0
    #   --> 1
    # ActiveIf constraint:  CYGPKG_HAL_ARM || CYGPKG_HAL_POWERPC_MPC8xx  || CYGPKG_HAL_V85X_V850 || CYGSEM_HAL_VIRTUAL_VECTOR_DIAG 
    #     CYGPKG_HAL_ARM == v3_0
    #     CYGPKG_HAL_POWERPC_MPC8xx (unknown) == 0
    #     CYGPKG_HAL_V85X_V850 (unknown) == 0
    #     CYGSEM_HAL_VIRTUAL_VECTOR_DIAG == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  (CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS  || CYG_HAL_STARTUP == "RAM") ? 1 : 0
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #     CYG_HAL_STARTUP == ROM
    #   --> 1

    # The following properties are affected by this value
    # option CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
    #     Calculated:  !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE  && !CYGDBG_HAL_DIAG_TO_DEBUG_CHAN 
};

# >
# Mangler used on diag output
# It is sometimes necessary to mangle (encode) the
# diag ASCII text output in order for it to show up at the
# other end. In particular, GDB may silently ignore raw
# ASCII text.
#
cdl_option CYGSEM_HAL_DIAG_MANGLER {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value GDB
    # value_source default
    # Default value: GDB
    # Legal values: "GDB" "None"
};

# <
# Grouped libraries for linking
# This option provides a list of libraries used to satisfy
# linker dependencies, but necessary for building eCos. It is passed
# to a GROUP() directive in the linker script, which is analogous
# to using the "-(" aka "--start-group", and "-)" aka
# "--end-group" options on the linker command line.
# It provides a similar function to adding "-llibname" to the
# linker, but with the added feature that each library in the group
# is scanned in turn for unresolved symbols, and this process is
# repeated until there are no more unresolved symbols. This is important
# for system libraries as there are often mutual dependencies.
# This option should not be used for adding application specific
# libraries. That should be done in the application's own makefile
# or link line.
# Users wishing to use the GNU Compiler prior to GCC 3.0 will
# need to remove libsupc++.a from this option.
# Note that libtarget.a is always required to build eCos.
#
cdl_component CYGBLD_HAL_LINKER_GROUPED_LIBS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "libtarget.a libgcc.a libsupc++.a"
    # value_source default
    # Default value: CYGBLD_HAL_LINKER_GROUPED_LIBS_DEFAULT
    #     CYGBLD_HAL_LINKER_GROUPED_LIBS_DEFAULT == "libtarget.a libgcc.a libsupc++.a"
    #   --> "libtarget.a libgcc.a libsupc++.a"
    # Requires:  is_substr(CYGBLD_HAL_LINKER_GROUPED_LIBS, "libtarget.a") 
    #     CYGBLD_HAL_LINKER_GROUPED_LIBS == "libtarget.a libgcc.a libsupc++.a"
    #   --> 1

    # The following properties are affected by this value
    # component CYGBLD_HAL_LINKER_GROUPED_LIBS
    #     Requires:  is_substr(CYGBLD_HAL_LINKER_GROUPED_LIBS, "libtarget.a") 
};

# >
# Default setting
# This option is intended to be used by other eCos packages (including
# HAL packages) to provide a different default value for
# CYGBLD_HAL_LINKER_GROUPED_LIBS.
# This is separated into its own option to continue to
# allow the user to make customisations to the grouped library
# list.
#
cdl_option CYGBLD_HAL_LINKER_GROUPED_LIBS_DEFAULT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "libtarget.a libgcc.a libsupc++.a"
    # value_source default
    # Default value: "libtarget.a libgcc.a libsupc++.a"

    # The following properties are affected by this value
    # component CYGBLD_HAL_LINKER_GROUPED_LIBS
    #     DefaultValue: CYGBLD_HAL_LINKER_GROUPED_LIBS_DEFAULT
};

# <
# <
# HAL interrupt handling
# A number of configuration options related to interrupt
# handling are common to most or all HAL packages, even though
# the implementations will vary from architecture to
# architecture.
#
cdl_component CYGPKG_HAL_COMMON_INTERRUPTS {
    # There is no associated value.
};

# >
# Use separate stack for interrupts
# When an interrupt occurs this interrupt can be handled either
# on the current stack or on a separate stack maintained by the
# HAL. Using a separate stack requires a small number of extra
# instructions in the interrupt handling code, but it has the
# advantage that it is no longer necessary to allow extra space
# in every thread stack for the interrupt handlers. The amount
# of extra space required depends on the interrupt handlers
# that are being used.
#
cdl_option CYGIMP_HAL_COMMON_INTERRUPTS_USE_INTERRUPT_STACK {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # The inferred value should not be edited directly.
    inferred_value 0
    # value_source inferred
    # Default value: 1

    # The following properties are affected by this value
    # package CYGPKG_REDBOOT
    #     Requires:  CYGIMP_HAL_COMMON_INTERRUPTS_USE_INTERRUPT_STACK == 0 
};

# Interrupt stack size
# This configuration option specifies the stack size in bytes
# for the interrupt stack. Typically this should be a multiple
# of 16, but the exact requirements will vary from architecture
# to architecture. The interrupt stack serves two separate
# purposes. It is used as the stack during system
# initialization. In addition, if the interrupt system is
# configured to use a separate stack then all interrupts will
# be processed on this stack. The exact memory requirements
# will vary from application to application, and will depend
# heavily on whether or not other interrupt-related options,
# for example nested interrupts, are enabled. On most targets,
# in a configuration with no kernel this stack will also be
# the stack used to invoke the application, and must obviously
# be appropriately large in that case.
#
cdl_option CYGNUM_HAL_COMMON_INTERRUPTS_STACK_SIZE {
    # Flavor: data
    user_value 1024
    # value_source user
    # Default value:  CYGPKG_KERNEL ? 4096 : 32768 
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 32768
    # Legal values: 128 to 1048576
};

# Allow nested interrupts
# When an interrupt occurs the HAL interrupt handling code can
# either leave interrupts disabled for the duration of the
# interrupt handling code, or by doing some extra work it can
# reenable interrupts before invoking the interrupt handler and
# thus allow nested interrupts to happen. If all the interrupt
# handlers being used are small and do not involve any loops
# then it is usually better to disallow nested interrupts.
# However if any of the interrupt handlers are more complicated
# than nested interrupts will usually be required.
#
cdl_option CYGSEM_HAL_COMMON_INTERRUPTS_ALLOW_NESTING {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Save minimum context on interrupt
# The HAL interrupt handling code can exploit the calling conventions
# defined for a given architecture to reduce the amount of state
# that has to be saved. Generally this improves performance and
# reduces code size. However it can make source-level debugging
# more difficult.
#
cdl_option CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires: ! CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: ! CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT
};

# Chain all interrupts together
# Interrupts can be attached to vectors either singly, or be
# chained together. The latter is necessary if there is no way
# of discovering which device has interrupted without
# inspecting the device itself. It can also reduce the amount
# of RAM needed for interrupt decoding tables and code.
#
cdl_option CYGIMP_HAL_COMMON_INTERRUPTS_CHAIN {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Ignore spurious [fleeting] interrupts
# On some hardware, interrupt sources may not be de-bounced or
# de-glitched.  Rather than try to handle these interrupts (no
# handling may be possible), this option allows the HAL to simply
# ignore them.  In most cases, if the interrupt is real it will
# reoccur in a detectable form.
#
cdl_option CYGIMP_HAL_COMMON_INTERRUPTS_IGNORE_SPURIOUS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# HAL context switch support
# A number of configuration options related to thread contexts
# are common to most or all HAL packages, even though the
# implementations will vary from architecture to architecture.
#
cdl_component CYGPKG_HAL_COMMON_CONTEXT {
    # There is no associated value.

    # The following properties are affected by this value
};

# >
# Use minimum thread context
# The thread context switch code can exploit the calling
# conventions defined for a given architecture to reduce the
# amount of state that has to be saved during a context
# switch. Generally this improves performance and reduces
# code size. However it can make source-level debugging more
# difficult.
#
cdl_option CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # The inferred value should not be edited directly.
    inferred_value 0
    # value_source inferred
    # Default value: 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires: ! CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: ! CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM
};

# <
# Explicit control over cache behaviour
# These options let the default behaviour of the caches 
# be easily configurable.
#
cdl_component CYGPKG_HAL_CACHE_CONTROL {
    # There is no associated value.
};

# >
# Enable DATA cache on startup
# Enabling this option will cause the data cache to be enabled
# as soon as practicable when eCos starts up.  One would choose
# to disable this if the data cache cannot safely be turned on,
# such as a case where the cache(s) require additional platform
# specific setup.
#
cdl_component CYGSEM_HAL_ENABLE_DCACHE_ON_STARTUP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# DATA cache mode on startup
# This option controls the mode the cache will be set to
# when enabled on startup.
#
cdl_option CYGSEM_HAL_DCACHE_STARTUP_MODE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value COPYBACK
    # value_source default
    # Default value: COPYBACK
    # Legal values:  "COPYBACK" "WRITETHRU" 
};

# <
# Enable INSTRUCTION cache on startup
# Enabling this option will cause the instruction cache to be enabled
# as soon as practicable when eCos starts up.  One would choose
# to disable this if the instruction cache cannot safely be turned on,
# such as a case where the cache(s) require additional platform
# specific setup.
#
cdl_option CYGSEM_HAL_ENABLE_ICACHE_ON_STARTUP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Source-level debugging support
# If the source level debugger gdb is to be used for debugging
# application code then it may be necessary to configure in support
# for this in the HAL.
#
cdl_component CYGPKG_HAL_DEBUG {
    # There is no associated value.
};

# >
# Support for GDB stubs
# The HAL implements GDB stubs for the target.
#
cdl_interface CYGINT_HAL_DEBUG_GDB_STUBS {
    # Implemented by CYGPKG_HAL_ARM_LPC24XX, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     ActiveIf: CYGINT_HAL_DEBUG_GDB_STUBS
    # option CYGBLD_BUILD_REDBOOT_WITH_GDB
    #     ActiveIf: CYGINT_HAL_DEBUG_GDB_STUBS
};

# Include GDB stubs in HAL
# This option causes a set of GDB stubs to be included into the
# system. On some target systems the GDB support will be
# provided by other means, for example by a ROM monitor. On
# other targets, especially when building a ROM-booting system,
# the necessary support has to go into the target library
# itself. When GDB stubs are include in a configuration, HAL
# serial drivers must also be included.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS {
    # ActiveIf constraint: CYGINT_HAL_DEBUG_GDB_STUBS
    #     CYGINT_HAL_DEBUG_GDB_STUBS == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # The inferred value should not be edited directly.
    inferred_value 1
    # value_source inferred
    # Default value: 0
    # Requires: ! CYGSEM_HAL_USE_ROM_MONITOR
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #   --> 1
    # Requires: ! CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT
    #     CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT == 0
    #   --> 1
    # Requires: ! CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM
    #     CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM == 0
    #   --> 1
    # Requires:  !CYGSEM_HAL_VIRTUAL_VECTOR_DIAG  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_DIAG == 1
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 1
    #   --> 1

    # The following properties are affected by this value
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     DefaultValue:  (CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS  || CYG_HAL_STARTUP == "RAM") ? 1 : 0
    # option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     DefaultValue: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     ActiveIf:  CYGSEM_HAL_USE_ROM_MONITOR || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     DefaultValue:  !CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGBLD_BUILD_COMMON_GDB_STUBS
    #     Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGPKG_HAL_GDB_FILEIO
    #     Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGHWR_HAL_ARM_DUMP_EXCEPTIONS
    #     Requires: !CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGHWR_HAL_ARM_ICE_THREAD_SUPPORT
    #     Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGBLD_BUILD_REDBOOT_WITH_GDB
    #     Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
};

# Support for external break support in GDB stubs
# The HAL implements external break (or asynchronous interrupt)
# in the GDB stubs for the target.
#
cdl_interface CYGINT_HAL_DEBUG_GDB_STUBS_BREAK {
    # Implemented by CYGPKG_HAL_ARM_LPC24XX, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     ActiveIf: CYGINT_HAL_DEBUG_GDB_STUBS_BREAK
};

# Include GDB external break support for stubs
# This option causes the GDB stub to add a serial interrupt handler
# which will listen for GDB break packets. This lets you stop the
# target asynchronously when using GDB, usually by hitting Control+C
# or pressing the STOP button. This option differs from
# CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT in that it is used when
# GDB stubs are present.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT {
    # ActiveIf constraint: CYGINT_HAL_DEBUG_GDB_STUBS_BREAK
    #     CYGINT_HAL_DEBUG_GDB_STUBS_BREAK == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1
    # Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     Requires: !CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    # option CYGOPT_HAL_ARM_SYSCALL_GPROF_SUPPORT
    #     ActiveIf:  CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT || CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT 
    # option CYGBLD_BUILD_REDBOOT_WITH_GDB
    #     Requires: CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
};

# Platform does not support CTRLC
#
cdl_interface CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     ActiveIf:  CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED == 0 
};

# Include GDB external break support when no stubs
# This option adds an interrupt handler for the GDB serial line
# which will listen for GDB break packets. This lets you stop the
# target asynchronously when using GDB, usually by hitting Control+C
# or pressing the STOP button. This option differs from
# CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT in that it is used when the GDB
# stubs are NOT present.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT {
    # ActiveIf constraint:  CYGSEM_HAL_USE_ROM_MONITOR || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1
    # ActiveIf constraint:  CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED == 0 
    #     CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED == 0
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  !CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 0
    # Requires: !CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT == 1
    #   --> 0

    # The following properties are affected by this value
    # option CYGOPT_HAL_ARM_SYSCALL_GPROF_SUPPORT
    #     ActiveIf:  CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT || CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT 
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: ! CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
};

# Include GDB multi-threading debug support
# This option enables some extra HAL code which is needed
# to support multi-threaded source level debugging.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT {
    # ActiveIf constraint:  CYGSEM_HAL_ROM_MONITOR || CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT 
    #     CYGSEM_HAL_ROM_MONITOR == 1
    #     CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT (unknown) == 0
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_ICE_THREAD_SUPPORT
    #     Requires: CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
    # option CYGBLD_BUILD_REDBOOT_WITH_THREADS
    #     Requires: CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
};

# Number of times to retry sending a $O packet
# This option controls the number of attempts that eCos programs
# will make to send a $O packet to a host GDB process.  If it is
# set non-zero, then the target process will attempt to resend the
# $O packet data up to this number of retries.  Caution: use of
# this option is not recommended as it can thoroughly confuse the
# host GDB process.
#
cdl_option CYGNUM_HAL_DEBUG_GDB_PROTOCOL_RETRIES {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Timeout period for GDB packets
# This option controls the time (in milliseconds) that eCos programs
# will wait for a response when sending packets to a host GDB process.
# If this time elapses, then the packet will be resent, up to some
# maximum number of times (CYGNUM_HAL_DEBUG_GDB_PROTOCOL_RETRIES).
#
cdl_option CYGNUM_HAL_DEBUG_GDB_PROTOCOL_TIMEOUT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 500
    # value_source default
    # Default value: 500
};

# Location of CRC32 table
# The stubs use a 1 kilobyte CRC table that can either be pregenerated
# and placed in ROM, or generated at runtime in RAM. Depending on
# your memory constraints, one of these options may be better.
#
cdl_option CYGDBG_HAL_CRCTABLE_LOCATION {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value RAM
    # value_source default
    # Default value: RAM
    # Legal values: "ROM" "RAM"
};

# <
# ROM monitor support
# Support for ROM monitors can be built in to your application. 
# It may also be relevant to build your application as a ROM monitor
# itself. Such options are contained here if relevant for your chosen
# platform. The options and ROM monitors available to choose are
# platform-dependent.
#
cdl_component CYGPKG_HAL_ROM_MONITOR {
    # There is no associated value.

    # The following properties are affected by this value
};

# >
# Target has virtual vector support
#
cdl_interface CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT {
    # Implemented by CYGPKG_HAL_ARM_LPC24XX, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # component CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    #     ActiveIf: CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT
};

# Target supports baud rate control via vectors
# Whether this target supports the __COMMCTL_GETBAUD
# and __COMMCTL_SETBAUD virtual vector comm control operations.
#
cdl_interface CYGINT_HAL_VIRTUAL_VECTOR_COMM_BAUD_SUPPORT {
    # Implemented by CYGPKG_HAL_ARM_LPC24XX, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGSEM_REDBOOT_VARIABLE_BAUD_RATE
    #     ActiveIf: CYGINT_HAL_VIRTUAL_VECTOR_COMM_BAUD_SUPPORT
};

# Enable use of virtual vector calling interface
# Virtual vector support allows the HAL to let the ROM
# monitor handle certain operations. The virtual vector table
# defines a calling interface between applications running in
# RAM and the ROM monitor.
#
cdl_component CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT {
    # ActiveIf constraint: CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT
    #     CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT == 1
    #   --> 1

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # package CYGPKG_DEVS_ETH_PHY
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    # component CYGPKG_DEVS_ETH_ARM_LPC2XXX_REDBOOT_HOLDS_ESA
    #     ActiveIf: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
};

# >
# Inherit console settings from ROM monitor
# When this option is set, the application will inherit
# the console as set up by the ROM monitor. This means
# that the application will use whatever channel and
# mangling style was used by the ROM monitor when
# the application was launched.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE {
    # This option is not active
    # ActiveIf constraint: CYGSEM_HAL_USE_ROM_MONITOR
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  !CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 1
    #   --> 0

    # The following properties are affected by this value
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     ActiveIf: !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    # option CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
    #     Calculated:  !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE  && !CYGDBG_HAL_DIAG_TO_DEBUG_CHAN 
};

# Debug channel is configurable
# This option is a configuration hint - it is enabled
# when the HAL initialization code will make use
# of the debug channel configuration option.
#
cdl_option CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE {
    # Calculated value:  CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 1
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL
    #     ActiveIf: CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE
};

# Console channel is configurable
# This option is a configuration hint - it is enabled
# when the HAL initialization code will make use
# of the console channel configuration option.
#
cdl_option CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE {
    # Calculated value:  !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE  && !CYGDBG_HAL_DIAG_TO_DEBUG_CHAN 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE == 0
    #     CYGDBG_HAL_DIAG_TO_DEBUG_CHAN == 1
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_DEFAULT
    #     ActiveIf: CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
    # option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL
    #     ActiveIf: CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
};

# Initialize whole of virtual vector table
# This option will cause the whole of the virtual
# vector table to be initialized with dummy values on
# startup. When this option is enabled, all the
# options below must also be enabled - or the
# table would be empty when the application
# launches.
# On targets where older ROM monitors without
# virtual vector support may still be in use, it is
# necessary for RAM applictions to initialize the
# table (since all HAL diagnostics and debug IO
# happens via the table).
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  CYG_HAL_STARTUP != "RAM" || !CYGSEM_HAL_USE_ROM_MONITOR 
    #     CYG_HAL_STARTUP == ROM
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET == 1
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US == 1
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA == 1
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT
    #     ActiveIf: !CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_VERSION
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
};

# Claim virtual vector table entries by default
# By default most virtual vectors will be claimed by
# RAM startup configurations, meaning that the RAM
# application will provide the services. The
# exception is COMMS support (HAL
# diagnostics/debugging IO) which is left in the
# control of the ROM monitor.
# The reasoning behind this is to get as much of the
# code exercised during regular development so it
# is known to be working the few times a new ROM
# monitor or a ROM production configuration is used
# - COMMS are excluded only by necessity in order to
# avoid breaking an existing debugger connections
# (there may be ways around this).
# For production RAM configurations this option can
# be switched off, causing the appliction to rely on
# the ROM monitor for these services, thus
# saving some space.
# Individual vectors may also be left unclaimed,
# controlled by the below options (meaning that the
# associated service provided by the ROM monitor
# will be used).
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT {
    # This option is not active
    # ActiveIf constraint: !CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
};

# Claim reset virtual vectors
# This option will cause the reset and kill_by_reset
# virtual vectors to be claimed.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
};

# Claim version virtual vectors
# This option will cause the version
# virtual vectors to be claimed.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_VERSION {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #   --> 1
};

# Claim delay_us virtual vector
# This option will cause the delay_us
# virtual vector to be claimed.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
};

# Claim data virtual vectors
# This option will cause the data virtual vectors
# to be claimed. At present there is only one, used
# by the RedBoot ethernet driver to share diag output.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
};

# Claim comms virtual vectors
# This option will cause the communication tables
# that are part of the virtual vectors mechanism to
# be claimed. Note that doing this may cause an
# existing ROM monitor communication connection to
# be closed. For this reason, the option is disabled
# per default for normal application
# configurations.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires:  !CYGSEM_HAL_VIRTUAL_VECTOR_DIAG  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    #     DefaultValue:  !CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    # option CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE
    #     Calculated:  CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
};

# Do diagnostic IO via virtual vector table
# All HAL IO happens via the virtual vector table / comm
# tables when those tables are supported by the HAL.
# If so desired, the low-level IO functions can
# still be provided by the RAM application by
# enabling the CLAIM_COMMS option.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_DIAG {
    # Calculated value: 1
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     ActiveIf:  CYGPKG_HAL_ARM || CYGPKG_HAL_POWERPC_MPC8xx  || CYGPKG_HAL_V85X_V850 || CYGSEM_HAL_VIRTUAL_VECTOR_DIAG 
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires:  !CYGSEM_HAL_VIRTUAL_VECTOR_DIAG  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
};

# <
# Behave as a ROM monitor
# Enable this option if this program is to be used as a
# ROM monitor, i.e. applications will be loaded into RAM on
# the board, and this ROM monitor may process exceptions or
# interrupts generated from the application. This enables
# features such as utilizing a separate interrupt stack when
# exceptions are generated.
#
cdl_option CYGSEM_HAL_ROM_MONITOR {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # The inferred value should not be edited directly.
    inferred_value 1
    # value_source inferred
    # Default value: 0
    # Requires:  CYG_HAL_STARTUP == "ROM"
    #     CYG_HAL_STARTUP == ROM
    #   --> 1

    # The following properties are affected by this value
    # option CYGBLD_ARM_ENABLE_THUMB_INTERWORK
    #     DefaultValue:  (CYGHWR_THUMB || CYGSEM_HAL_ROM_MONITOR) 
    # option CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
    #     ActiveIf:  CYGSEM_HAL_ROM_MONITOR || CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT 
    # option CYGPRI_REDBOOT_ROM_MONITOR
    #     Requires: CYGSEM_HAL_ROM_MONITOR
};

# Work with a ROM monitor
# Support can be enabled for different varieties of ROM
# monitor.  This support changes various eCos semantics such
# as the encoding of diagnostic output, or the overriding of
# hardware interrupt vectors.
# Firstly there is "Generic" support which prevents the
# HAL from overriding the hardware vectors that it does not
# use, to instead allow an installed ROM monitor to handle
# them. This is the most basic support which is likely to be
# common to most implementations of ROM monitor.
# "GDB_stubs" provides support when GDB stubs are included
# in the ROM monitor or boot ROM.
#
cdl_option CYGSEM_HAL_USE_ROM_MONITOR {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value:  CYG_HAL_STARTUP == "RAM" ? "GDB_stubs" : 0 
    #     CYG_HAL_STARTUP == ROM
    #   --> 0 0
    # Legal values:  "Generic" "GDB_stubs" 
    # Requires:  CYG_HAL_STARTUP == "RAM" 
    #     CYG_HAL_STARTUP == ROM
    #   --> 0

    # The following properties are affected by this value
    # component CYGPKG_DEVS_ETH_ARM_LPC2XXX_REDBOOT_HOLDS_ESA
    #     ActiveIf: (CYGPKG_REDBOOT || CYGSEM_HAL_USE_ROM_MONITOR)
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires: ! CYGSEM_HAL_USE_ROM_MONITOR
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     ActiveIf:  CYGSEM_HAL_USE_ROM_MONITOR || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    #     ActiveIf: CYGSEM_HAL_USE_ROM_MONITOR
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     DefaultValue:  CYG_HAL_STARTUP != "RAM" || !CYGSEM_HAL_USE_ROM_MONITOR 
};

# <
# Platform defined I/O channels.
# Platforms which provide additional I/O channels can implement
# this interface, indicating that the function plf_if_init()
# needs to be called.
#
cdl_interface CYGINT_HAL_PLF_IF_INIT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Platform IDE I/O support.
# Platforms which provide IDE controllers can implement
# this interface, indicating that IDE I/O macros are
# available.
#
cdl_interface CYGINT_HAL_PLF_IF_IDE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # component CYGSEM_REDBOOT_DISK_IDE
    #     ActiveIf:  CYGINT_HAL_PLF_IF_IDE != 0 
};

# File I/O operations via GDB
# This option enables support for various file I/O
# operations using the GDB remote protocol to communicate
# with GDB. The operations are then performed on the
# debugging host by proxy. These operations are only
# currently available by using a system call interface
# to RedBoot. This may change in the future.
#
cdl_option CYGPKG_HAL_GDB_FILEIO {
    # This option is not active
    # ActiveIf constraint: CYGSEM_REDBOOT_BSP_SYSCALLS
    #     CYGSEM_REDBOOT_BSP_SYSCALLS == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1
};

# Build Compiler sanity checking tests
# Enabling this option causes compiler tests to be built.
#
cdl_option CYGPKG_HAL_BUILD_COMPILER_TESTS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # component CYGPKG_HAL_TESTS
    #     Calculated:   "tests/context tests/basic"
    #                           . ((!CYGINT_HAL_TESTS_NO_CACHES) ? " tests/cache" : "")
    #                           . ((CYGPKG_HAL_BUILD_COMPILER_TESTS) ? " tests/cpp1 tests/vaargs" : "")
    #                           . ((!CYGVAR_KERNEL_COUNTERS_CLOCK) ?   " tests/intr" : "") 
};

# Common HAL tests
# This option specifies the set of tests for the common HAL.
#
cdl_component CYGPKG_HAL_TESTS {
    # Calculated value:   "tests/context tests/basic"
    #                           . ((!CYGINT_HAL_TESTS_NO_CACHES) ? " tests/cache" : "")
    #                           . ((CYGPKG_HAL_BUILD_COMPILER_TESTS) ? " tests/cpp1 tests/vaargs" : "")
    #                           . ((!CYGVAR_KERNEL_COUNTERS_CLOCK) ?   " tests/intr" : "") 
    #     CYGINT_HAL_TESTS_NO_CACHES == 0
    #     CYGPKG_HAL_BUILD_COMPILER_TESTS == 0
    #     CYGVAR_KERNEL_COUNTERS_CLOCK (unknown) == 0
    # Flavor: data
    # Current_value: tests/context tests/basic tests/cache tests/intr
};

# >
# Interface for cache presence
# Some architectures and/or platforms do not have caches. By
# implementing this interface, these can disable the various
# cache-related tests.
#
cdl_interface CYGINT_HAL_TESTS_NO_CACHES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0

    # The following properties are affected by this value
    # component CYGPKG_HAL_TESTS
    #     Calculated:   "tests/context tests/basic"
    #                           . ((!CYGINT_HAL_TESTS_NO_CACHES) ? " tests/cache" : "")
    #                           . ((CYGPKG_HAL_BUILD_COMPILER_TESTS) ? " tests/cpp1 tests/vaargs" : "")
    #                           . ((!CYGVAR_KERNEL_COUNTERS_CLOCK) ?   " tests/intr" : "") 
};

# <
# ARM architecture
# The ARM architecture HAL package provides generic
# support for this processor architecture. It is also
# necessary to select a specific target platform HAL
# package.
#
cdl_package CYGPKG_HAL_ARM {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0

    # The following properties are affected by this value
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     ActiveIf:  CYGPKG_HAL_ARM || CYGPKG_HAL_POWERPC_MPC8xx  || CYGPKG_HAL_V85X_V850 || CYGSEM_HAL_VIRTUAL_VECTOR_DIAG 
    # interface CYGINT_REDBOOT_ARM_FLASH_SIB_SUPPORTED
    #     ActiveIf: CYGPKG_HAL_ARM
};

# >
# The CPU architecture supports THUMB mode
#
cdl_interface CYGINT_HAL_ARM_THUMB_ARCH {
    # Implemented by CYGPKG_HAL_ARM_LPC24XX, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGHWR_THUMB
    #     ActiveIf:  CYGINT_HAL_ARM_THUMB_ARCH != 0 
    # option CYGBLD_ARM_ENABLE_THUMB_INTERWORK
    #     ActiveIf:  CYGINT_HAL_ARM_THUMB_ARCH != 0 
};

# Enable Thumb instruction set
# Enable use of the Thumb instruction set.
#
cdl_option CYGHWR_THUMB {
    # ActiveIf constraint:  CYGINT_HAL_ARM_THUMB_ARCH != 0 
    #     CYGINT_HAL_ARM_THUMB_ARCH == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGBLD_ARM_ENABLE_THUMB_INTERWORK
    #     DefaultValue:  (CYGHWR_THUMB || CYGSEM_HAL_ROM_MONITOR) 
    # option CYGBLD_ARCH_CFLAGS
    #     Calculated:  (CYGHWR_THUMB ? " -mthumb " : "") .
    #                 (CYGBLD_ARM_ENABLE_THUMB_INTERWORK ? " -mthumb-interwork " : " -mno-thumb-interwork ") .
    #                 (CYGHWR_HAL_ARM_BIGENDIAN ? " -mbig-endian " : "")
    #             
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:   CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:  !CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:   CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:  !CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Calculated:  (CYGHWR_THUMB ? " -mthumb " : "") .
    #                 (CYGBLD_ARM_ENABLE_THUMB_INTERWORK ? " -mthumb-interwork " : " -mno-thumb-interwork ") .
    #                 (CYGHWR_HAL_ARM_BIGENDIAN ? " -mbig-endian " : "")
    #             
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:   CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:  !CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:   CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:  !CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
};

# Enable Thumb interworking compiler option
# This option controls the use of -mthumb-interwork in the
# compiler flags. It defaults enabled in Thumb or ROM monitor
# configurations, but can be overridden for reduced memory
# footprint where interworking is not a requirement.
#
cdl_option CYGBLD_ARM_ENABLE_THUMB_INTERWORK {
    # ActiveIf constraint:  CYGINT_HAL_ARM_THUMB_ARCH != 0 
    #     CYGINT_HAL_ARM_THUMB_ARCH == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  (CYGHWR_THUMB || CYGSEM_HAL_ROM_MONITOR) 
    #     CYGHWR_THUMB == 0
    #     CYGSEM_HAL_ROM_MONITOR == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGBLD_ARCH_CFLAGS
    #     Calculated:  (CYGHWR_THUMB ? " -mthumb " : "") .
    #                 (CYGBLD_ARM_ENABLE_THUMB_INTERWORK ? " -mthumb-interwork " : " -mno-thumb-interwork ") .
    #                 (CYGHWR_HAL_ARM_BIGENDIAN ? " -mbig-endian " : "")
    #             
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:   CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:  !CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:   CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:  !CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_CFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Calculated:  (CYGHWR_THUMB ? " -mthumb " : "") .
    #                 (CYGBLD_ARM_ENABLE_THUMB_INTERWORK ? " -mthumb-interwork " : " -mno-thumb-interwork ") .
    #                 (CYGHWR_HAL_ARM_BIGENDIAN ? " -mbig-endian " : "")
    #             
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:   CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:  !CYGHWR_THUMB &&  CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:   CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies  is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:  !CYGHWR_THUMB && !CYGBLD_ARM_ENABLE_THUMB_INTERWORK implies !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb ") &&
    #                                                                                       !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mthumb-interwork ") &&
    #                                                                                        is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mno-thumb-interwork ") 
};

# The platform and architecture supports Big Endian operation
#
cdl_interface CYGINT_HAL_ARM_BIGENDIAN {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_BIGENDIAN
    #     ActiveIf:  CYGINT_HAL_ARM_BIGENDIAN != 0 
};

# Use big-endian mode
# Use the CPU in big-endian mode.
#
cdl_option CYGHWR_HAL_ARM_BIGENDIAN {
    # This option is not active
    # ActiveIf constraint:  CYGINT_HAL_ARM_BIGENDIAN != 0 
    #     CYGINT_HAL_ARM_BIGENDIAN == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGBLD_ARCH_CFLAGS
    #     Calculated:  (CYGHWR_THUMB ? " -mthumb " : "") .
    #                 (CYGBLD_ARM_ENABLE_THUMB_INTERWORK ? " -mthumb-interwork " : " -mno-thumb-interwork ") .
    #                 (CYGHWR_HAL_ARM_BIGENDIAN ? " -mbig-endian " : "")
    #             
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:   CYGHWR_HAL_ARM_BIGENDIAN          implies  is_substr(CYGBLD_GLOBAL_CFLAGS, " -mbig-endian ") 
    # option CYGBLD_ARCH_CFLAGS
    #     Requires:  !CYGHWR_HAL_ARM_BIGENDIAN          implies !is_substr(CYGBLD_GLOBAL_CFLAGS, " -mbig-endian ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Calculated:  (CYGHWR_THUMB ? " -mthumb " : "") .
    #                 (CYGBLD_ARM_ENABLE_THUMB_INTERWORK ? " -mthumb-interwork " : " -mno-thumb-interwork ") .
    #                 (CYGHWR_HAL_ARM_BIGENDIAN ? " -mbig-endian " : "")
    #             
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:   CYGHWR_HAL_ARM_BIGENDIAN          implies  is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mbig-endian ") 
    # option CYGBLD_ARCH_LDFLAGS
    #     Requires:  !CYGHWR_HAL_ARM_BIGENDIAN          implies !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mbig-endian ") 
};

# The platform uses a processor with an ARM7 core
#
cdl_interface CYGINT_HAL_ARM_ARCH_ARM7 {
    # Implemented by CYGPKG_HAL_ARM_LPC24XX, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     LegalValues:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : ""
    #                             (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : ""
    #                             (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : ""
    #                             (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" : ""
    #                             "" 
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     DefaultValue:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : 
    #                              (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : 
    #                              (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : 
    #                              (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" :
    #                              "unknown" 
};

# The platform uses a processor with an ARM9 core
#
cdl_interface CYGINT_HAL_ARM_ARCH_ARM9 {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     LegalValues:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : ""
    #                             (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : ""
    #                             (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : ""
    #                             (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" : ""
    #                             "" 
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     DefaultValue:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : 
    #                              (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : 
    #                              (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : 
    #                              (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" :
    #                              "unknown" 
};

# The platform uses a processor with a StrongARM core
#
cdl_interface CYGINT_HAL_ARM_ARCH_STRONGARM {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     LegalValues:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : ""
    #                             (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : ""
    #                             (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : ""
    #                             (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" : ""
    #                             "" 
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     DefaultValue:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : 
    #                              (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : 
    #                              (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : 
    #                              (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" :
    #                              "unknown" 
};

# The platform uses a processor with a XScale core
#
cdl_interface CYGINT_HAL_ARM_ARCH_XSCALE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     LegalValues:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : ""
    #                             (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : ""
    #                             (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : ""
    #                             (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" : ""
    #                             "" 
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     DefaultValue:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : 
    #                              (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : 
    #                              (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : 
    #                              (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" :
    #                              "unknown" 
};

# ARM CPU family
# It is possible to optimize code for different
# ARM CPU families. This option selects which CPU to
# optimize for on boards that support multiple CPU types.
#
cdl_option CYGHWR_HAL_ARM_CPU_FAMILY {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ARM7
    # value_source default
    # Default value:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : 
    #                              (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : 
    #                              (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : 
    #                              (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" :
    #                              "unknown" 
    #     CYGINT_HAL_ARM_ARCH_ARM7 == 1
    #     CYGINT_HAL_ARM_ARCH_ARM9 == 0
    #     CYGINT_HAL_ARM_ARCH_STRONGARM == 0
    #     CYGINT_HAL_ARM_ARCH_XSCALE == 0
    #   --> ARM7
    # Legal values:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : ""
    #                             (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : ""
    #                             (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : ""
    #                             (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" : ""
    #                             "" 
    #     CYGINT_HAL_ARM_ARCH_ARM7 == 1
    #     CYGINT_HAL_ARM_ARCH_ARM9 == 0
    #     CYGINT_HAL_ARM_ARCH_STRONGARM == 0
    #     CYGINT_HAL_ARM_ARCH_XSCALE == 0
};

# Build for ARM EABI
# If using a toolchain which targets the ARM EABI (embedded application
# binary interface), this option should be enabled to provide altered
# semantics and differing linker section output.
#
cdl_option CYGBLD_HAL_ARM_EABI {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  (is_substr(CYGBLD_GLOBAL_COMMAND_PREFIX, "-eabi") &&  !is_substr(CYGBLD_GLOBAL_CFLAGS, "-mabi=apcs-gnu") &&  !is_substr(CYGBLD_GLOBAL_CFLAGS, "-mabi=atpcs")) ||  is_substr(CYGBLD_GLOBAL_CFLAGS, "-mabi=aapcs") 
    #     CYGBLD_GLOBAL_COMMAND_PREFIX == arm-eabi
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #   --> 1
};

# Provide diagnostic dump for exceptions
# Print messages about hardware exceptions, including
# raw exception frame dump and register contents.
#
cdl_option CYGHWR_HAL_ARM_DUMP_EXCEPTIONS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: !CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 0
};

# Process all exceptions with the eCos application
# Normal RAM-based programs which do not include GDB stubs 
# defer processing of the illegal instruction exception to GDB.
# Setting this options allows the program to explicitly handle
# the illegal instruction exception itself.  Note: this will
# prevent the use of GDB to debug the application as breakpoints
# will no longer work.
#
cdl_option CYGIMP_HAL_PROCESS_ALL_EXCEPTIONS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Support GDB thread operations via ICE/Multi-ICE
# Allow GDB to get thread information via the ICE/Multi-ICE
# connection.
#
cdl_option CYGHWR_HAL_ARM_ICE_THREAD_SUPPORT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1
    # Requires: CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT == 1
    #   --> 1
    # Requires: CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT
    #     CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT (unknown) == 0
    #   --> 0
};

# Support for 'gprof' callbacks
# The ARM HAL provides the macro for 'gprof' callbacks from RedBoot
# to acquire the interrupt-context PC and SP, when this option is
# active.
#
cdl_option CYGOPT_HAL_ARM_SYSCALL_GPROF_SUPPORT {
    # This option is not active
    # ActiveIf constraint: CYGSEM_REDBOOT_BSP_SYSCALLS
    #     CYGSEM_REDBOOT_BSP_SYSCALLS == 0
    #   --> 0
    # ActiveIf constraint:  CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT || CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT 
    #     CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT == 0
    #     CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT == 1
    #   --> 1

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# Accept exceptions and irq's occurring in user mode
# For standalone Redboot based programs running in user mode.
#
cdl_option CYGOPT_HAL_ARM_WITH_USER_MODE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Preserve svc spsr before returning to svc mode
# This option secures exception and breakpoint processing
# triggered during execution of application specific SWI
# handlers.
#
cdl_option CYGOPT_HAL_ARM_PRESERVE_SVC_SPSR {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Linker script
#
cdl_option CYGBLD_LINKER_SCRIPT {
    # Calculated value:  "src/arm.ld" 
    # Flavor: data
    # Current_value: src/arm.ld
};

# Implementations of hal_arm_mem_real_region_top()
#
cdl_interface CYGINT_HAL_ARM_MEM_REAL_REGION_TOP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# NXP LPC24XX variant HAL
# The LPC24XX HAL package provides the support needed to run
# eCos on NXP LPC24XX based targets.
#
cdl_package CYGPKG_HAL_ARM_LPC24XX {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0

    # The following properties are affected by this value
    # package CYGPKG_DEVICES_WALLCLOCK_ARM_LPC2XXX
    #     ActiveIf: CYGPKG_HAL_ARM_LPC2XXX || CYGPKG_HAL_ARM_LPC24XX
    # package CYGPKG_IO_SERIAL_ARM_LPC24XX
    #     ActiveIf: CYGPKG_HAL_ARM_LPC24XX
    # package CYGPKG_DEVS_CAN_LPC2XXX
    #     ActiveIf: CYGPKG_HAL_ARM_LPC2XXX || CYGPKG_HAL_ARM_LPC24XX
    # package CYGPKG_DEVS_FLASH_EA2468
    #     Requires: CYGPKG_HAL_ARM_LPC24XX
    # package CYGPKG_DEVS_I2C_ARM_LPC2XXX
    #     ActiveIf: CYGPKG_HAL_ARM_LPC2XXX || CYGPKG_HAL_ARM_LPC24XX
    # package CYGPKG_DEVS_ADC_ARM_LPC24XX
    #     ActiveIf: CYGPKG_HAL_ARM_LPC24XX
};

# >
# LPC24XX variant used
# The LPC24XX microcontroller family has several variants,
# the main differences being the amount of on-chip RAM,
# flash and peripherals. This option allows the platform
# HALs to select the specific microcontroller being used.
#
cdl_component CYGHWR_HAL_ARM_LPC24XX {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value LPC246x
    # The inferred value should not be edited directly.
    inferred_value LPC2468
    # value_source inferred
    # Default value: LPC246x
    # Legal values:  "LPC246x" "LPC2458" "LPC2460" "LPC2468" "LPC2470" 
    #                              "LPC2478"

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_LPC24XX_FAMILY
    #     Calculated: 
    #                     is_substr(CYGHWR_HAL_ARM_LPC24XX, "LPC246") ? 
    #                        "LPC246X" : "LPC24XX"
    #                               
    # component CYGHWR_HAL_ARM_LPC2XXX
    #     Calculated: CYGHWR_HAL_ARM_LPC24XX
    # package CYGPKG_HAL_ARM_LPC24XX_EA2468
    #     Requires:  CYGHWR_HAL_ARM_LPC24XX == "LPC2468" 
};

# >
# LPC24XX variant family
# This specifies the family that the processor
# belongs to. This is useful as it defines certain common
# characteristics which affect which features should be
# available in the HAL.
#
cdl_option CYGHWR_HAL_ARM_LPC24XX_FAMILY {
    # Calculated value: 
    #                     is_substr(CYGHWR_HAL_ARM_LPC24XX, "LPC246") ? 
    #                        "LPC246X" : "LPC24XX"
    #                               
    #     CYGHWR_HAL_ARM_LPC24XX == LPC2468
    # Flavor: data
    # Current_value: LPC246X

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_LPC2XXX_FAMILY
    #     Calculated: CYGHWR_HAL_ARM_LPC24XX_FAMILY
};

# <
# LPC2XXX variant used
# This option is only here for compatibility reasons because some of
# the LPC2XXX device drivers rely on these definitions. If this
# is defined here, the LPC24XX variant can use the LPC2XXX device
# drivers for on-chip peripherals.
#
cdl_component CYGHWR_HAL_ARM_LPC2XXX {
    # Calculated value: CYGHWR_HAL_ARM_LPC24XX
    #     CYGHWR_HAL_ARM_LPC24XX == LPC2468
    # Flavor: data
    # Current_value: LPC2468

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION
    #     Calculated: 
    #                     is_substr(CYGHWR_HAL_ARM_LPC2XXX, "LPC21") ? 1 :
    #                     is_substr(CYGHWR_HAL_ARM_LPC2XXX, "LPC22") ? 2 :
    #                     is_substr(CYGHWR_HAL_ARM_LPC2XXX, "LPC24") ? 4 : 0
    #                               
    # option CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION
    #     Calculated: 
    #                     is_substr(CYGHWR_HAL_ARM_LPC2XXX, "LPC21") ? 1 :
    #                     is_substr(CYGHWR_HAL_ARM_LPC2XXX, "LPC22") ? 2 :
    #                     is_substr(CYGHWR_HAL_ARM_LPC2XXX, "LPC24") ? 4 : 0
    #                               
    # option CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION
    #     Calculated: 
    #                     is_substr(CYGHWR_HAL_ARM_LPC2XXX, "LPC21") ? 1 :
    #                     is_substr(CYGHWR_HAL_ARM_LPC2XXX, "LPC22") ? 2 :
    #                     is_substr(CYGHWR_HAL_ARM_LPC2XXX, "LPC24") ? 4 : 0
    #                               
};

# >
# LPC2XXX variant family
# This option is only here for compatibility reasons
# because some of the LPC2XXX device drivers rely on
# these definitions. If this is defined here, the
# LPC24XX variant can use the LPC2XXX device drivers
# for on-chip peripherals.
#
cdl_option CYGHWR_HAL_ARM_LPC2XXX_FAMILY {
    # Calculated value: CYGHWR_HAL_ARM_LPC24XX_FAMILY
    #     CYGHWR_HAL_ARM_LPC24XX_FAMILY == LPC246X
    # Flavor: data
    # Current_value: LPC246X
};

# LPC2XXX variant version
# This specifies the variant version that the processor
# belongs to. Some common characteristics may be 
# different in newer LPC2xxx versions. I.e. the LPC24xx variants
# are significant different from former LPC2xxx variants.
#
cdl_option CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION {
    # Calculated value: 
    #                     is_substr(CYGHWR_HAL_ARM_LPC2XXX, "LPC21") ? 1 :
    #                     is_substr(CYGHWR_HAL_ARM_LPC2XXX, "LPC22") ? 2 :
    #                     is_substr(CYGHWR_HAL_ARM_LPC2XXX, "LPC24") ? 4 : 0
    #                               
    #     CYGHWR_HAL_ARM_LPC2XXX == LPC2468
    #     CYGHWR_HAL_ARM_LPC2XXX == LPC2468
    #     CYGHWR_HAL_ARM_LPC2XXX == LPC2468
    # Flavor: data
    # Current_value: 4

    # The following properties are affected by this value
    # option CYGOPT_DEVS_CAN_LPC2XXX_USE_SELF_RECEPTION
    #     ActiveIf: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    # option CYGNUM_DEVS_CAN_LPC2XXX_CAN0_RX_INT_PRIORITY
    #     ActiveIf: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    # option CYGNUM_DEVS_CAN_LPC2XXX_CAN0_TX_INT_PRIORITY
    #     ActiveIf: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    # option CYGNUM_DEVS_CAN_LPC2XXX_CAN1_RX_INT_PRIORITY
    #     ActiveIf: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    # option CYGNUM_DEVS_CAN_LPC2XXX_CAN1_TX_INT_PRIORITY
    #     ActiveIf: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    # option CYGNUM_DEVS_CAN_LPC2XXX_CAN2_RX_INT_PRIORITY
    #     ActiveIf: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    # option CYGNUM_DEVS_CAN_LPC2XXX_CAN2_TX_INT_PRIORITY
    #     ActiveIf: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    # option CYGNUM_DEVS_CAN_LPC2XXX_CAN3_RX_INT_PRIORITY
    #     ActiveIf: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    # option CYGNUM_DEVS_CAN_LPC2XXX_CAN3_TX_INT_PRIORITY
    #     ActiveIf: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    # option CYGNUM_DEVS_CAN_LPC2XXX_ERR_INT_PRIORITY
    #     ActiveIf: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION < 4
    # option CYGNUM_DEVS_CAN_LPC2XXX_INT_PRIORITY
    #     ActiveIf: CYGHWR_HAL_ARM_LPC2XXX_VARIANT_VERSION >= 4
};

# <
# ARM vector at 0x14
# In order to detect if a valid program is present, every
# user program must have a program signature. This signature
# is a word-wide number that is stored in the unused
# location in the ARM7 vector table at 0x00000014. The
# program signature is the two's compliment of the checksum
# of the ARM vector table.
#
cdl_option CYGNUM_HAL_ARM_VECTOR_0x14 {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0xB4405F62
    # value_source default
    # Default value: 0xB4405F62
    # Legal values: 0 to 0xFFFFFFFF
};

# Clocking
#
cdl_component CYGNUM_HAL_ARM_LPC24XX_CLOCKING {
    # There is no associated value.

    # The following properties are affected by this value
};

# >
# PLL multiplier
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_PLL_MUL {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 12
    # value_source default
    # Default value: 12
    # Legal values: 6 to 32767

    # The following properties are affected by this value
    # option CYGNUM_HAL_ARM_LPC24XX_PLL_OUTPUT
    #     Calculated:   2 * CYGNUM_HAL_ARM_LPC24XX_PLL_MUL * 
    #                               CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ / 
    #                               CYGNUM_HAL_ARM_LPC24XX_PLL_DIV
    # component CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED
    #     Calculated:   2 * CYGNUM_HAL_ARM_LPC24XX_PLL_MUL * 
    #                               CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ / 
    #                               CYGNUM_HAL_ARM_LPC24XX_PLL_DIV / 
    #                               CYGNUM_HAL_ARM_LPC24XX_CPU_CLK_DIV
    # component CYGNUM_HAL_ARM_LPC24XX_USB_CLOCK_SPEED
    #     Calculated:   2 * CYGNUM_HAL_ARM_LPC24XX_PLL_MUL * 
    #                               CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ / 
    #                               CYGNUM_HAL_ARM_LPC24XX_PLL_DIV / 
    #                               CYGNUM_HAL_ARM_LPC24XX_USB_CLK_DIV
};

# PLL divider
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_PLL_DIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Legal values: 1 to 32

    # The following properties are affected by this value
    # option CYGNUM_HAL_ARM_LPC24XX_PLL_OUTPUT
    #     Calculated:   2 * CYGNUM_HAL_ARM_LPC24XX_PLL_MUL * 
    #                               CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ / 
    #                               CYGNUM_HAL_ARM_LPC24XX_PLL_DIV
    # component CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED
    #     Calculated:   2 * CYGNUM_HAL_ARM_LPC24XX_PLL_MUL * 
    #                               CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ / 
    #                               CYGNUM_HAL_ARM_LPC24XX_PLL_DIV / 
    #                               CYGNUM_HAL_ARM_LPC24XX_CPU_CLK_DIV
    # component CYGNUM_HAL_ARM_LPC24XX_USB_CLOCK_SPEED
    #     Calculated:   2 * CYGNUM_HAL_ARM_LPC24XX_PLL_MUL * 
    #                               CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ / 
    #                               CYGNUM_HAL_ARM_LPC24XX_PLL_DIV / 
    #                               CYGNUM_HAL_ARM_LPC24XX_USB_CLK_DIV
};

# PLL output (MHz)
# Normally the PLL output must be in the range of 275 MHz to 
# 550 MHz Because of a chip errata the maximum output of the CCO 
# within the PLL block is limited to 290 MHz.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_PLL_OUTPUT {
    # Calculated value:   2 * CYGNUM_HAL_ARM_LPC24XX_PLL_MUL * 
    #                               CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ / 
    #                               CYGNUM_HAL_ARM_LPC24XX_PLL_DIV
    #     CYGNUM_HAL_ARM_LPC24XX_PLL_MUL == 12
    #     CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ == 12000000
    #     CYGNUM_HAL_ARM_LPC24XX_PLL_DIV == 1
    # Flavor: data
    # Current_value: 288000000
    # Legal values: 275000000 to 290000000
};

# CPU clock speed
# The core CPU clock speed is the PLL output divided by the 
# CPU clock divider
#
cdl_component CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED {
    # Calculated value:   2 * CYGNUM_HAL_ARM_LPC24XX_PLL_MUL * 
    #                               CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ / 
    #                               CYGNUM_HAL_ARM_LPC24XX_PLL_DIV / 
    #                               CYGNUM_HAL_ARM_LPC24XX_CPU_CLK_DIV
    #     CYGNUM_HAL_ARM_LPC24XX_PLL_MUL == 12
    #     CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ == 12000000
    #     CYGNUM_HAL_ARM_LPC24XX_PLL_DIV == 1
    #     CYGNUM_HAL_ARM_LPC24XX_CPU_CLK_DIV == 6
    # Flavor: data
    # Current_value: 48000000

    # The following properties are affected by this value
    # component CYGNUM_HAL_ARM_LPC2XXX_CAN_CLK
    #     Calculated:   CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / 
    #                                 CYGNUM_HAL_ARM_LPC24XX_CAN_CLK_DIV
    # component CYGNUM_HAL_ARM_LPC24XX_RTC_CLK
    #     Calculated:   CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / 
    #                                 CYGNUM_HAL_ARM_LPC24XX_RTC_CLK_DIV
    # component CYGNUM_HAL_ARM_LPC24XX_ADC_CLK
    #     Calculated:   CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / 
    #                                 CYGNUM_HAL_ARM_LPC24XX_ADC_CLK_DIV
    # component CYGNUM_HAL_ARM_LPC24XX_I2C0_CLK
    #     Calculated: CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / CYGNUM_HAL_ARM_LPC24XX_I2C0_CLK_DIV
    # component CYGNUM_HAL_ARM_LPC24XX_I2C1_CLK
    #     Calculated: CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / CYGNUM_HAL_ARM_LPC24XX_I2C1_CLK_DIV
    # component CYGNUM_HAL_ARM_LPC24XX_I2C2_CLK
    #     Calculated: CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / CYGNUM_HAL_ARM_LPC24XX_I2C2_CLK_DIV
    # option CYGNUM_HAL_RTC_PERIOD
    #     DefaultValue:  ((CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED) / 
    #                                   CYGNUM_HAL_RTC_DENOMINATOR) 
    # option CYGNUM_HAL_ARM_LPC24XX_MAX_CLOCK_SPEED
    #     Requires: CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED <= 57600000
};

# >
# CPU clock divider
# The CPU clock divider controls the division of the PLL 
# output before it is used by the CPU. When the PLL is 
# bypassed, the division may be by 1. When the PLL is 
# running, the output must be divided in order to bring the 
# CPU clock frequency (CCLK) within operating limits. An 8 
# bit divider allows a range of options, including slowing 
# CPU operation to a low rate for temporary power savings 
# without turning off the PLL. Only even values 
# (2, 4, 6, ..., 256) are supported and can be used. 
# Warning: Using an odd value (1, 3, 5, ..., 255) when 
# setting this option may result in incorrect operation of 
# the device.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_CPU_CLK_DIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 6
    # value_source default
    # Default value: 6
    # Legal values: 6 to 256

    # The following properties are affected by this value
    # component CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED
    #     Calculated:   2 * CYGNUM_HAL_ARM_LPC24XX_PLL_MUL * 
    #                               CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ / 
    #                               CYGNUM_HAL_ARM_LPC24XX_PLL_DIV / 
    #                               CYGNUM_HAL_ARM_LPC24XX_CPU_CLK_DIV
};

# <
# USB clock speed
# The USB clock speed is the PLL output divided by the 
# USB clock divider
#
cdl_component CYGNUM_HAL_ARM_LPC24XX_USB_CLOCK_SPEED {
    # Calculated value:   2 * CYGNUM_HAL_ARM_LPC24XX_PLL_MUL * 
    #                               CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ / 
    #                               CYGNUM_HAL_ARM_LPC24XX_PLL_DIV / 
    #                               CYGNUM_HAL_ARM_LPC24XX_USB_CLK_DIV
    #     CYGNUM_HAL_ARM_LPC24XX_PLL_MUL == 12
    #     CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ == 12000000
    #     CYGNUM_HAL_ARM_LPC24XX_PLL_DIV == 1
    #     CYGNUM_HAL_ARM_LPC24XX_USB_CLK_DIV == 6
    # Flavor: data
    # Current_value: 48000000
};

# >
# USB clock divider
# This divider controls the division of the PLL
# output before it is used by the USB block. If the
# PLL is bypassed, the division may be by 1. In that
# case, the PLL input frequency must be 48 MHz, with
# a 500 ppm tolerance. When the PLL is running, the
# output must be divided in order to bring the USB
# clock frequency to 48 MHz with a 50% duty cycle. A
# 4-bit divider allows obtaining the correct USB
# clock from any even multiple of 48 MHz (i.e. any
# mutliple of 96 MHz) within the PLL operating
# range.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_USB_CLK_DIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 6
    # value_source default
    # Default value: 6
    # Legal values: 1 to 8

    # The following properties are affected by this value
    # component CYGNUM_HAL_ARM_LPC24XX_USB_CLOCK_SPEED
    #     Calculated:   2 * CYGNUM_HAL_ARM_LPC24XX_PLL_MUL * 
    #                               CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ / 
    #                               CYGNUM_HAL_ARM_LPC24XX_PLL_DIV / 
    #                               CYGNUM_HAL_ARM_LPC24XX_USB_CLK_DIV
};

# <
# CAN clock speed
# The CAN clock speed is the CPU clock output divided by the 
# CAN clock divider
#
cdl_component CYGNUM_HAL_ARM_LPC2XXX_CAN_CLK {
    # Calculated value:   CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / 
    #                                 CYGNUM_HAL_ARM_LPC24XX_CAN_CLK_DIV
    #     CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED == 48000000
    #     CYGNUM_HAL_ARM_LPC24XX_CAN_CLK_DIV == 1
    # Flavor: data
    # Current_value: 48000000
};

# >
# CAN clock divider
# This divider selects the peripheral clock for both CAN 
# channels. The divider divides the CPU clock to get the 
# clock for the CAN peripherals.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_CAN_CLK_DIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Legal values:  1 2 4 6 

    # The following properties are affected by this value
    # component CYGNUM_HAL_ARM_LPC2XXX_CAN_CLK
    #     Calculated:   CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / 
    #                                 CYGNUM_HAL_ARM_LPC24XX_CAN_CLK_DIV
};

# <
# RTC clock speed
# The RTC clock speed is the CPU clock output divided by the 
# RTC clock divider
#
cdl_component CYGNUM_HAL_ARM_LPC24XX_RTC_CLK {
    # Calculated value:   CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / 
    #                                 CYGNUM_HAL_ARM_LPC24XX_RTC_CLK_DIV
    #     CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED == 48000000
    #     CYGNUM_HAL_ARM_LPC24XX_RTC_CLK_DIV == 2
    # Flavor: data
    # Current_value: 24000000
};

# >
# RTC clock divider
# This divider selects the peripheral clock for on-chip 
# RTC if no external 32.768 kHz crystal clock for the 
# on-chip real-time clock peripheral unit is provided.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_RTC_CLK_DIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 2
    # value_source default
    # Default value: 2
    # Legal values:  2 4 8 

    # The following properties are affected by this value
    # component CYGNUM_HAL_ARM_LPC24XX_RTC_CLK
    #     Calculated:   CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / 
    #                                 CYGNUM_HAL_ARM_LPC24XX_RTC_CLK_DIV
};

# <
# ADC clock speed
# The ADC clock speed is the CPU clock output divided by the 
# ADC clock divider
#
cdl_component CYGNUM_HAL_ARM_LPC24XX_ADC_CLK {
    # Calculated value:   CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / 
    #                                 CYGNUM_HAL_ARM_LPC24XX_ADC_CLK_DIV
    #     CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED == 48000000
    #     CYGNUM_HAL_ARM_LPC24XX_ADC_CLK_DIV == 1
    # Flavor: data
    # Current_value: 48000000
};

# >
# ADC clock divider
# This divider selects the peripheral clock for on-chip 
# ADC. The ADC clock is the input clock of the ADC 
# peripheral.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_ADC_CLK_DIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Legal values:  1 2 4 8 

    # The following properties are affected by this value
    # component CYGNUM_HAL_ARM_LPC24XX_ADC_CLK
    #     Calculated:   CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / 
    #                                 CYGNUM_HAL_ARM_LPC24XX_ADC_CLK_DIV
};

# <
# I2C channel 0 clock speed
# The I2C clock speed is the CPU clock output divided by the 
# I2C clock divider
#
cdl_component CYGNUM_HAL_ARM_LPC24XX_I2C0_CLK {
    # Calculated value: CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / CYGNUM_HAL_ARM_LPC24XX_I2C0_CLK_DIV
    #     CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED == 48000000
    #     CYGNUM_HAL_ARM_LPC24XX_I2C0_CLK_DIV == 1
    # Flavor: data
    # Current_value: 48000000
};

# >
# I2C channel 0 clock divider
# This divider selects the peripheral clock for I2C 
# channel 0. The divider divides the CPU 
# clock to get the clock for the I2C peripheral.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_I2C0_CLK_DIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Legal values:  1 2 4 8 

    # The following properties are affected by this value
    # component CYGNUM_HAL_ARM_LPC24XX_I2C0_CLK
    #     Calculated: CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / CYGNUM_HAL_ARM_LPC24XX_I2C0_CLK_DIV
};

# <
# I2C channel 1 clock speed
# The I2C clock speed is the CPU clock output divided by the 
# I2C clock divider
#
cdl_component CYGNUM_HAL_ARM_LPC24XX_I2C1_CLK {
    # Calculated value: CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / CYGNUM_HAL_ARM_LPC24XX_I2C1_CLK_DIV
    #     CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED == 48000000
    #     CYGNUM_HAL_ARM_LPC24XX_I2C1_CLK_DIV == 1
    # Flavor: data
    # Current_value: 48000000
};

# >
# I2C channel 1 clock divider
# This divider selects the peripheral clock for I2C 
# channel 1. The divider divides the CPU 
# clock to get the clock for the I2C peripheral.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_I2C1_CLK_DIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Legal values:  1 2 4 8 

    # The following properties are affected by this value
    # component CYGNUM_HAL_ARM_LPC24XX_I2C1_CLK
    #     Calculated: CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / CYGNUM_HAL_ARM_LPC24XX_I2C1_CLK_DIV
};

# <
# I2C channel 2 clock speed
# The I2C clock speed is the CPU clock output divided by the 
# I2C clock divider
#
cdl_component CYGNUM_HAL_ARM_LPC24XX_I2C2_CLK {
    # Calculated value: CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / CYGNUM_HAL_ARM_LPC24XX_I2C2_CLK_DIV
    #     CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED == 48000000
    #     CYGNUM_HAL_ARM_LPC24XX_I2C2_CLK_DIV == 1
    # Flavor: data
    # Current_value: 48000000
};

# >
# I2C channel 2 clock divider
# This divider selects the peripheral clock for I2C 
# channel 2. The divider divides the CPU 
# clock to get the clock for the I2C peripheral.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_I2C2_CLK_DIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Legal values:  1 2 4 8 

    # The following properties are affected by this value
    # component CYGNUM_HAL_ARM_LPC24XX_I2C2_CLK
    #     Calculated: CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED / CYGNUM_HAL_ARM_LPC24XX_I2C2_CLK_DIV
};

# <
# CPU xtal frequency
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 12000000
    # value_source default
    # Default value: 12000000

    # The following properties are affected by this value
    # option CYGNUM_HAL_ARM_LPC24XX_PLL_OUTPUT
    #     Calculated:   2 * CYGNUM_HAL_ARM_LPC24XX_PLL_MUL * 
    #                               CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ / 
    #                               CYGNUM_HAL_ARM_LPC24XX_PLL_DIV
    # component CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED
    #     Calculated:   2 * CYGNUM_HAL_ARM_LPC24XX_PLL_MUL * 
    #                               CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ / 
    #                               CYGNUM_HAL_ARM_LPC24XX_PLL_DIV / 
    #                               CYGNUM_HAL_ARM_LPC24XX_CPU_CLK_DIV
    # component CYGNUM_HAL_ARM_LPC24XX_USB_CLOCK_SPEED
    #     Calculated:   2 * CYGNUM_HAL_ARM_LPC24XX_PLL_MUL * 
    #                               CYGNUM_HAL_ARM_LPC24XX_XTAL_FREQ / 
    #                               CYGNUM_HAL_ARM_LPC24XX_PLL_DIV / 
    #                               CYGNUM_HAL_ARM_LPC24XX_USB_CLK_DIV
};

# Max. CPU clock speed
# Due to a silicon errata, the highest internal core
# clock frequency (at the time of writing this document)
# is 57.6 MHz. This corresponds to an internal PLL
# frequency of 288 MHz that is divided by 6 to get a 48
# MHz clock for the core and the USB interface.
#
cdl_option CYGNUM_HAL_ARM_LPC24XX_MAX_CLOCK_SPEED {
    # Calculated value: 57600000
    # Flavor: data
    # Current_value: 57600000
    # Requires: CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED <= 57600000
    #     CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED == 48000000
    #   --> 1
};

# <
# Real-time clock constants
#
cdl_component CYGNUM_HAL_RTC_CONSTANTS {
    # There is no associated value.
};

# >
# Real-time clock numerator
#
cdl_option CYGNUM_HAL_RTC_NUMERATOR {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1000000000
    # value_source default
    # Default value: 1000000000
};

# Real-time clock denominator
#
cdl_option CYGNUM_HAL_RTC_DENOMINATOR {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100
    # value_source default
    # Default value: 100

    # The following properties are affected by this value
    # option CYGNUM_HAL_RTC_PERIOD
    #     DefaultValue:  ((CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED) / 
    #                                   CYGNUM_HAL_RTC_DENOMINATOR) 
};

# Real-time clock period
#
cdl_option CYGNUM_HAL_RTC_PERIOD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 480000
    # value_source default
    # Default value:  ((CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED) / 
    #                                   CYGNUM_HAL_RTC_DENOMINATOR) 
    #     CYGNUM_HAL_ARM_LPC24XX_CLOCK_SPEED == 48000000
    #     CYGNUM_HAL_RTC_DENOMINATOR == 100
    #   --> 480000
};

# <
# Stop clock in idle loop to save power
# Select this option when it is desired to save power by
# stopping the processor clock in the idle loop. This is
# controlled by the PCON register. Generally this is a good
# thing, but it may be necessary to disable this when
# debugging via JTAG, as stopping the clock can prevent the
# debugger getting control of the system.
#
cdl_option CYGHWR_HAL_ARM_LPC24XX_IDLE_PWRSAVE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  is_active(CYGPKG_REDBOOT) ? 0 : 1 
    #     CYGPKG_REDBOOT == v3_0
    #   --> 0
};

# Default priority for system clock interrupts
# There are 16 priority levels, corresponding to the values 0 through
# 15 decimal, of which 15 is the lowest priority. The reset value of 
# these interrupt priority registers defaults all interrupts to the 
# lowest priority, allowing a single write to elevate the priority 
# of an individual interrupt.
#
cdl_option CYGNUM_HAL_KERNEL_COUNTERS_CLOCK_ISR_DEFAULT_PRIORITY {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 15
    # value_source default
    # Default value: 15
    # Legal values:  0 to 15 
};

# Embedded Artists LPC2468 OEM Board board HAL
# The LPC2468 OEM HAL package provides the support needed to run
# eCos on Embedded Artists LPC2468 OEM 16/32 boards.
#
cdl_package CYGPKG_HAL_ARM_LPC24XX_EA2468 {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
    # Requires:  CYGHWR_HAL_ARM_LPC24XX == "LPC2468" 
    #     CYGHWR_HAL_ARM_LPC24XX == LPC2468
    #   --> 1
    # Requires:  is_active(CYGPKG_DEVS_ETH_PHY) implies
    #                         (1 == CYGHWR_DEVS_ETH_PHY_KSZ8001) 
    #     CYGPKG_DEVS_ETH_PHY == v3_0
    #     CYGHWR_DEVS_ETH_PHY_KSZ8001 == 1
    #   --> 1
};

# >
# Startup type
# Choose RAM or ROM startup type. Typically ROM startup is used for
# building RedBoot. RedBoot runs from internal on chip flash of
# LPC24xx. Use RAM startup for building eCos applications.
# RedBoot manages the external on board flash devices. It copies
# the eCos application image from FLASH to on board SDRAM 
# and then starts the eCos application.
#
cdl_component CYG_HAL_STARTUP {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ROM
    # value_source default
    # Default value: ROM
    # Legal values: "RAM" "ROM"

    # The following properties are affected by this value
    # option CYGSEM_HAL_ROM_MONITOR
    #     Requires:  CYG_HAL_STARTUP == "ROM"
    # option CYGSEM_HAL_USE_ROM_MONITOR
    #     DefaultValue:  CYG_HAL_STARTUP == "RAM" ? "GDB_stubs" : 0 
    # option CYGSEM_HAL_USE_ROM_MONITOR
    #     Requires:  CYG_HAL_STARTUP == "RAM" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  (CYG_HAL_STARTUP == "RAM") ? "arm_lpc24xx_ea2468_ram" :
    #                                                       "arm_lpc24xx_ea2468_rom" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  (CYG_HAL_STARTUP == "RAM") ? 
    #                                  "<pkgconf/mlt_arm_lpc24xx_ea2468_ram.ldi>" :
    #                                  "<pkgconf/mlt_arm_lpc24xx_ea2468_rom.ldi>" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated:  (CYG_HAL_STARTUP == "RAM") ? 
    #                                  "<pkgconf/mlt_arm_lpc24xx_ea2468_ram.h>" :
    #                                  "<pkgconf/mlt_arm_lpc24xx_ea2468_rom.h>" 
    # option CYGSEM_HAL_INSTALL_MMU_TABLES
    #     DefaultValue:  CYG_HAL_STARTUP != "RAM" 
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     DefaultValue:  (CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS  || CYG_HAL_STARTUP == "RAM") ? 1 : 0
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     DefaultValue:  CYG_HAL_STARTUP != "RAM" || !CYGSEM_HAL_USE_ROM_MONITOR 
    # option CYGBLD_BUILD_REDBOOT_WITH_THREADS
    #     ActiveIf:  CYG_HAL_STARTUP != "RAM" 
    # option CYGPRI_REDBOOT_ROM_MONITOR
    #     ActiveIf:  CYG_HAL_STARTUP == "ROM" ||  CYG_HAL_STARTUP == "ROMRAM" 
    # option CYGPRI_REDBOOT_ROM_MONITOR
    #     ActiveIf:  CYG_HAL_STARTUP == "ROM" ||  CYG_HAL_STARTUP == "ROMRAM" 
};

# Number of communication channels on the board
# Channel 0: UART0, Channel 1: UART1
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS {
    # Calculated value: 2
    # Flavor: data
    # Current_value: 2

    # The following properties are affected by this value
    # option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL
    #     LegalValues: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
    # option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL
    #     LegalValues: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
};

# Default console channel.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_DEFAULT {
    # This option is not active
    # ActiveIf constraint: CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
    #     CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE == 0
    #   --> 0

    # Calculated value: 0
    # Flavor: data
    # Current_value: 0
};

# Debug serial port
# The LPC2468 OEM board has two serial channels. The first
# channel, UART0, is routed to an USB-to-serial bridge and
# the second channel, UART1, is available on the Sub-D9
# RS232 connector. This option chooses which channel will be
# used to connect to a host running GDB.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL {
    # ActiveIf constraint: CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE
    #     CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE == 1
    #   --> 1

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
    #     CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS == 2
};

# GDB serial port baud rate
# This option controls the baud rate used for the GDB
# connection.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_BAUD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 38400
    # value_source default
    # Default value: 38400
    # Legal values: 9600 19200 38400 57600 115200
};

# Diagnostic serial port
# The LPC2468 OEM board has two serial ports. This option
# chooses which port will be used for diagnostic output.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL {
    # This option is not active
    # ActiveIf constraint: CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
    #     CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
    #     CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS == 2
};

# Diagnostic serial port baud rate
# This option selects the baud rate used for the diagnostic port.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD {
    # Flavor: data
    user_value 57600
    # value_source user
    # Default value: 38400
    # Legal values: 9600 19200 38400 57600 115200
};

# Data bus width
# The LPC2468 OEM board is sold in two different data bus 
# versions - a 16-bit version and a 32-bit version.
#
cdl_option CYGHWR_HAL_ARM_LPC24XX_EA2468_DATA_BUS_WIDTH {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value: 16
    # Legal values:  16 32 
};

# Memory layout
#
cdl_component CYGHWR_MEMORY_LAYOUT {
    # Calculated value:  (CYG_HAL_STARTUP == "RAM") ? "arm_lpc24xx_ea2468_ram" :
    #                                                       "arm_lpc24xx_ea2468_rom" 
    #     CYG_HAL_STARTUP == ROM
    # Flavor: data
    # Current_value: arm_lpc24xx_ea2468_rom
};

# >
# Memory layout linker script fragment
#
cdl_option CYGHWR_MEMORY_LAYOUT_LDI {
    # Calculated value:  (CYG_HAL_STARTUP == "RAM") ? 
    #                                  "<pkgconf/mlt_arm_lpc24xx_ea2468_ram.ldi>" :
    #                                  "<pkgconf/mlt_arm_lpc24xx_ea2468_rom.ldi>" 
    #     CYG_HAL_STARTUP == ROM
    # Flavor: data
    # Current_value: <pkgconf/mlt_arm_lpc24xx_ea2468_rom.ldi>
};

# Memory layout header file
#
cdl_option CYGHWR_MEMORY_LAYOUT_H {
    # Calculated value:  (CYG_HAL_STARTUP == "RAM") ? 
    #                                  "<pkgconf/mlt_arm_lpc24xx_ea2468_ram.h>" :
    #                                  "<pkgconf/mlt_arm_lpc24xx_ea2468_rom.h>" 
    #     CYG_HAL_STARTUP == ROM
    # Flavor: data
    # Current_value: <pkgconf/mlt_arm_lpc24xx_ea2468_rom.h>
};

# <
# Tests for LPC2468 OEM board HAL
# This option specifies the set of tests for the EA2468 
# OEM board HAL.
#
cdl_option CYGPKG_HAL_ARM_LPC24XX_EA2468_TESTS {
    # Calculated value:  "tests/i2c_eeprom" 
    # Flavor: data
    # Current_value: tests/i2c_eeprom
};

# <
# <
# <
# <
# Infrastructure
# Common types and useful macros.
# Tracing and assertion facilities.
# Package startup options.
#
cdl_package CYGPKG_INFRA {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0

    # The following properties are affected by this value
    # package CYGPKG_IO_I2C
    #     Requires: CYGPKG_INFRA CYGPKG_HAL
    # package CYGPKG_HAL
    #     Requires: CYGPKG_INFRA
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGPKG_INFRA
};

# >
# Asserts & Tracing
# The eCos source code contains a significant amount of
# internal debugging support, in the form of assertions and
# tracing.
# Assertions check at runtime that various conditions are as
# expected; if not, execution is halted.
# Tracing takes the form of text messages that are output
# whenever certain events occur, or whenever functions are
# called or return.
# The most important property of these checks and messages is
# that they are not required for the program to run.
# It is prudent to develop software with assertions enabled,
# but disable them when making a product release, thus
# removing the overhead of that checking.
# It is possible to enable assertions and tracing
# independently.
# There are also options controlling the exact behaviour of
# the assertion and tracing facilities, thus giving users
# finer control over the code and data size requirements.
#
cdl_component CYGPKG_INFRA_DEBUG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGNUM_INFRA_EMPTY_DELETE_THRESHOLD
    #     ActiveIf: CYGPKG_INFRA_DEBUG
};

# >
# Use asserts
# If this option is defined, asserts in the code are tested.
# Assert functions (CYG_ASSERT()) are defined in
# 'include/cyg/infra/cyg_ass.h' within the 'install' tree.
# If it is not defined, these result in no additional
# object code and no checking of the asserted conditions.
#
cdl_component CYGDBG_USE_ASSERTS {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
    #     CYGINT_INFRA_DEBUG_TRACE_IMPL == 0
    #   --> 0
};

# >
# Preconditions
# This option allows individual control of preconditions.
# A precondition is one type of assert, which it is
# useful to control separately from more general asserts.
# The function is CYG_PRECONDITION(condition,msg).
#
cdl_option CYGDBG_INFRA_DEBUG_PRECONDITIONS {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Postconditions
# This option allows individual control of postconditions.
# A postcondition is one type of assert, which it is
# useful to control separately from more general asserts.
# The function is CYG_POSTCONDITION(condition,msg).
#
cdl_option CYGDBG_INFRA_DEBUG_POSTCONDITIONS {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Loop invariants
# This option allows individual control of loop invariants.
# A loop invariant is one type of assert, which it is
# useful to control separately from more general asserts,
# particularly since a loop invariant is typically evaluated
# a great many times when used correctly.
# The function is CYG_LOOP_INVARIANT(condition,msg).
#
cdl_option CYGDBG_INFRA_DEBUG_LOOP_INVARIANTS {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Use assert text
# All assertions within eCos contain a text message
# which should give some information about the condition
# being tested.
# These text messages will end up being embedded in the
# application image and hence there is a significant penalty
# in terms of image size.
# It is possible to suppress the use of these messages by
# disabling this option.
# This results in smaller code size, but there is less
# human-readable information if an assertion actually gets
# triggered.
#
cdl_option CYGDBG_INFRA_DEBUG_ASSERT_MESSAGE {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Use tracing
# If this option is defined, tracing operations
# result in output or logging, depending on other options.
# This may have adverse effects on performance, if the time
# taken to output message overwhelms the available CPU
# power or output bandwidth.
# Trace functions (CYG_TRACE()) are defined in
# 'include/cyg/infra/cyg_trac.h' within the 'install' tree.
# If it is not defined, these result in no additional
# object code and no trace information.
#
cdl_component CYGDBG_USE_TRACING {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
    #     CYGINT_INFRA_DEBUG_TRACE_IMPL == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_WRAP
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_HALT
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT_ON_ASSERT
    #     ActiveIf: CYGDBG_USE_TRACING
};

# >
# Trace function reports
# This option allows individual control of
# function entry/exit tracing, independent of
# more general tracing output.
# This may be useful to remove clutter from a
# trace log.
#
cdl_option CYGDBG_INFRA_DEBUG_FUNCTION_REPORTS {
    # This option is not active
    # The parent CYGDBG_USE_TRACING is not active
    # The parent CYGDBG_USE_TRACING is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Use trace text
# All trace calls within eCos contain a text message
# which should give some information about the circumstances.
# These text messages will end up being embedded in the
# application image and hence there is a significant penalty
# in terms of image size.
# It is possible to suppress the use of these messages by
# disabling this option.
# This results in smaller code size, but there is less
# human-readable information available in the trace output,
# possibly only filenames and line numbers.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_MESSAGE {
    # This option is not active
    # The parent CYGDBG_USE_TRACING is not active
    # The parent CYGDBG_USE_TRACING is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Trace output implementations
#
cdl_interface CYGINT_INFRA_DEBUG_TRACE_IMPL {
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_NULL, inactive, disabled
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_SIMPLE, inactive, disabled
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_FANCY, inactive, disabled
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER, inactive, enabled
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # component CYGDBG_USE_ASSERTS
    #     Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
    # component CYGDBG_USE_TRACING
    #     Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
};

# Null output
# A null output module which is useful when
# debugging interactively; the output routines
# can be breakpointed rather than have them actually
# 'print' something.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_ASSERT_NULL {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Simple output
# An output module which produces simple output
# from tracing and assertion events.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_ASSERT_SIMPLE {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Fancy output
# An output module which produces fancy output
# from tracing and assertion events.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_ASSERT_FANCY {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Buffered tracing
# An output module which buffers output
# from tracing and assertion events. The stored
# messages are output when an assert fires, or
# CYG_TRACE_PRINT() (defined in <cyg/infra/cyg_trac.h>)
# is called.
# Of course, there will only be stored messages
# if tracing per se (CYGDBG_USE_TRACING)
# is enabled above.
#
cdl_component CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Trace buffer size
# The size of the trace buffer. This counts the number
# of trace records stored. When the buffer fills it
# either wraps, stops recording, or generates output.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
    # Legal values: 5 to 65535
};

# Wrap trace buffer when full
# When the trace buffer has filled with records it
# starts again at the beginning. Hence only the last
# CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE messages will
# be recorded.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_WRAP {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Halt trace buffer when full
# When the trace buffer has filled with records it
# stops recording. Hence only the first
# CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE messages will
# be recorded.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_HALT {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Print trace buffer when full
# When the trace buffer has filled with records it
# prints the contents of the buffer. The buffer is then
# emptied and the system continues.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Print trace buffer on assert fail
# When an assertion fails the trace buffer will be 
# printed to the default diagnostic device.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT_ON_ASSERT {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Use function names
# All trace and assert calls within eCos contain a
# reference to the builtin macro '__PRETTY_FUNCTION__',
# which evaluates to a string containing
# the name of the current function.
# This is useful when reading a trace log.
# It is possible to suppress the use of the function name
# by disabling this option.
# This results in smaller code size, but there is less
# human-readable information available in the trace output,
# possibly only filenames and line numbers.
#
cdl_option CYGDBG_INFRA_DEBUG_FUNCTION_PSEUDOMACRO {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Startup options
# Some packages require a startup routine to be called.
# This can be carried out by application code, by supplying
# a routine called cyg_package_start() which calls the
# appropriate package startup routine(s).
# Alternatively, this routine can be constructed automatically
# and configured to call the startup routines of your choice.
#
cdl_component CYGPKG_INFRA_STARTUP {
    # There is no associated value.
};

# >
# Start uITRON subsystem
# Generate a call to initialize the
# uITRON compatibility subsystem
# within the system version of cyg_package_start().
# This enables compatibility with uITRON.
# You must configure uITRON with the correct tasks before
# starting the uItron subsystem.
# If this is disabled, and you want to use uITRON,
# you must call cyg_uitron_start() from your own
# cyg_package_start() or cyg_userstart().
#
cdl_option CYGSEM_START_UITRON_COMPATIBILITY {
    # This option is not active
    # ActiveIf constraint: CYGPKG_UITRON
    #     CYGPKG_UITRON (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGPKG_UITRON
    #     CYGPKG_UITRON (unknown) == 0
    #   --> 0
};

# <
# Smaller slower memcpy()
# Enabling this option causes the implementation of
# the standard memcpy() routine to reduce code
# size at the expense of execution speed. This
# option is automatically enabled with the use of
# the -Os option to the compiler. Also note that
# the compiler will try to use its own builtin
# version of memcpy() if possible, ignoring the
# implementation in this package, unless given
# the -fno-builtin compiler option.
#
cdl_option CYGIMP_INFRA_PREFER_SMALL_TO_FAST_MEMCPY {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Smaller slower memset()
# Enabling this option causes the implementation of
# the standard memset() routine to reduce code
# size at the expense of execution speed. This
# option is automatically enabled with the use of
# the -Os option to the compiler. Also note that
# the compiler will try to use its own builtin
# version of memset() if possible, ignoring the
# implementation in this package, unless given
# the -fno-builtin compiler option.
#
cdl_option CYGIMP_INFRA_PREFER_SMALL_TO_FAST_MEMSET {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Provide empty C++ delete functions
# To deal with virtual destructors, where the correct delete()
# function must be called for the derived class in question, the
# underlying delete is called when needed, from destructors.  This
# is regardless of whether the destructor is called by delete itself.
# So there is a reference to delete() from all destructors.  The
# default builtin delete() attempts to call free() if there is
# one defined.  So, if you have destructors, and you have free(),
# as in malloc() and free(), any destructor counts as a reference
# to free().  So the dynamic memory allocation code is linked
# in regardless of whether it gets explicitly called. This
# increases code and data size needlessly.
# To defeat this undesirable behaviour, we define empty versions
# of delete and delete[].  But doing this prevents proper use
# of dynamic memory in C++ programs via C++'s new and delete
# operators.
# Therefore, this option is provided
# for explicitly disabling the provision of these empty functions,
# so that new and delete can be used, if that is what is required.
#
cdl_option CYGFUN_INFRA_EMPTY_DELETE_FUNCTIONS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Threshold for valid number of delete calls
# Some users don't know about the empty delete function and then
# wonder why their C++ classes are leaking memory. If
# INFRA_DEBUG is enabled we keep a counter for the number of
# times delete is called. If it goes above this threshold we throw
# an assertion failure. This should point heavy users of
# delete in the right direction without upsetting those who want
# an empty delete function. 
#
cdl_option CYGNUM_INFRA_EMPTY_DELETE_THRESHOLD {
    # This option is not active
    # ActiveIf constraint: CYGPKG_INFRA_DEBUG
    #     CYGPKG_INFRA_DEBUG == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100
    # value_source default
    # Default value: 100
};

# Provide dummy abort() function
# This option controls the inclusion of a dummy abort() function.
# Parts of the C and C++ compiler runtime systems contain references
# to abort(), particulary in the C++ exception handling code. It is
# not possible to eliminate these references, so this dummy function
# in included to satisfy them. It is not expected that this function
# will ever be called, so its current behaviour is to simply loop.
#
cdl_option CYGFUN_INFRA_DUMMY_ABORT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  CYGINT_ISO_EXIT == 0 
    #     CYGINT_ISO_EXIT == 0
    #   --> 1
    # Requires: !CYGINT_ISO_EXIT
    #     CYGINT_ISO_EXIT == 0
    #   --> 1
};

# Reset platform at end of test case execution
# If this option is set then test case programs will reset the platform
# when they terminate, as opposed to the default which is to just hang
# in a loop.
#
cdl_option CYGSEM_INFRA_RESET_ON_TEST_EXIT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Provide dummy strlen() function
# This option controls the inclusion of a dummy strlen() function.
# Parts of the C and C++ compiler runtime systems contain references
# to strlen(), particulary in the C++ exception handling code. It is
# not possible to eliminate these references, so this dummy function
# in included to satisfy them. While it is not expected that this function
# will ever be called, it is functional but uses the simplest, smallest
# algorithm. There is a faster version of strlen() in the C library.
#
cdl_option CYGFUN_INFRA_DUMMY_STRLEN {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGINT_ISO_STRING_STRFUNCS == 0 
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 0
    # Requires: !CYGINT_ISO_STRING_STRFUNCS
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 0
};

# Make all compiler warnings show as errors
# Enabling this option will cause all compiler warnings to show
# as errors and bring the library build to a halt. This is used
# to ensure that the code base is warning free, and thus ensure
# that newly introduced warnings stand out and get fixed before
# they show up as weird run-time behavior.
#
cdl_option CYGBLD_INFRA_CFLAGS_WARNINGS_AS_ERRORS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  is_substr(CYGBLD_GLOBAL_CFLAGS, " -Werror") 
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #   --> 0
};

# Make compiler and assembler communicate by pipe
# Enabling this option will cause the compiler to feed the
# assembly output the the assembler via a pipe instead of
# via a temporary file. This normally reduces the build
# time.
#
cdl_option CYGBLD_INFRA_CFLAGS_PIPE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  is_substr(CYGBLD_GLOBAL_CFLAGS, " -pipe") 
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings  -mthumb-interwork -mcpu=arm7tdmi -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions "
    #   --> 0
};

# Infra build options
# Package specific build options including control over
# compiler flags used only in building this package.
#
cdl_component CYGPKG_INFRA_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the eCos infra package. These flags are used
# in addition to the set of global flags.
#
cdl_option CYGPKG_INFRA_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the eCos infra package. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_INFRA_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed linker flags
# This option modifies the set of linker flags for
# building the eCos infra package tests. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_INFRA_LDFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -Wl,--gc-sections
    # value_source default
    # Default value: -Wl,--gc-sections
};

# Additional linker flags
# This option modifies the set of linker flags for
# building the eCos infra package tests. These flags are added to
# the set of global flags if present.
#
cdl_option CYGPKG_INFRA_LDFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -Wl,--fatal-warnings
    # value_source default
    # Default value: -Wl,--fatal-warnings
};

# Infra package tests
#
cdl_component CYGPKG_INFRA_TESTS {
    # Calculated value:  "tests/cxxsupp tests/diag_sprintf1 tests/diag_sprintf2" 
    # Flavor: data
    # Current_value: tests/cxxsupp tests/diag_sprintf1 tests/diag_sprintf2
};

# >
# Number of times a test runs
# This option controls the number of times tests will execute their
# basic function.  Not all tests will honor this setting, but those
# that do will execute the test N times before terminating.  A value
# less than 0 indicates to run forever.
#
cdl_option CYGNUM_TESTS_RUN_COUNT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# <
# <
# Redboot ROM monitor
# doc: redboot-guide/redboot-guide.html
# This package supports the Redboot [stand-alone debug monitor]
# using eCos as the underlying board support mechanism.
#
cdl_package CYGPKG_REDBOOT {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
    # Requires:  CYGIMP_HAL_COMMON_INTERRUPTS_USE_INTERRUPT_STACK == 0 
    #     CYGIMP_HAL_COMMON_INTERRUPTS_USE_INTERRUPT_STACK == 0
    #   --> 1

    # The following properties are affected by this value
    # component CYGPKG_REDBOOT_ARM_OPTIONS
    #     ActiveIf: CYGPKG_REDBOOT
    # option CYGHWR_HAL_ARM_LPC24XX_IDLE_PWRSAVE
    #     DefaultValue:  is_active(CYGPKG_REDBOOT) ? 0 : 1 
    # component CYGPKG_REDBOOT_HAL_OPTIONS
    #     ActiveIf: CYGPKG_REDBOOT
    # component CYGPKG_DEVS_ETH_ARM_LPC2XXX_REDBOOT_HOLDS_ESA
    #     ActiveIf: (CYGPKG_REDBOOT || CYGSEM_HAL_USE_ROM_MONITOR)
    # option CYGSEM_IO_ETH_DRIVERS_WARN
    #     ActiveIf: CYGPKG_REDBOOT
};

# >
# Include support for ELF file format
#
cdl_component CYGSEM_REDBOOT_ELF {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Use the virtual address in the ELF headers
# The ELF headers contain both a virtual and a physical address
# for where code/data should be loaded. By default the physical
# address is used but sometimes it is necassary to use the
# virtual address because of bugy toolchains
#
cdl_option CYGOPT_REDBOOT_ELF_VIRTUAL_ADDRESS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Methods of loading images using redboot
#
cdl_interface CYGINT_REDBOOT_LOAD_METHOD {
    # Implemented by CYGBLD_BUILD_REDBOOT_WITH_XYZMODEM, active, enabled
    # Implemented by CYGPKG_REDBOOT_NETWORKING, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 2

    # The following properties are affected by this value
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGINT_REDBOOT_LOAD_METHOD
};

# Build Redboot ROM ELF image
# This option enables the building of the Redboot ELF image.
# The image may require further relocation or symbol
# stripping before being converted to a binary image.
# This is handled by a rule in the target CDL.
#
cdl_component CYGBLD_BUILD_REDBOOT {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: 0
    # Requires: CYGPKG_INFRA
    #     CYGPKG_INFRA == v3_0
    #   --> 1
    # Requires: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == v3_0
    #   --> 1
    # Requires: ! CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT == 0
    #   --> 1
    # Requires: ! CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT
    #     CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT == 0
    #   --> 1
    # Requires: ! CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM
    #     CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM == 0
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    #     CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT == 1
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 1
    #   --> 1
    # Requires: CYGINT_ISO_STRING_MEMFUNCS
    #     CYGINT_ISO_STRING_MEMFUNCS == 1
    #   --> 1
    # Requires: CYGINT_ISO_STRING_STRFUNCS
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 1
    # Requires: CYGINT_REDBOOT_LOAD_METHOD
    #     CYGINT_REDBOOT_LOAD_METHOD == 2
    #   --> 1

    # The following properties are affected by this value
    # option CYGBLD_BUILD_REDBOOT_BIN
    #     ActiveIf: CYGBLD_BUILD_REDBOOT
};

# >
# Include GDB support in RedBoot
# RedBoot normally includes support for the GDB debugging
# protocols. This option allows this to be disabled which
# may yield a substantial savings in terms of code and memory 
# usage by RedBoot.
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_GDB {
    # ActiveIf constraint: CYGINT_HAL_DEBUG_GDB_STUBS
    #     CYGINT_HAL_DEBUG_GDB_STUBS == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1
    # Requires: CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT == 1
    #   --> 1
};

# Threads debugging support
# Enabling this option will include special code in the
# GDB stubs to support debugging of threaded programs.  In
# the case of eCos programs, this support allows GDB to
# have complete access to the eCos threads in the
# program.
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_THREADS {
    # ActiveIf constraint:  CYG_HAL_STARTUP != "RAM" 
    #     CYG_HAL_STARTUP == ROM
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT == 1
    #   --> 1
};

# Customized version string
# Use this option to define a customized version "string" for
# RedBoot.  Note: this value is only cosmetic, displayed by the
# "version" command, but is useful for providing site specific
# information about the RedBoot configuration.
#
cdl_option CYGDAT_REDBOOT_CUSTOM_VERSION {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Enable command line editing
# If this option is non-zero, RedBoot will remember the
# last N command lines.  These lines may be reused.
# Enabling this history will also enable rudimentary
# editting of the lines themselves.
#
cdl_option CYGNUM_REDBOOT_CMD_LINE_EDITING {
    # Flavor: data
    user_value 0
    # value_source user
    # Default value: 16

    # The following properties are affected by this value
    # option CYGSEM_REDBOOT_CMD_LINE_ANSI_SEQUENCES
    #     ActiveIf: CYGNUM_REDBOOT_CMD_LINE_EDITING != 0
    # option CYGBLD_REDBOOT_CMD_LINE_HISTORY
    #     Requires:  CYGNUM_REDBOOT_CMD_LINE_EDITING > 0 
};

# Enable command line editing using ANSI arrows, etc
# If this option is enabled, RedBoot will accept standard ANSI key
# sequences for cursor movement (along with the emacs style keys).
#
cdl_option CYGSEM_REDBOOT_CMD_LINE_ANSI_SEQUENCES {
    # This option is not active
    # ActiveIf constraint: CYGNUM_REDBOOT_CMD_LINE_EDITING != 0
    #     CYGNUM_REDBOOT_CMD_LINE_EDITING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Enable history command and expansion
# Enabling this option will allow RedBoot to provide a
# history command to list previous commands. Also enables
# history expansion via '!'  character similar to bash
# shell.
#
cdl_option CYGBLD_REDBOOT_CMD_LINE_HISTORY {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # The inferred value should not be edited directly.
    inferred_value 0
    # value_source inferred
    # Default value: 1
    # Requires:  CYGNUM_REDBOOT_CMD_LINE_EDITING > 0 
    #     CYGNUM_REDBOOT_CMD_LINE_EDITING == 0
    #   --> 0
};

# Number of unique RAM segments on platform
# Change this option to be the number of memory segments which are
# supported by the platform.  If the value is greater than 1, then
# a platform specific function must provide information about the
# additional segments.
#
cdl_option CYGBLD_REDBOOT_MAX_MEM_SEGMENTS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Include support gzip/zlib decompression
#
cdl_component CYGBLD_BUILD_REDBOOT_WITH_ZLIB {
    # This option is not active
    # ActiveIf constraint: CYGPKG_COMPRESS_ZLIB
    #     CYGPKG_COMPRESS_ZLIB (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGOPT_REDBOOT_FIS_ZLIB_COMMON_BUFFER
    #     ActiveIf:  CYGBLD_BUILD_REDBOOT_WITH_ZLIB &&  CYGOPT_REDBOOT_FIS 
};

# >
# Size of zlib decompression buffer
# This is the size of the buffer filled with incoming data
# during load before calls are made to the decompressor
# function. For ethernet downloads this can be made bigger
# (at the cost of memory), but for serial downloads on slow
# processors it may be necessary to reduce the size to
# avoid serial overruns. zlib appears to bail out if less 
# than five bytes are available initially so this is the 
# minimum.
#
cdl_option CYGNUM_REDBOOT_LOAD_ZLIB_BUFFER {
    # This option is not active
    # The parent CYGBLD_BUILD_REDBOOT_WITH_ZLIB is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 64
    # value_source default
    # Default value: 64
    # Legal values: 5 to 256
};

# Support compression of Flash images
# This CDL indicates whether flash images can
# be decompressed from gzip/zlib format into RAM.
#
cdl_option CYGPRI_REDBOOT_ZLIB_FLASH {
    # This option is not active
    # The parent CYGBLD_BUILD_REDBOOT_WITH_ZLIB is not active
    # ActiveIf constraint: CYGPKG_REDBOOT_FLASH
    #     CYGPKG_REDBOOT_FLASH == 0
    #   --> 0
    # ActiveIf constraint: !CYGSEM_IO_FLASH_READ_INDIRECT
    #     CYGSEM_IO_FLASH_READ_INDIRECT (unknown) == 0
    #   --> 1

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# Include GZIP uncompress command
# Enable this option to include a 'gunzip' command 
# to uncompress GZIP compressed data.
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_GUNZIP {
    # This option is not active
    # The parent CYGBLD_BUILD_REDBOOT_WITH_ZLIB is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Include support for xyzModem downloads
# doc: ref/download-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_XYZMODEM {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Allow the load-command write into Flash.
# Write images direct to Flash via the load command.
# We assume anything which is invalid RAM is flash, hence
# the requires statement
#
cdl_option CYGBLD_REDBOOT_LOAD_INTO_FLASH {
    # This option is not active
    # ActiveIf constraint: CYGPKG_REDBOOT_FLASH
    #     CYGPKG_REDBOOT_FLASH == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGSEM_REDBOOT_VALIDATE_USER_RAM_LOADS
    #     CYGSEM_REDBOOT_VALIDATE_USER_RAM_LOADS == 1
    #   --> 1
};

# Include POSIX checksum command
# doc: ref/cksum-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_CKSUM {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Include memory fill command
# doc: ref/mfill-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_MFILL {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Include memory compare command
# doc: ref/mcmp-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_MCMP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Include memory copy command
# doc: ref/mcopy-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_MCOPY {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Include memory dump command
# doc: ref/dump-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_DUMP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Include cache command
# doc: ref/cache-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_CACHES {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Include exec command
# doc: ref/exec-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_EXEC {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # The inferred value should not be edited directly.
    inferred_value 0
    # value_source inferred
    # Default value: 1

    # The following properties are affected by this value
    # component CYGPKG_REDBOOT_ARM_LINUX_EXEC
    #     ActiveIf: CYGBLD_BUILD_REDBOOT_WITH_EXEC
    # option CYGBLD_BUILD_REDBOOT_BIN
    #     Requires:  !CYGBLD_BUILD_REDBOOT_WITH_EXEC 
};

# Include I/O Memory commands 'iopeek' and 'iopoke'
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_IOMEM {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Granularity of timer/ticks
# This option controls the granularity of the timers.
# Faster CPUs can afford higher granularity (lower values)
# which should give higher network performance since the stack
# is purely polled.
#
cdl_option CYGDBG_REDBOOT_TICK_GRANULARITY {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 250
    # value_source default
    # Default value: 250
    # Legal values:  50 100 250 500 1000 
};

# Redboot Networking
# This option includes networking support in RedBoot.
#
cdl_component CYGPKG_REDBOOT_NETWORKING {
    # ActiveIf constraint: CYGPKG_IO_ETH_DRIVERS
    #     CYGPKG_IO_ETH_DRIVERS == v3_0
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGSEM_DEVS_ETH_ARM_LPC2XXX_REDBOOT_HOLDS_ESA_ETH0
    #     ActiveIf: CYGPKG_REDBOOT_NETWORKING
    # option CYGSEM_IO_ETH_DRIVERS_PASS_PACKETS
    #     DefaultValue:  0 != CYGPKG_REDBOOT_NETWORKING 
};

# >
# Print net debug information
# This option is overriden by the configuration stored 
# in flash.
#
cdl_option CYGDBG_REDBOOT_NET_DEBUG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Support TFTP for download
# This option enables the use of the TFTP protocol for 
# download
#
cdl_option CYGSEM_REDBOOT_NET_TFTP_DOWNLOAD {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Support HTTP for download
# This option enables the use of the HTTP protocol for 
# download
#
cdl_option CYGSEM_REDBOOT_NET_HTTP_DOWNLOAD {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Default IP address
# This IP address is the default used by RedBoot if
# a BOOTP/DHCP server does not respond. The numbers
# should be separated by *commas*, and not dots. If
# an IP address is configured into the Flash
# configuration, that will be used in preference.
#
cdl_component CYGDAT_REDBOOT_DEFAULT_IP_ADDR {
    # Flavor: booldata
    user_value 1 "192, 168, 3, 3"
    # value_source user
    # Default value: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "0, 0, 0, 0" 
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 0
    #   --> 1 "0, 0, 0, 0"
};

# >
# Do not try to use BOOTP
# By default Redboot tries to use BOOTP to get an IP
# address. If there's no BOOTP server on your network
# use this option to avoid to wait until the
# timeout. This option is overriden by the
# configuration stored in flash.
#
cdl_option CYGSEM_REDBOOT_DEFAULT_NO_BOOTP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Default bootp server
# This IP address is the default server
# address used by RedBoot if a BOOTP/DHCP
# server does not respond. The numbers should
# be separated by *commas*, and not dots. If
# an IP address is configured into the Flash
# configuration, that will be used in
# preference.
#
cdl_option CYGDAT_REDBOOT_DEFAULT_BOOTP_SERVER_IP_ADDR {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 "0, 0, 0, 0"
    # value_source default
    # Default value: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "0, 0, 0, 0" 
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 0
    #   --> 1 "0, 0, 0, 0"
};

# <
# Use DHCP to get IP information
# Use DHCP protocol to obtain pertinent IP addresses, such 
# as the client, server, gateway, etc.
#
cdl_component CYGSEM_REDBOOT_NETWORKING_DHCP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGSEM_REDBOOT_NETWORKING_USE_GATEWAY
    #     Requires: CYGSEM_REDBOOT_NETWORKING_DHCP
};

# Use a gateway for non-local IP traffic
# Enabling this option will allow the RedBoot networking
# stack to use a [single] gateway to reach a non-local
# IP address.  If disabled, RedBoot will only be able to
# reach nodes on the same subnet.
#
cdl_component CYGSEM_REDBOOT_NETWORKING_USE_GATEWAY {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGSEM_REDBOOT_NETWORKING_DHCP
    #     CYGSEM_REDBOOT_NETWORKING_DHCP == 1
    #   --> 1
};

# >
# Default gateway IP address
# This IP address is the default used by RedBoot
# if a BOOTP/DHCP server does not respond. The
# numbers should be separated by *commas*, and
# not dots. If an IP address is configured into
# the Flash configuration, that will be used in
# preference.
#
cdl_component CYGDAT_REDBOOT_DEFAULT_GATEWAY_IP_ADDR {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 "0, 0, 0, 0"
    # value_source default
    # Default value: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "0, 0, 0, 0" 
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 0
    #   --> 1 "0, 0, 0, 0"
};

# Default IP address mask
# This IP address mask is the default used by
# RedBoot if a BOOTP/DHCP server does not
# respond. The numbers should be separated by
# *commas*, and not dots. If an IP address is
# configured into the Flash configuration, that
# will be used in preference.
#
cdl_component CYGDAT_REDBOOT_DEFAULT_IP_ADDR_MASK {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 "255, 255, 255, 0"
    # value_source default
    # Default value: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "255, 255, 255, 0" 
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 0
    #   --> 1 "255, 255, 255, 0"
};

# <
# TCP port to listen for incoming connections
# RedBoot will 'listen' on this port for incoming TCP 
# connections. This allows outside connections to be made 
# to the platform, either for GDB or RedBoot commands.
#
cdl_option CYGNUM_REDBOOT_NETWORKING_TCP_PORT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 9000
    # value_source default
    # Default value: 9000
};

# Number of [network] packet buffers
# RedBoot may need to buffer network data to support
# various connections.  This option allows control
# over the number of such buffered packets, and in
# turn, controls the amount of memory used by RedBoot
# (which is not available to user applications).
# Each packet buffer takes up about 1514 bytes.
# Note: there is little need to make this larger than
# the default.
#
cdl_option CYGNUM_REDBOOT_NETWORKING_MAX_PKTBUF {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4
    # value_source default
    # Default value: 4
    # Legal values: 3 to 8
};

# DNS support
# When this option is enabled, RedBoot will be built with
# support for DNS, allowing use of hostnames on the command
# line.
#
cdl_component CYGPKG_REDBOOT_NETWORKING_DNS {
    # This option is not active
    # ActiveIf constraint: CYGPKG_NS_DNS
    #     CYGPKG_NS_DNS (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: !CYGPKG_NS_DNS_BUILD
    #     CYGPKG_NS_DNS_BUILD (unknown) == 0
    #   --> 1
};

# >
# Default DNS IP
# This option sets the IP of the default DNS. The IP can be
# changed at runtime as well.
#
cdl_option CYGPKG_REDBOOT_NETWORKING_DNS_IP {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS is not active
    # ActiveIf constraint: !CYGSEM_REDBOOT_FLASH_CONFIG
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 0
    #   --> 1

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0.0.0.0
    # value_source default
    # Default value: 0.0.0.0
};

# Timeout in DNS lookup
# This option sets the timeout used when looking up an
# address via the DNS. Default is 10 seconds.
#
cdl_option CYGNUM_REDBOOT_NETWORKING_DNS_TIMEOUT {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 10
    # value_source default
    # Default value: 10
};

# Support the use of a domain name
# This option controls if Redboot supports domain
# names when performing DNS lookups
#
cdl_component CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Default DNS domain
# This option sets the default DNS domain name.
# This value will be overwritten by the value in
# flash or a domain returned by DHCP
#
cdl_option CYGPKG_REDBOOT_NETWORKING_DNS_DEFAULT_DOMAIN {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is disabled

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Get DNS domain from Flash
# This option enables getting the domain name 
# from the flash configuration. This can later be 
# overwritten by a value learnt from DHCP
#
cdl_option CYGPKG_REDBOOT_NETWORKING_DNS_FCONFIG_DOMAIN {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is disabled
    # ActiveIf constraint: CYGSEM_REDBOOT_FLASH_CONFIG
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Use DNS domain from DHCP
# This option enables the use of the domain name
# returned by DHCP.
#
cdl_option CYGPKG_REDBOOT_NETWORKING_DNS_DHCP_DOMAIN {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# BOOTP/DHCP DNS domain buffer size
# This options sets the size of the static
# buffer used by BOOTP/DHCP to store the DNS
# domain name. The domain name will not be
# set if the buffer is too small to hold it.
#
cdl_option CYGNUM_REDBOOT_NETWORK_DNS_DOMAIN_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
};

# <
# <
# Default network device driver
# This is the name of the default network device to use.
#
cdl_option CYGDAT_REDBOOT_DEFAULT_NETWORK_DEVICE {
    # This option is not active
    # ActiveIf constraint:  CYGHWR_NET_DRIVERS > 1 
    #     CYGHWR_NET_DRIVERS == 1
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"\""
    # value_source default
    # Default value: "\"\""
};

# Initialize only one net device
# This option tells RedBoot to stop initializing network
# devices when it finds the first device which is
# successfully initialized. The default behavior causes
# all network devices to be initialized.
#
cdl_option CYGSEM_REDBOOT_NETWORK_INIT_ONE_DEVICE {
    # This option is not active
    # ActiveIf constraint:  CYGHWR_NET_DRIVERS > 1 
    #     CYGHWR_NET_DRIVERS == 1
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Let RedBoot use any I/O channel for its console.
# If this option is enabled then RedBoot will attempt to use all
# defined serial I/O channels for its console device.  Once input
# arrives at one of these channels then the console will use only
# that port.
#
cdl_option CYGPKG_REDBOOT_ANY_CONSOLE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Let RedBoot adjust the baud off the serial console.
# If this option is enabled then RedBoot will support commands 
# to set and query the baud rate on the selected console.
#
cdl_option CYGSEM_REDBOOT_VARIABLE_BAUD_RATE {
    # ActiveIf constraint: CYGINT_HAL_VIRTUAL_VECTOR_COMM_BAUD_SUPPORT
    #     CYGINT_HAL_VIRTUAL_VECTOR_COMM_BAUD_SUPPORT == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Run a platform specific startup function.
# If this option is enabled then RedBoot will execute a platform
# specific startup function before entering into its command line
# processing.  This allows the platform to perform any special
# setups before RedBoot actually starts running.  Note: the entire
# RedBoot environment will already be initialized at this point.
#
cdl_option CYGSEM_REDBOOT_PLF_STARTUP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Run a platform specific ESA validation function.
# If this option is enabled then RedBoot will execute a platform
# specific function to validate an ethernet ESA.  This would be
# useful if the address must conform to standards set by the
# hardware manufacturer, etc.
#
cdl_option CYGSEM_REDBOOT_PLF_ESA_VALIDATE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Maximum command line length
# This option allows control over how long the CLI command line
# should be.  This space will be allocated statically
# rather than from RedBoot's stack.
#
cdl_option CYGPKG_REDBOOT_MAX_CMD_LINE {
    # Flavor: data
    user_value 0
    # value_source user
    # Default value: 256
};

# Command processing idle timeout (ms)
# This option controls the timeout period before the
# command processing is considered 'idle'.  Making this
# number smaller will cause idle processing to take place
# more often, etc.  The default value of 10ms is a reasonable
# tradeoff between responsiveness and overhead.
#
cdl_option CYGNUM_REDBOOT_CLI_IDLE_TIMEOUT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 10
    # value_source default
    # Default value: 10
};

# Validate RAM addresses during load
# This option controls whether or not RedBoot will make
# sure that memory being used by the "load" command is
# in fact in user RAM.  Leaving the option enabled makes
# for a safer environment, but this check may not be valid
# on all platforms, thus the ability to disable it.  
# ** Disable this only with great care **
#
cdl_option CYGSEM_REDBOOT_VALIDATE_USER_RAM_LOADS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGBLD_REDBOOT_LOAD_INTO_FLASH
    #     Requires: CYGSEM_REDBOOT_VALIDATE_USER_RAM_LOADS
};

# Base address of flash device redboot should use
# This option controls how redboot finds the flash
# device. Setting this option to an address will
# cause redboot to use that address as the base of the 
# flash device.
#
cdl_option CYGNUM_REDBOOT_FLASH_BASE {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Allow RedBoot to support FLASH programming
# If this option is enabled then RedBoot will provide commands
# to manage images in FLASH memory.  These images can be loaded
# into memory for execution or executed in place.
#
cdl_component CYGPKG_REDBOOT_FLASH {
    # This option is not active
    # ActiveIf constraint: CYGHWR_IO_FLASH_DEVICE
    #     CYGHWR_IO_FLASH_DEVICE (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGPRI_REDBOOT_ZLIB_FLASH
    #     ActiveIf: CYGPKG_REDBOOT_FLASH
    # option CYGBLD_REDBOOT_LOAD_INTO_FLASH
    #     ActiveIf: CYGPKG_REDBOOT_FLASH
};

# >
# Byte order used to store info in flash.
# This option controls the byte ordering used to store
# the FIS directory info and flash config info.
#
cdl_option CYGOPT_REDBOOT_FLASH_BYTEORDER {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FLASH is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value NATURAL
    # value_source default
    # Default value: NATURAL
    # Legal values: "NATURAL" "MSBFIRST" "LSBFIRST" 
};

# RedBoot Flash Image System support
# doc: ref/flash-image-system.html
# This option enables the Flash Image System commands
# and support within RedBoot.  If disabled, simple Flash
# access commands such as "fis write" will still exist.
# This option would be disabled for targets that need simple
# FLASH manipulation, but do not have the need or space for
# complete image management.
#
cdl_option CYGOPT_REDBOOT_FIS {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FLASH is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGPKG_REDBOOT_FIS_CONTENTS
    #     ActiveIf: CYGOPT_REDBOOT_FIS
    # option CYGSEM_REDBOOT_FLASH_COMBINED_FIS_AND_CONFIG
    #     ActiveIf:  CYGOPT_REDBOOT_FIS &&  (CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA == "FLASH") 
    # component CYGOPT_REDBOOT_FIS_ZLIB_COMMON_BUFFER
    #     ActiveIf:  CYGBLD_BUILD_REDBOOT_WITH_ZLIB &&  CYGOPT_REDBOOT_FIS 
};

# Max number of chunks of free space to manage
# If this option is defined then "fis free" will
# rely on the FIS directory to determine what space is
# free within the FLASH.  This option controls the
# maximum number of free segment which can be handled
# (typically this number is small).  If this option is
# not enabled, the the archaic behaviour of actually
# scanning the FLASH for erased sectors (unreliable)
# will be used to determine what's free and what's
# not.
#
cdl_option CYGDAT_REDBOOT_FIS_MAX_FREE_CHUNKS {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FLASH is not active

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 32
    # value_source default
    # Default value: 1 32
};

# Flash Image System default directory contents
#
cdl_component CYGPKG_REDBOOT_FIS_CONTENTS {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FLASH is not active
    # ActiveIf constraint: CYGOPT_REDBOOT_FIS
    #     CYGOPT_REDBOOT_FIS == 0
    #   --> 0

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# >
# Flash block containing the Directory
# Which block of flash should hold the directory
# information. Positive numbers are absolute block
# numbers.  Negative block numbers count backwards
# from the last block.  eg 2 means block 2, -2
# means the last but one block.
#
cdl_option CYGNUM_REDBOOT_FIS_DIRECTORY_BLOCK {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FIS_CONTENTS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -1
    # value_source default
    # Default value: -1

    # The following properties are affected by this value
    # option CYGNUM_REDBOOT_FIS_REDUNDANT_DIRECTORY_BLOCK
    #     Requires:  CYGNUM_REDBOOT_FIS_REDUNDANT_DIRECTORY_BLOCK !=
    #                                        CYGNUM_REDBOOT_FIS_DIRECTORY_BLOCK 
};

# Redundant Flash Image System Directory Support
# This option enables the use of a redundant FIS
# directory within RedBoot.  If enabled a flash block
# will be reserved for a second copy of the fis
# directory. Doing this allow for power failure safe
# updates of the directory by the application.
#
cdl_component CYGOPT_REDBOOT_REDUNDANT_FIS {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FIS_CONTENTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  0 == CYGSEM_REDBOOT_FLASH_COMBINED_FIS_AND_CONFIG 
    #     CYGSEM_REDBOOT_FLASH_COMBINED_FIS_AND_CONFIG == 0
    #   --> 1
};

# >
# Flash block containing the backup Directory
# Which block of flash should hold the redundant
# directory information. Positive numbers are
# absolute block numbers. Negative block numbers
# count backwards from the last block. eg 2 means
# block 2, -2 means the last but one block.
#
cdl_option CYGNUM_REDBOOT_FIS_REDUNDANT_DIRECTORY_BLOCK {
    # This option is not active
    # The parent CYGOPT_REDBOOT_REDUNDANT_FIS is not active
    # The parent CYGOPT_REDBOOT_REDUNDANT_FIS is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -3
    # value_source default
    # Default value: -3
    # Requires:  CYGNUM_REDBOOT_FIS_REDUNDANT_DIRECTORY_BLOCK !=
    #                                        CYGNUM_REDBOOT_FIS_DIRECTORY_BLOCK 
    #     CYGNUM_REDBOOT_FIS_REDUNDANT_DIRECTORY_BLOCK == 0
    #     CYGNUM_REDBOOT_FIS_DIRECTORY_BLOCK == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGNUM_REDBOOT_FIS_REDUNDANT_DIRECTORY_BLOCK
    #     Requires:  CYGNUM_REDBOOT_FIS_REDUNDANT_DIRECTORY_BLOCK !=
    #                                        CYGNUM_REDBOOT_FIS_DIRECTORY_BLOCK 
};

# <
# Pseudo-file to describe reserved area
# If an area of FLASH is reserved, it is informative to
# have a fis entry describing it.  This option controls
# creation of such an entry by default in the fis init
# command.
#
cdl_option CYGOPT_REDBOOT_FIS_RESERVED_BASE {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FIS_CONTENTS is not active
    # ActiveIf constraint:  0 != CYGNUM_REDBOOT_FLASH_RESERVED_BASE 
    #     CYGNUM_REDBOOT_FLASH_RESERVED_BASE == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# File to describe RedBoot boot image
# Normally a ROM-startup RedBoot image is first in the
# FLASH, and the system boots using that image.  This
# option controls creation of an entry describing it in
# the fis init command.  It might be disabled if a
# platform has an immutable boot image of its own, where
# we use a POST-startup RedBoot instead, which performs
# less board initialization.
#
cdl_option CYGOPT_REDBOOT_FIS_REDBOOT {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FIS_CONTENTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGOPT_REDBOOT_FIS_REDBOOT_POST
    #     DefaultValue: !CYGOPT_REDBOOT_FIS_REDBOOT
    # option CYGBLD_REDBOOT_MIN_IMAGE_SIZE
    #     DefaultValue:  CYGOPT_REDBOOT_FIS_REDBOOT ? 0x20000 : 0 
};

# File to describe RedBoot POST-compatible image
# This option controls creation of an entry describing a
# POST-startup RedBoot image in the fis init command.
# Not all platforms support POST-startup.  A platform
# might have both for testing purposes, where the
# eventual user would substitute their own POST code for
# the initial ROM-startup RedBoot, and then jump to the
# POST-compatible RedBoot immediately following.
#
cdl_component CYGOPT_REDBOOT_FIS_REDBOOT_POST {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FIS_CONTENTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: !CYGOPT_REDBOOT_FIS_REDBOOT
    #     CYGOPT_REDBOOT_FIS_REDBOOT == 0
    #   --> 1
};

# >
# Offset of POST image from FLASH start
# This option specifies the offset for a POST image from
# the start of FLASH.  If unset, then the fis entry
# describing the POST image will be placed where
# convenient.
#
cdl_option CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET {
    # This option is not active
    # The parent CYGOPT_REDBOOT_FIS_REDBOOT_POST is not active

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
    # Requires:  CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET >=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
    #     CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET == 0
    #     CYGBLD_REDBOOT_FLASH_BOOT_OFFSET == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET
    #     Requires:  CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET >=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
};

# <
# File to describe RedBoot backup image
# This option controls creation of an entry describing a
# backup RedBoot image in the fis init command.
# Conventionally a RAM-startup RedBoot image is kept
# under this name for use in updating the ROM-based
# RedBoot that boots the board.
#
cdl_option CYGOPT_REDBOOT_FIS_REDBOOT_BACKUP {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FIS_CONTENTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Include ARM SIB ID in FIS
# If set, this option will cause the last 5 words of
# the FIS to include the special ID needed for the
# flash to be recognized as a reserved area for RedBoot
# by an ARM BootRom monitor.
#
cdl_option CYGOPT_REDBOOT_FIS_DIRECTORY_ARM_SIB_ID {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FIS_CONTENTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Size of FIS directory entry
# The FIS directory is limited to one single flash
# sector. If your flash has tiny sectors, you may wish
# to reduce this value in order to get more slots in
# the FIS directory.
#
cdl_option CYGNUM_REDBOOT_FIS_DIRECTORY_ENTRY_SIZE {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FIS_CONTENTS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 256
    # value_source default
    # Default value: 256

    # The following properties are affected by this value
    # package CYGPKG_DEVS_FLASH_EA2468
    #     Requires: (CYGNUM_REDBOOT_FIS_DIRECTORY_ENTRY_SIZE *
    #                      CYGNUM_REDBOOT_FIS_DIRECTORY_ENTRY_COUNT) <= 4096
};

# Number of FIS directory entries
# The FIS directory normally occupies a single flash
# sector. Adjusting this value can allow for more than
# one flash sector to be used, which is useful if your
# sectors are very small.
#
cdl_option CYGNUM_REDBOOT_FIS_DIRECTORY_ENTRY_COUNT {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FIS_CONTENTS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 8
    # value_source default
    # Default value: 8

    # The following properties are affected by this value
    # package CYGPKG_DEVS_FLASH_EA2468
    #     Requires: (CYGNUM_REDBOOT_FIS_DIRECTORY_ENTRY_SIZE *
    #                      CYGNUM_REDBOOT_FIS_DIRECTORY_ENTRY_COUNT) <= 4096
};

# Maximum RedBoot image size
# This option controls the maximum length reserved
# for the RedBoot boot image in the FIS table.
# This should be a multiple of the flash's erase
# block size.
#
cdl_option CYGBLD_REDBOOT_MIN_IMAGE_SIZE {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FIS_CONTENTS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGOPT_REDBOOT_FIS_REDBOOT ? 0x20000 : 0 
    #     CYGOPT_REDBOOT_FIS_REDBOOT == 0
    #   --> 0
};

# Offset from start of FLASH to RedBoot boot image
# This option controls where the RedBoot boot image is 
# located relative to the start of FLASH.
#
cdl_option CYGBLD_REDBOOT_FLASH_BOOT_OFFSET {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FIS_CONTENTS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGNUM_REDBOOT_FLASH_RESERVED_BASE
    #     CYGNUM_REDBOOT_FLASH_RESERVED_BASE == 0
    #   --> 0
    # Requires:  CYGNUM_REDBOOT_FLASH_RESERVED_BASE <=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
    #     CYGNUM_REDBOOT_FLASH_RESERVED_BASE == 0
    #     CYGBLD_REDBOOT_FLASH_BOOT_OFFSET == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET
    #     Requires:  CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET >=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
    # option CYGBLD_REDBOOT_FLASH_BOOT_OFFSET
    #     Requires:  CYGNUM_REDBOOT_FLASH_RESERVED_BASE <=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
};

# Size of reserved area at start of FLASH
# This option reserves an area at the start of
# FLASH where RedBoot will never interfere; it is
# expected that this area contains
# (non-RedBoot-based) POST code or some other boot
# monitor that executes before RedBoot.
#
cdl_option CYGNUM_REDBOOT_FLASH_RESERVED_BASE {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FIS_CONTENTS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGOPT_REDBOOT_FIS_RESERVED_BASE
    #     ActiveIf:  0 != CYGNUM_REDBOOT_FLASH_RESERVED_BASE 
    # option CYGBLD_REDBOOT_FLASH_BOOT_OFFSET
    #     DefaultValue: CYGNUM_REDBOOT_FLASH_RESERVED_BASE
    # option CYGBLD_REDBOOT_FLASH_BOOT_OFFSET
    #     Requires:  CYGNUM_REDBOOT_FLASH_RESERVED_BASE <=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
};

# List of Flash devices that are reserved
# This option lists the base addresses of any Flash
# devices that should not be managed by the flash
# image system. In particular, this means that these
# devices will not be considered when looking for free
# space in which to create new files. It should consist
# of a comma-separated list of (virtual) addresses.
#
cdl_option CYGNUM_REDBOOT_FLASH_RESERVED_DEVICES {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FIS_CONTENTS is not active

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Keep all RedBoot FLASH data blocks locked.
# When this option is enabled, RedBoot will keep configuration
# data and the FIS directory blocks implicitly locked.  While
# this is somewhat safer, it does add overhead during updates.
#
cdl_option CYGSEM_REDBOOT_FLASH_LOCK_SPECIAL {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FLASH is not active
    # ActiveIf constraint:  CYGHWR_IO_FLASH_BLOCK_LOCKING != 0 
    #     CYGHWR_IO_FLASH_BLOCK_LOCKING (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Use CRC checksums on FIS images.
# When this option is enabled, RedBoot will use CRC checksums
# when reading and writing flash images.
#
cdl_option CYGSEM_REDBOOT_FIS_CRC_CHECK {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FLASH is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# ARM FLASH drivers support SIB flash block structure
# This interface is implemented by a flash driver
# to indicate that it supports the ARM SIB flash
# block structure
#
cdl_interface CYGINT_REDBOOT_ARM_FLASH_SIB_SUPPORTED {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_REDBOOT_FLASH is not active
    # ActiveIf constraint: CYGPKG_HAL_ARM
    #     CYGPKG_HAL_ARM == v3_0
    #   --> 1

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_REDBOOT_ARM_FLASH_SIB
    #     ActiveIf: CYGINT_REDBOOT_ARM_FLASH_SIB_SUPPORTED
};

# Use ARM SIB flash block structure
# This option is used to interpret ARM Flash System 
# information blocks.
#
cdl_option CYGHWR_REDBOOT_ARM_FLASH_SIB {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FLASH is not active
    # ActiveIf constraint: CYGINT_REDBOOT_ARM_FLASH_SIB_SUPPORTED
    #     CYGINT_REDBOOT_ARM_FLASH_SIB_SUPPORTED == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Keep RedBoot configuration data in FLASH
# When this option is enabled, RedBoot will keep configuration
# data in a separate block of FLASH memory.  This data will
# include such items as the node IP address or startup scripts.
#
cdl_component CYGSEM_REDBOOT_FLASH_CONFIG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGPKG_IO_FLASH != 0 
    #     CYGPKG_IO_FLASH (unknown) == 0
    #   --> 0

    # The following properties are affected by this value
    # component CYGDAT_REDBOOT_DEFAULT_IP_ADDR
    #     DefaultValue: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "0, 0, 0, 0" 
    # option CYGDAT_REDBOOT_DEFAULT_BOOTP_SERVER_IP_ADDR
    #     DefaultValue: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "0, 0, 0, 0" 
    # component CYGDAT_REDBOOT_DEFAULT_GATEWAY_IP_ADDR
    #     DefaultValue: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "0, 0, 0, 0" 
    # component CYGDAT_REDBOOT_DEFAULT_IP_ADDR_MASK
    #     DefaultValue: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "255, 255, 255, 0" 
    # option CYGPKG_REDBOOT_NETWORKING_DNS_IP
    #     ActiveIf: !CYGSEM_REDBOOT_FLASH_CONFIG
    # option CYGPKG_REDBOOT_NETWORKING_DNS_FCONFIG_DOMAIN
    #     ActiveIf: CYGSEM_REDBOOT_FLASH_CONFIG
    # option CYGFUN_REDBOOT_BOOT_SCRIPT
    #     ActiveIf:  CYGDAT_REDBOOT_DEFAULT_BOOT_SCRIPT ||  CYGSEM_REDBOOT_FLASH_CONFIG 
    # option CYGSEM_DEVS_ETH_ARM_LPC2XXX_REDBOOT_HOLDS_ESA_ETH0
    #     ActiveIf: CYGSEM_REDBOOT_FLASH_CONFIG
};

# >
# Length of configuration data in FLASH
# This option is used to control the amount of memory and FLASH
# to be used for configuration options (persistent storage).
#
cdl_option CYGNUM_REDBOOT_FLASH_CONFIG_SIZE {
    # This option is not active
    # The parent CYGSEM_REDBOOT_FLASH_CONFIG is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4096
    # value_source default
    # Default value: 4096

    # The following properties are affected by this value
    # package CYGPKG_DEVS_FLASH_EA2468
    #     Requires: CYGNUM_REDBOOT_FLASH_CONFIG_SIZE <= 4096
};

# Style of media used for persistent data storage
# Persistent data storage can either be held in 'norma' FLASH
# or some other device (represented by the 'EEPROM' choice).
# The different styles utilize different access methods.
#
cdl_option CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA {
    # This option is not active
    # The parent CYGSEM_REDBOOT_FLASH_CONFIG is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value FLASH
    # value_source default
    # Default value: FLASH
    # Legal values:  "FLASH" "EEPROM" 

    # The following properties are affected by this value
    # option CYGSEM_REDBOOT_FLASH_COMBINED_FIS_AND_CONFIG
    #     ActiveIf:  CYGOPT_REDBOOT_FIS &&  (CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA == "FLASH") 
    # option CYGSEM_REDBOOT_FLASH_CONFIG_READONLY_FALLBACK
    #     DefaultValue:  (CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA == "FLASH") 
};

# Merged config data and FIS directory
# If this option is set, then the FIS directory and FLASH 
# configuration database will be stored in the same physical
# FLASH block.
#
cdl_option CYGSEM_REDBOOT_FLASH_COMBINED_FIS_AND_CONFIG {
    # This option is not active
    # The parent CYGSEM_REDBOOT_FLASH_CONFIG is disabled
    # ActiveIf constraint:  CYGOPT_REDBOOT_FIS &&  (CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA == "FLASH") 
    #     CYGOPT_REDBOOT_FIS == 0
    #     CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGOPT_REDBOOT_REDUNDANT_FIS
    #     Requires:  0 == CYGSEM_REDBOOT_FLASH_COMBINED_FIS_AND_CONFIG 
    # package CYGPKG_DEVS_FLASH_EA2468
    #     Requires: !CYGSEM_REDBOOT_FLASH_COMBINED_FIS_AND_CONFIG
};

# Which block of flash to use
# Which block of flash should hold the configuration 
# information. Positive numbers are absolute block numbers. 
# Negative block numbers count backwards from the last block.
# eg 2 means block 2, -2 means the last but one block.
#
cdl_option CYGNUM_REDBOOT_FLASH_CONFIG_BLOCK {
    # This option is not active
    # The parent CYGSEM_REDBOOT_FLASH_CONFIG is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -2
    # value_source default
    # Default value: -2
};

# Support simple macros/aliases in FLASH
# This option is used to allow support for simple text-based
# macros (aliases).  These aliases are kept in the FLASH
# configuration data (persistent storage).
#
cdl_option CYGSEM_REDBOOT_FLASH_ALIASES {
    # This option is not active
    # The parent CYGSEM_REDBOOT_FLASH_CONFIG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Length of strings in FLASH configuration data
# This option is used to control the amount of memory
# and FLASH to be used for string configuration
# options (persistent storage).
#
cdl_option CYGNUM_REDBOOT_FLASH_STRING_SIZE {
    # This option is not active
    # The parent CYGSEM_REDBOOT_FLASH_CONFIG is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
};

# Length of configuration script(s) in FLASH
# This option is used to control the amount of memory and 
# FLASH to be used for configuration options (persistent 
# storage).
#
cdl_option CYGNUM_REDBOOT_FLASH_SCRIPT_SIZE {
    # This option is not active
    # The parent CYGSEM_REDBOOT_FLASH_CONFIG is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 512
    # value_source default
    # Default value: 512
};

# Fallback to read-only FLASH configuration
# This option will cause the configuration information to
# revert to the readonly information stored in the FLASH.
# The option only takes effect after 
# 1) the config_ok flag has been set to be true,
# indicating that at one time the copy in RAM was valid;
# and
# 2) the information in RAM has been verified to be invalid
#
cdl_option CYGSEM_REDBOOT_FLASH_CONFIG_READONLY_FALLBACK {
    # This option is not active
    # The parent CYGSEM_REDBOOT_FLASH_CONFIG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  (CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA == "FLASH") 
    #     CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA == 0
    #   --> 0
};

# <
# Allow RedBoot to support fileio
# If this option is enabled then RedBoot will provide commands
# to load files from fileio file systems such as JFFS2.
#
cdl_component CYGPKG_REDBOOT_FILEIO {
    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_FILEIO
    #     CYGPKG_IO_FILEIO (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGNUM_REDBOOT_GETC_BUFFER
    #     DefaultValue:  CYGPKG_REDBOOT_FILEIO ? 4096 : 256 
};

# >
# Include an ls command
# If this option is enabled a simple ls command will be
# included in redboot so the contents of a directory
# can be listed
#
cdl_option CYGBLD_REDBOOT_FILEIO_WITH_LS {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FILEIO is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Allow RedBoot to support disks
# If this option is enabled then RedBoot will provide commands
# to load disk files.
#
cdl_component CYGPKG_REDBOOT_DISK {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Include Redboot commands for disk access
#
cdl_option CYGSEM_REDBOOT_DISK {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGINT_REDBOOT_DISK_DRIVERS != 0 
    #     CYGINT_REDBOOT_DISK_DRIVERS == 0
    #   --> 0
};

# Hardware drivers for disk-type devices
#
cdl_interface CYGINT_REDBOOT_DISK_DRIVERS {
    # Implemented by CYGSEM_REDBOOT_DISK_IDE, inactive, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGSEM_REDBOOT_DISK
    #     DefaultValue:  CYGINT_REDBOOT_DISK_DRIVERS != 0 
};

# Maximum number of supported disks
# This option controls the number of disks supported by 
# RedBoot.
#
cdl_option CYGNUM_REDBOOT_MAX_DISKS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4
    # value_source default
    # Default value: 4
};

# Maximum number of partitions per disk
# This option controls the maximum number of supported 
# partitions per disk.
#
cdl_option CYGNUM_REDBOOT_MAX_PARTITIONS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 8
    # value_source default
    # Default value: 8
};

# Support IDE disks.
# When this option is enabled, RedBoot will support IDE disks.
#
cdl_component CYGSEM_REDBOOT_DISK_IDE {
    # This option is not active
    # ActiveIf constraint:  CYGINT_HAL_PLF_IF_IDE != 0 
    #     CYGINT_HAL_PLF_IF_IDE == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Work with VMware virtual disks
# This option controls the disk driver behavior at 
# ide-init
#
cdl_option CYGSEM_REDBOOT_DISK_IDE_VMWARE {
    # This option is not active
    # The parent CYGSEM_REDBOOT_DISK_IDE is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Support Linux second extended filesystems.
# When this option is enabled, RedBoot will support EXT2 
# filesystems.
#
cdl_component CYGSEM_REDBOOT_DISK_EXT2FS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Support ISO9660 filesystems.
# When this option is enabled, RedBoot will support ISO9660 
# filesystems.
#
cdl_component CYGSEM_REDBOOT_DISK_ISO9660 {
    # Calculated value: 0
    # Flavor: bool
    # Current value: 0
};

# <
# Boot scripting
# doc: ref/persistent-state-flash.html
# This contains options related to RedBoot's boot script
# functionality.
#
cdl_component CYGPKG_REDBOOT_BOOT_SCRIPT {
    # There is no associated value.
};

# >
# Boot scripting enabled
# This option controls whether RedBoot boot script
# functionality is enabled.
#
cdl_option CYGFUN_REDBOOT_BOOT_SCRIPT {
    # This option is not active
    # ActiveIf constraint:  CYGDAT_REDBOOT_DEFAULT_BOOT_SCRIPT ||  CYGSEM_REDBOOT_FLASH_CONFIG 
    #     CYGDAT_REDBOOT_DEFAULT_BOOT_SCRIPT == 0
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 0
    #   --> 0

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# Use default RedBoot boot script
# If enabled, this option will tell RedBoot to use the 
# value of this option as a default boot script.
#
cdl_option CYGDAT_REDBOOT_DEFAULT_BOOT_SCRIPT {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0

    # The following properties are affected by this value
    # option CYGFUN_REDBOOT_BOOT_SCRIPT
    #     ActiveIf:  CYGDAT_REDBOOT_DEFAULT_BOOT_SCRIPT ||  CYGSEM_REDBOOT_FLASH_CONFIG 
};

# Resolution (in ms) for script timeout value.
# This option controls the resolution of the script
# timeout.  The value is specified in milliseconds
# (ms), thus to have the script timeout be defined in
# terms of tenths of seconds, use 100.
#
cdl_option CYGNUM_REDBOOT_BOOT_SCRIPT_TIMEOUT_RESOLUTION {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1000
    # value_source default
    # Default value: 1000
};

# Script default timeout value
# This option is used to set the default timeout for startup
# scripts, when they are enabled.
#
cdl_option CYGNUM_REDBOOT_BOOT_SCRIPT_DEFAULT_TIMEOUT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 10
    # value_source default
    # Default value: 10
};

# <
# Support RTC for time & date functions
# When this option is enabled, RedBoot will support commands to
# query and set the real time clock (time and date)
#
cdl_option CYGSEM_REDBOOT_RTC {
    # This option is not active
    # ActiveIf constraint:  CYGPKG_IO_WALLCLOCK 
    #     CYGPKG_IO_WALLCLOCK (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Behave like a ROM monitor
# Enabling this option will allow RedBoot to provide ROM 
# monitor-style services to programs which it executes.
#
cdl_option CYGPRI_REDBOOT_ROM_MONITOR {
    # ActiveIf constraint:  CYG_HAL_STARTUP == "ROM" ||  CYG_HAL_STARTUP == "ROMRAM" 
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #   --> 1

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
    # Requires: CYGSEM_HAL_ROM_MONITOR
    #     CYGSEM_HAL_ROM_MONITOR == 1
    #   --> 1
};

# Allow RedBoot to handle GNUPro application 'syscalls'.
# If this option is enabled then RedBoot will install a
# syscall handler to support debugging of applications
# based on GNUPro newlib/bsp.
#
cdl_component CYGSEM_REDBOOT_BSP_SYSCALLS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGOPT_HAL_ARM_SYSCALL_GPROF_SUPPORT
    #     ActiveIf: CYGSEM_REDBOOT_BSP_SYSCALLS
    # option CYGPKG_HAL_GDB_FILEIO
    #     ActiveIf: CYGSEM_REDBOOT_BSP_SYSCALLS
};

# >
# Support additional syscalls for 'gprof' profiling
# Support additional syscalls to support a periodic callback
# function for histogram-style profiling, and an enquire/set
# of the tick rate.
# The application must use the GNUPro newlib facilities
# to set this up.
#
cdl_option CYGSEM_REDBOOT_BSP_SYSCALLS_GPROF {
    # This option is not active
    # The parent CYGSEM_REDBOOT_BSP_SYSCALLS is disabled
    # ActiveIf constraint:  0 < CYGINT_REDBOOT_BSP_SYSCALLS_GPROF_SUPPORT 
    #     CYGINT_REDBOOT_BSP_SYSCALLS_GPROF_SUPPORT == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Does the HAL support 'gprof' profiling?
#
cdl_interface CYGINT_REDBOOT_BSP_SYSCALLS_GPROF_SUPPORT {
    # Implemented by CYGOPT_HAL_ARM_SYSCALL_GPROF_SUPPORT, inactive, enabled
    # This option is not active
    # The parent CYGSEM_REDBOOT_BSP_SYSCALLS is disabled

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGSEM_REDBOOT_BSP_SYSCALLS_GPROF
    #     ActiveIf:  0 < CYGINT_REDBOOT_BSP_SYSCALLS_GPROF_SUPPORT 
};

# Do not raise SIGTRAP when program exits
# For some (single shot) newlib based programs,
# exiting and returning a termination status may be
# the normal expected behavior.
#
cdl_option CYGOPT_REDBOOT_BSP_SYSCALLS_EXIT_WITHOUT_TRAP {
    # This option is not active
    # The parent CYGSEM_REDBOOT_BSP_SYSCALLS is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Use a common buffer for Zlib and FIS
# Use a common memory buffer for both the zlib workspace
# and FIS directory operations. This can save a substantial
# amount of RAM, especially when flash sectors are large.
#
cdl_component CYGOPT_REDBOOT_FIS_ZLIB_COMMON_BUFFER {
    # This option is not active
    # ActiveIf constraint:  CYGBLD_BUILD_REDBOOT_WITH_ZLIB &&  CYGOPT_REDBOOT_FIS 
    #     CYGBLD_BUILD_REDBOOT_WITH_ZLIB == 0
    #     CYGOPT_REDBOOT_FIS == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Size of Zlib/FIS common buffer
# Size of common buffer to allocate. Must be at least the
# size of one flash sector.
#
cdl_option CYGNUM_REDBOOT_FIS_ZLIB_COMMON_BUFFER_SIZE {
    # This option is not active
    # The parent CYGOPT_REDBOOT_FIS_ZLIB_COMMON_BUFFER is not active
    # The parent CYGOPT_REDBOOT_FIS_ZLIB_COMMON_BUFFER is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x0000C000
    # value_source default
    # Default value: 0x0000C000
    # Legal values: 0x4000 to 0x80000000
};

# <
# Buffer size in getc when loading images
# When loading images a buffer is used between redboot and the
# underlying storage medium, eg a filesystem, or a socket etc.
# The size of this buffer can have a big impart on load speed.
#
cdl_option CYGNUM_REDBOOT_GETC_BUFFER {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 256
    # value_source default
    # Default value:  CYGPKG_REDBOOT_FILEIO ? 4096 : 256 
    #     CYGPKG_REDBOOT_FILEIO == 0
    #   --> 256
};

# <
# Redboot for ARM options
# This option lists the target's requirements for a valid Redboot
# configuration.
#
cdl_component CYGPKG_REDBOOT_ARM_OPTIONS {
    # ActiveIf constraint: CYGPKG_REDBOOT
    #     CYGPKG_REDBOOT == v3_0
    #   --> 1

    # There is no associated value.

    # The following properties are affected by this value
};

# >
# Provide the exec command in RedBoot
# This option contains requirements for booting linux
# from RedBoot. The component is enabled/disabled from
# RedBoots CDL.
#
cdl_component CYGPKG_REDBOOT_ARM_LINUX_EXEC {
    # This option is not active
    # ActiveIf constraint: CYGBLD_BUILD_REDBOOT_WITH_EXEC
    #     CYGBLD_BUILD_REDBOOT_WITH_EXEC == 0
    #   --> 0

    # There is no associated value.
};

# >
# Enable -x switch for exec command.
# This option allows bi-endian platforms to launch kernels
# built for an endianess different than the RedBoot endianess
#
cdl_option CYGHWR_REDBOOT_LINUX_EXEC_X_SWITCH {
    # This option is not active
    # The parent CYGPKG_REDBOOT_ARM_LINUX_EXEC is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Physical base address of linux kernel
# This is the physical address of the base of the 
# Linux kernel image.
#
cdl_option CYGHWR_REDBOOT_ARM_LINUX_EXEC_ADDRESS {
    # This option is not active
    # The parent CYGPKG_REDBOOT_ARM_LINUX_EXEC is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGHWR_REDBOOT_ARM_LINUX_EXEC_ADDRESS_DEFAULT
    #     CYGHWR_REDBOOT_ARM_LINUX_EXEC_ADDRESS_DEFAULT == 0
    #   --> 0
};

# Default physical base address of linux kernel
# This is the physical address of the base of the 
# Linux kernel image. This option gets set by the 
# platform CDL.
#
cdl_option CYGHWR_REDBOOT_ARM_LINUX_EXEC_ADDRESS_DEFAULT {
    # This option is not active
    # The parent CYGPKG_REDBOOT_ARM_LINUX_EXEC is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x00008000
    # value_source default
    # Default value: 0x00008000

    # The following properties are affected by this value
    # option CYGHWR_REDBOOT_ARM_LINUX_EXEC_ADDRESS
    #     DefaultValue: CYGHWR_REDBOOT_ARM_LINUX_EXEC_ADDRESS_DEFAULT
};

# Base address of linux kernel parameter tags
# This is the base address of the area of memory used to
# pass parameters to the Linux kernel. This should be chosen
# to avoid overlap with the kernel and any ramdisk image.
#
cdl_option CYGHWR_REDBOOT_ARM_LINUX_TAGS_ADDRESS {
    # This option is not active
    # The parent CYGPKG_REDBOOT_ARM_LINUX_EXEC is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x00000100
    # value_source default
    # Default value: 0x00000100
};

# <
# <
# Redboot HAL options
# This option lists the target's requirements for a valid
# Redboot configuration.
#
cdl_component CYGPKG_REDBOOT_HAL_OPTIONS {
    # ActiveIf constraint: CYGPKG_REDBOOT
    #     CYGPKG_REDBOOT == v3_0
    #   --> 1

    # There is no associated value.
};

# >
# Build Redboot ROM binary image
# This option enables the conversion of the Redboot ELF
# image to a binary image suitable for ROM programming.
#
cdl_option CYGBLD_BUILD_REDBOOT_BIN {
    # ActiveIf constraint: CYGBLD_BUILD_REDBOOT
    #     CYGBLD_BUILD_REDBOOT == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires:  !CYGBLD_BUILD_REDBOOT_WITH_EXEC 
    #     CYGBLD_BUILD_REDBOOT_WITH_EXEC == 0
    #   --> 1
};

# <
# <
# ISO C and POSIX infrastructure
# eCos supports implementations of ISO C libraries and POSIX
# implementations. This package provides infrastructure used by
# all such implementations.
#
cdl_package CYGPKG_ISOINFRA {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0

    # The following properties are affected by this value
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGPKG_ISOINFRA
    # package CYGPKG_LIBC_STRING
    #     Requires: CYGPKG_ISOINFRA
};

# >
# Startup and termination
#
cdl_component CYGPKG_ISO_STARTUP {
    # There is no associated value.
};

# >
# main() startup implementations
# Implementations of this interface arrange for a user-supplied
# main() to be called in an ISO compatible environment.
#
cdl_interface CYGINT_ISO_MAIN_STARTUP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_MAIN_STARTUP 
    #     CYGINT_ISO_MAIN_STARTUP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MAIN_STARTUP
    #     Requires:  1 >= CYGINT_ISO_MAIN_STARTUP 
};

# environ implementations
# Implementations of this interface provide the environ
# variable required by POSIX.
#
cdl_interface CYGINT_ISO_ENVIRON {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_ENVIRON 
    #     CYGINT_ISO_ENVIRON == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_ENVIRON
    #     Requires:  1 >= CYGINT_ISO_ENVIRON 
};

# <
# ctype.h functions
#
cdl_component CYGPKG_ISO_CTYPE_H {
    # There is no associated value.
};

# >
# Number of implementations of ctype functions
#
cdl_interface CYGINT_ISO_CTYPE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_CTYPE 
    #     CYGINT_ISO_CTYPE == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_CTYPE
    #     Requires:  1 >= CYGINT_ISO_CTYPE 
    # option CYGFUN_LIBC_STRING_BSD_FUNCS
    #     Requires: CYGINT_ISO_CTYPE
};

# Ctype implementation header
#
cdl_option CYGBLD_ISO_CTYPE_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Error handling
#
cdl_component CYGPKG_ISO_ERRNO {
    # There is no associated value.
};

# >
# Number of implementations of error codes
#
cdl_interface CYGINT_ISO_ERRNO_CODES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_ERRNO_CODES 
    #     CYGINT_ISO_ERRNO_CODES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_ERRNO_CODES
    #     Requires:  1 >= CYGINT_ISO_ERRNO_CODES 
};

# Error codes implementation header
#
cdl_option CYGBLD_ISO_ERRNO_CODES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of errno variable
#
cdl_interface CYGINT_ISO_ERRNO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_ERRNO 
    #     CYGINT_ISO_ERRNO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_ERRNO
    #     Requires:  1 >= CYGINT_ISO_ERRNO 
};

# errno variable implementation header
#
cdl_option CYGBLD_ISO_ERRNO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Locale-related functions
#
cdl_component CYGPKG_ISO_LOCALE {
    # There is no associated value.
};

# >
# Number of implementations of locale functions
#
cdl_interface CYGINT_ISO_LOCALE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_LOCALE 
    #     CYGINT_ISO_LOCALE == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_LOCALE
    #     Requires:  1 >= CYGINT_ISO_LOCALE 
};

# Locale implementation header
#
cdl_option CYGBLD_ISO_LOCALE_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Standard I/O-related functionality
#
cdl_component CYGPKG_ISO_STDIO {
    # There is no associated value.
};

# >
# Number of implementations of stdio file types
#
cdl_interface CYGINT_ISO_STDIO_FILETYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILETYPES 
    #     CYGINT_ISO_STDIO_FILETYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILETYPES
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILETYPES 
};

# Stdio file types implementation header
#
cdl_option CYGBLD_ISO_STDIO_FILETYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Stdio standard streams implementations
#
cdl_interface CYGINT_ISO_STDIO_STREAMS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_STREAMS 
    #     CYGINT_ISO_STDIO_STREAMS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_STREAMS
    #     Requires:  1 >= CYGINT_ISO_STDIO_STREAMS 
};

# Stdio standard streams implementation header
# This header file must define stdin, stdout
# and stderr.
#
cdl_option CYGBLD_ISO_STDIO_STREAMS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio file operations
#
cdl_interface CYGINT_ISO_STDIO_FILEOPS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILEOPS 
    #     CYGINT_ISO_STDIO_FILEOPS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILEOPS
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILEOPS 
};

# Stdio file operations implementation header
# This header controls the file system operations on a file
# such as remove(), rename(), tmpfile(), tmpnam() and associated
# constants.
#
cdl_option CYGBLD_ISO_STDIO_FILEOPS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio file access  functionals
#
cdl_interface CYGINT_ISO_STDIO_FILEACCESS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILEACCESS 
    #     CYGINT_ISO_STDIO_FILEACCESS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILEACCESS
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILEACCESS 
};

# Stdio file access implementation header
# This header controls the file access operations
# such as fclose(), fflush(), fopen(), freopen(), setbuf(),
# setvbuf(), and associated constants.
#
cdl_option CYGBLD_ISO_STDIO_FILEACCESS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio formatted I/O
#
cdl_interface CYGINT_ISO_STDIO_FORMATTED_IO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FORMATTED_IO 
    #     CYGINT_ISO_STDIO_FORMATTED_IO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FORMATTED_IO
    #     Requires:  1 >= CYGINT_ISO_STDIO_FORMATTED_IO 
};

# Stdio formatted I/O implementation header
#
cdl_option CYGBLD_ISO_STDIO_FORMATTED_IO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio character I/O
#
cdl_interface CYGINT_ISO_STDIO_CHAR_IO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_CHAR_IO 
    #     CYGINT_ISO_STDIO_CHAR_IO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_CHAR_IO
    #     Requires:  1 >= CYGINT_ISO_STDIO_CHAR_IO 
};

# Stdio character I/O implementation header
#
cdl_option CYGBLD_ISO_STDIO_CHAR_IO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio direct I/O
#
cdl_interface CYGINT_ISO_STDIO_DIRECT_IO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_DIRECT_IO 
    #     CYGINT_ISO_STDIO_DIRECT_IO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_DIRECT_IO
    #     Requires:  1 >= CYGINT_ISO_STDIO_DIRECT_IO 
};

# Stdio direct I/O implementation header
#
cdl_option CYGBLD_ISO_STDIO_DIRECT_IO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio file positioning
#
cdl_interface CYGINT_ISO_STDIO_FILEPOS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILEPOS 
    #     CYGINT_ISO_STDIO_FILEPOS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILEPOS
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILEPOS 
};

# Stdio file positioning implementation header
#
cdl_option CYGBLD_ISO_STDIO_FILEPOS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio error handling
#
cdl_interface CYGINT_ISO_STDIO_ERROR {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_ERROR 
    #     CYGINT_ISO_STDIO_ERROR == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_ERROR
    #     Requires:  1 >= CYGINT_ISO_STDIO_ERROR 
};

# Stdio error handling implementation header
#
cdl_option CYGBLD_ISO_STDIO_ERROR_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX fd-related function implementations
#
cdl_interface CYGINT_ISO_STDIO_POSIX_FDFUNCS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >=  CYGINT_ISO_STDIO_POSIX_FDFUNCS 
    #     CYGINT_ISO_STDIO_POSIX_FDFUNCS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_POSIX_FDFUNCS
    #     Requires:  1 >=  CYGINT_ISO_STDIO_POSIX_FDFUNCS 
};

# POSIX fd-related function implementation header
#
cdl_option CYGBLD_ISO_STDIO_POSIX_FDFUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Standard general utility functions
#
cdl_component CYGPKG_ISO_STDLIB {
    # There is no associated value.
};

# >
# String conversion function implementations
#
cdl_interface CYGINT_ISO_STDLIB_STRCONV {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV 
    #     CYGINT_ISO_STDLIB_STRCONV == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_STRCONV
    #     Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV 
};

# String conversion function implementation header
#
cdl_option CYGBLD_ISO_STDLIB_STRCONV_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# String to FP conversion function implementations
#
cdl_interface CYGINT_ISO_STDLIB_STRCONV_FLOAT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV_FLOAT 
    #     CYGINT_ISO_STDLIB_STRCONV_FLOAT == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_STRCONV_FLOAT
    #     Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV_FLOAT 
};

# String to FP conversion function implementation header
#
cdl_option CYGBLD_ISO_STDLIB_STRCONV_FLOAT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Random number generator implementations
#
cdl_interface CYGINT_ISO_RAND {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_RAND 
    #     CYGINT_ISO_RAND == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_RAND
    #     Requires:  1 >= CYGINT_ISO_RAND 
};

# Random number generator implementation header
#
cdl_option CYGBLD_ISO_RAND_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Malloc implementations
#
cdl_interface CYGINT_ISO_MALLOC {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_MALLOC 
    #     CYGINT_ISO_MALLOC == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MALLOC
    #     Requires:  1 >= CYGINT_ISO_MALLOC 
    # option CYGFUN_LIBC_STRING_STRDUP
    #     ActiveIf: CYGINT_ISO_MALLOC
};

# Malloc implementation header
#
cdl_option CYGBLD_ISO_MALLOC_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Mallinfo() implementations
#
cdl_interface CYGINT_ISO_MALLINFO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_MALLINFO 
    #     CYGINT_ISO_MALLINFO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MALLINFO
    #     Requires:  1 >= CYGINT_ISO_MALLINFO 
};

# Mallinfo() implementation header
#
cdl_option CYGBLD_ISO_MALLINFO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Program exit functionality implementations
#
cdl_interface CYGINT_ISO_EXIT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_EXIT 
    #     CYGINT_ISO_EXIT == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_EXIT
    #     Requires:  1 >= CYGINT_ISO_EXIT 
    # option CYGFUN_INFRA_DUMMY_ABORT
    #     Requires: !CYGINT_ISO_EXIT
    # option CYGFUN_INFRA_DUMMY_ABORT
    #     DefaultValue:  CYGINT_ISO_EXIT == 0 
};

# Program exit functionality implementation header
#
cdl_option CYGBLD_ISO_EXIT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Program environment implementations
#
cdl_interface CYGINT_ISO_STDLIB_ENVIRON {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_ENVIRON 
    #     CYGINT_ISO_STDLIB_ENVIRON == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_ENVIRON
    #     Requires:  1 >= CYGINT_ISO_STDLIB_ENVIRON 
};

# Program environment implementation header
#
cdl_option CYGBLD_ISO_STDLIB_ENVIRON_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# system() implementations
#
cdl_interface CYGINT_ISO_STDLIB_SYSTEM {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_SYSTEM 
    #     CYGINT_ISO_STDLIB_SYSTEM == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_SYSTEM
    #     Requires:  1 >= CYGINT_ISO_STDLIB_SYSTEM 
};

# system() implementation header
#
cdl_option CYGBLD_ISO_STDLIB_SYSTEM_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# bsearch() implementations
#
cdl_interface CYGINT_ISO_BSEARCH {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_BSEARCH 
    #     CYGINT_ISO_BSEARCH == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_BSEARCH
    #     Requires:  1 >= CYGINT_ISO_BSEARCH 
};

# bsearch() implementation header
#
cdl_option CYGBLD_ISO_BSEARCH_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# qsort() implementations
#
cdl_interface CYGINT_ISO_QSORT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_QSORT 
    #     CYGINT_ISO_STDLIB_QSORT (unknown) == 0
    #   --> 1
};

# qsort() implementation header
#
cdl_option CYGBLD_ISO_QSORT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# abs()/labs() implementations
#
cdl_interface CYGINT_ISO_ABS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_ABS 
    #     CYGINT_ISO_STDLIB_ABS (unknown) == 0
    #   --> 1
};

# abs()/labs() implementation header
#
cdl_option CYGBLD_ISO_STDLIB_ABS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# div()/ldiv() implementations
#
cdl_interface CYGINT_ISO_DIV {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_DIV 
    #     CYGINT_ISO_STDLIB_DIV (unknown) == 0
    #   --> 1
};

# div()/ldiv() implementation header
#
cdl_option CYGBLD_ISO_STDLIB_DIV_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Header defining the implementation's MB_CUR_MAX
#
cdl_option CYGBLD_ISO_STDLIB_MB_CUR_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Multibyte character implementations
#
cdl_interface CYGINT_ISO_STDLIB_MULTIBYTE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_MULTIBYTE 
    #     CYGINT_ISO_STDLIB_MULTIBYTE == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_MULTIBYTE
    #     Requires:  1 >= CYGINT_ISO_STDLIB_MULTIBYTE 
};

# Multibyte character implementation header
#
cdl_option CYGBLD_ISO_STDLIB_MULTIBYTE_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# String functions
#
cdl_component CYGPKG_ISO_STRING {
    # There is no associated value.
};

# >
# Number of implementations of strerror() function
#
cdl_interface CYGINT_ISO_STRERROR {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STRERROR 
    #     CYGINT_ISO_STRERROR == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRERROR
    #     Requires:  1 >= CYGINT_ISO_STRERROR 
};

# strerror() implementation header
#
cdl_option CYGBLD_ISO_STRERROR_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# memcpy() implementation header
#
cdl_option CYGBLD_ISO_MEMCPY_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# memset() implementation header
#
cdl_option CYGBLD_ISO_MEMSET_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of strtok_r() function
#
cdl_interface CYGINT_ISO_STRTOK_R {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRTOK_R 
    #     CYGINT_ISO_STRTOK_R == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRTOK_R
    #     Requires:  1 >= CYGINT_ISO_STRTOK_R 
};

# strtok_r() implementation header
#
cdl_option CYGBLD_ISO_STRTOK_R_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRTOK_R_HEADER ==  "<cyg/libc/string/string.h>" 
};

# Number of implementations of locale-specific string  functions
# This covers locale-dependent string functions such as strcoll()
# and strxfrm().
#
cdl_interface CYGINT_ISO_STRING_LOCALE_FUNCS {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRING_LOCALE_FUNCS 
    #     CYGINT_ISO_STRING_LOCALE_FUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_LOCALE_FUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_LOCALE_FUNCS 
};

# Locale-specific string functions' implementation  header
# This covers locale-dependent string functions such as strcoll()
# and strxfrm().
#
cdl_option CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
};

# Number of implementations of BSD string functions
#
cdl_interface CYGINT_ISO_STRING_BSD_FUNCS {
    # Implemented by CYGFUN_LIBC_STRING_BSD_FUNCS, active, disabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STRING_BSD_FUNCS 
    #     CYGINT_ISO_STRING_BSD_FUNCS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_BSD_FUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_BSD_FUNCS 
};

# BSD string functions' implementation header
#
cdl_option CYGBLD_ISO_STRING_BSD_FUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/bsdstring.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # option CYGFUN_LIBC_STRING_BSD_FUNCS
    #     Requires:  CYGBLD_ISO_STRING_BSD_FUNCS_HEADER ==  "<cyg/libc/string/bsdstring.h>" 
};

# Number of implementations of other mem*() functions
#
cdl_interface CYGINT_ISO_STRING_MEMFUNCS {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRING_MEMFUNCS 
    #     CYGINT_ISO_STRING_MEMFUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_MEMFUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_MEMFUNCS 
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGINT_ISO_STRING_MEMFUNCS
    # component CYGPKG_IO_ETH_DRIVERS_STAND_ALONE
    #     Requires: CYGINT_ISO_STRING_MEMFUNCS
};

# Other mem*() functions' implementation header
#
cdl_option CYGBLD_ISO_STRING_MEMFUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRING_MEMFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
};

# Number of implementations of other ISO C str*()  functions
# This covers the other str*() functions defined by ISO C.
#
cdl_interface CYGINT_ISO_STRING_STRFUNCS {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRING_STRFUNCS 
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_STRFUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_STRFUNCS 
    # option CYGFUN_INFRA_DUMMY_STRLEN
    #     Requires: !CYGINT_ISO_STRING_STRFUNCS
    # option CYGFUN_INFRA_DUMMY_STRLEN
    #     DefaultValue:  CYGINT_ISO_STRING_STRFUNCS == 0 
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGINT_ISO_STRING_STRFUNCS
    # component CYGPKG_IO_ETH_DRIVERS_NET
    #     Requires: CYGINT_ISO_STRING_STRFUNCS
};

# Other ISO C str*() functions' implementation  header
# This covers the other str*() functions defined by ISO C.
#
cdl_option CYGBLD_ISO_STRING_STRFUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRING_STRFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
};

# <
# Clock and time functionality
#
cdl_component CYGPKG_ISO_TIME {
    # There is no associated value.
};

# >
# time_t implementation header
#
cdl_option CYGBLD_ISO_TIME_T_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# clock_t implementation header
#
cdl_option CYGBLD_ISO_CLOCK_T_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# struct timeval implementation header
#
cdl_option CYGBLD_ISO_STRUCTTIMEVAL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# fnmatch implementation header
#
cdl_option CYGBLD_ISO_FNMATCH_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX timer types
#
cdl_interface CYGINT_ISO_POSIX_TIMER_TYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_TIMER_TYPES 
    #     CYGINT_ISO_POSIX_TIMER_TYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_TIMER_TYPES
    #     Requires:  1 >= CYGINT_ISO_POSIX_TIMER_TYPES 
};

# POSIX timer types implementation header
#
cdl_option CYGBLD_ISO_POSIX_TIMER_TYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX clock types
#
cdl_interface CYGINT_ISO_POSIX_CLOCK_TYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_CLOCK_TYPES 
    #     CYGINT_ISO_POSIX_CLOCK_TYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_CLOCK_TYPES
    #     Requires:  1 >= CYGINT_ISO_POSIX_CLOCK_TYPES 
};

# POSIX clock types implementation header
#
cdl_option CYGBLD_ISO_POSIX_CLOCK_TYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of ISO C types
#
cdl_interface CYGINT_ISO_C_TIME_TYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_C_TIME_TYPES 
    #     CYGINT_ISO_C_TIME_TYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_C_TIME_TYPES
    #     Requires:  1 >= CYGINT_ISO_C_TIME_TYPES 
};

# ISO C time types implementation header
#
cdl_option CYGBLD_ISO_C_TIME_TYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX timers
#
cdl_interface CYGINT_ISO_POSIX_TIMERS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_TIMERS 
    #     CYGINT_ISO_POSIX_TIMERS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_TIMERS
    #     Requires:  1 >= CYGINT_ISO_POSIX_TIMERS 
};

# POSIX timer implementation header
#
cdl_option CYGBLD_ISO_POSIX_TIMERS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX clocks
#
cdl_interface CYGINT_ISO_POSIX_CLOCKS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_CLOCKS 
    #     CYGINT_ISO_POSIX_CLOCKS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_CLOCKS
    #     Requires:  1 >= CYGINT_ISO_POSIX_CLOCKS 
};

# POSIX clocks implementation header
#
cdl_option CYGBLD_ISO_POSIX_CLOCKS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of ISO C clock functions
#
cdl_interface CYGINT_ISO_C_CLOCK_FUNCS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_C_CLOCK_FUNCS 
    #     CYGINT_ISO_C_CLOCK_FUNCS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_C_CLOCK_FUNCS
    #     Requires:  1 >= CYGINT_ISO_C_CLOCK_FUNCS 
};

# ISO C clock functions' implementation header
#
cdl_option CYGBLD_ISO_C_CLOCK_FUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of tzset() function
#
cdl_interface CYGINT_ISO_TZSET {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_TZSET 
    #     CYGINT_ISO_TZSET == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_TZSET
    #     Requires:  1 >= CYGINT_ISO_TZSET 
};

# tzset() implementation header
#
cdl_option CYGBLD_ISO_TZSET_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Signal functionality
#
cdl_component CYGPKG_ISO_SIGNAL {
    # There is no associated value.
};

# >
# Number of implementations of signal numbers
#
cdl_interface CYGINT_ISO_SIGNAL_NUMBERS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SIGNAL_NUMBERS 
    #     CYGINT_ISO_SIGNAL_NUMBERS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SIGNAL_NUMBERS
    #     Requires:  1 >= CYGINT_ISO_SIGNAL_NUMBERS 
};

# Signal numbering implementation header
# This header provides the mapping of signal
# names (e.g. SIGBUS) to numbers.
#
cdl_option CYGBLD_ISO_SIGNAL_NUMBERS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of signal implementations
#
cdl_interface CYGINT_ISO_SIGNAL_IMPL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SIGNAL_IMPL 
    #     CYGINT_ISO_SIGNAL_IMPL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SIGNAL_IMPL
    #     Requires:  1 >= CYGINT_ISO_SIGNAL_IMPL 
};

# Signals implementation header
#
cdl_option CYGBLD_ISO_SIGNAL_IMPL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX real time signals feature test macro
# This defines the POSIX feature test macro
# that indicates that the POSIX real time signals
# are present.
#
cdl_interface CYGINT_POSIX_REALTIME_SIGNALS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_POSIX_REALTIME_SIGNALS 
    #     CYGINT_POSIX_REALTIME_SIGNALS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_POSIX_REALTIME_SIGNALS
    #     Requires:  1 >= CYGINT_POSIX_REALTIME_SIGNALS 
};

# <
# Non-local jumps functionality
#
cdl_component CYGPKG_ISO_SETJMP {
    # There is no associated value.
};

# >
# setjmp() / longjmp() implementations
#
cdl_interface CYGINT_ISO_SETJMP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SETJMP 
    #     CYGINT_ISO_SETJMP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SETJMP
    #     Requires:  1 >= CYGINT_ISO_SETJMP 
};

# setjmp() / longjmp() implementation header
#
cdl_option CYGBLD_ISO_SETJMP_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# sigsetjmp() / siglongjmp() implementations
#
cdl_interface CYGINT_ISO_SIGSETJMP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SIGSETJMP 
    #     CYGINT_ISO_SIGSETJMP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SIGSETJMP
    #     Requires:  1 >= CYGINT_ISO_SIGSETJMP 
};

# sigsetjmp() / siglongjmp() implementation header
#
cdl_option CYGBLD_ISO_SIGSETJMP_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Assertions implementation header
#
cdl_option CYGBLD_ISO_ASSERT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX file control
# This covers the POSIX file control definitions,
# normally found in <fcntl.h>
#
cdl_component CYGPKG_ISO_POSIX_FCNTL {
    # There is no associated value.
};

# >
# POSIX open flags implementation header
#
cdl_option CYGBLD_ISO_OFLAG_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX fcntl() implementations
#
cdl_interface CYGINT_ISO_FCNTL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_FCNTL 
    #     CYGINT_ISO_FCNTL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_FCNTL
    #     Requires:  1 >= CYGINT_ISO_FCNTL 
};

# POSIX fcntl() implementation header
#
cdl_option CYGBLD_ISO_FCNTL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX file open implementations
#
cdl_interface CYGINT_ISO_OPEN {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_OPEN 
    #     CYGINT_ISO_OPEN == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_OPEN
    #     Requires:  1 >= CYGINT_ISO_OPEN 
};

# POSIX file open implementation header
#
cdl_option CYGBLD_ISO_OPEN_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# <sys/stat.h> definitions implementation header
#
cdl_option CYGBLD_ISO_STAT_DEFS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX directory reading implementation
#
cdl_interface CYGINT_ISO_DIRENT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_DIRENT 
    #     CYGINT_ISO_DIRENT == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_DIRENT
    #     Requires:  1 >= CYGINT_ISO_DIRENT 
};

# <dirent.h> definitions implementation header
#
cdl_option CYGBLD_ISO_DIRENT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX <sys/types.h> contents
# This covers the types required by POSIX to be in
# <sys/types.h>
#
cdl_component CYGPKG_ISO_POSIX_TYPES {
    # There is no associated value.
};

# >
# POSIX thread types implementations
#
cdl_interface CYGINT_ISO_PTHREADTYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
    #     CYGINT_ISO_PTHREADTYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_PTHREADTYPES
    #     Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
    # interface CYGINT_ISO_PMUTEXTYPES
    #     Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
};

# POSIX thread types implementation header
#
cdl_option CYGBLD_ISO_PTHREADTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX mutex types implementations
#
cdl_interface CYGINT_ISO_PMUTEXTYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
    #     CYGINT_ISO_PTHREADTYPES == 0
    #   --> 1
};

# POSIX mutex types implementation header
#
cdl_option CYGBLD_ISO_PMUTEXTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# ssize_t implementation header
#
cdl_option CYGBLD_ISO_SSIZE_T_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Filesystem types implementation header
#
cdl_option CYGBLD_ISO_FSTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# gid_t, pid_t, uid_t implementation header
#
cdl_option CYGBLD_ISO_SCHEDTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Non-POSIX <sys/types.h> contents
# This covers the extra types required by non-POSIX
# packages to be in <sys/types.h>. These would normally
# only be visible if _POSIX_SOURCE is not defined.
#
cdl_component CYGPKG_ISO_EXTRA_TYPES {
    # There is no associated value.
};

# >
# BSD compatible types
#
cdl_interface CYGINT_ISO_BSDTYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_BSDTYPES 
    #     CYGINT_ISO_BSDTYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_BSDTYPES
    #     Requires:  1 >= CYGINT_ISO_BSDTYPES 
};

# BSD types header
#
cdl_option CYGBLD_ISO_BSDTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Utsname structure
#
cdl_component CYGPKG_ISO_UTSNAME {
    # There is no associated value.
};

# >
# Utsname header
#
cdl_option CYGBLD_ISO_UTSNAME_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX scheduler
#
cdl_component CYGPKG_ISO_SCHED {
    # There is no associated value.
};

# >
# POSIX scheduler implementations
#
cdl_interface CYGINT_ISO_SCHED_IMPL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SCHED_IMPL 
    #     CYGINT_ISO_SCHED_IMPL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SCHED_IMPL
    #     Requires:  1 >= CYGINT_ISO_SCHED_IMPL 
};

# POSIX scheduler implementation header
#
cdl_option CYGBLD_ISO_SCHED_IMPL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX semaphores
#
cdl_component CYGPKG_ISO_SEMAPHORES {
    # There is no associated value.
};

# >
# POSIX semaphore implementations
#
cdl_interface CYGINT_ISO_SEMAPHORES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SEMAPHORES 
    #     CYGINT_ISO_SEMAPHORES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SEMAPHORES
    #     Requires:  1 >= CYGINT_ISO_SEMAPHORES 
};

# POSIX semaphore implementation header
#
cdl_option CYGBLD_ISO_SEMAPHORES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX message queues
#
cdl_component CYGPKG_ISO_MQUEUE {
    # There is no associated value.
};

# >
# Implementations
#
cdl_interface CYGINT_ISO_MQUEUE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_MQUEUE 
    #     CYGINT_ISO_MQUEUE == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MQUEUE
    #     Requires:  1 >= CYGINT_ISO_MQUEUE 
    # option CYGNUM_ISO_MQUEUE_OPEN_MAX
    #     ActiveIf: CYGINT_ISO_MQUEUE
    # option CYGNUM_ISO_MQUEUE_PRIO_MAX
    #     ActiveIf: CYGINT_ISO_MQUEUE
};

# Implementation header
#
cdl_option CYGBLD_ISO_MQUEUE_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Maximum number of open message queues
#
cdl_option CYGNUM_ISO_MQUEUE_OPEN_MAX {
    # This option is not active
    # ActiveIf constraint: CYGINT_ISO_MQUEUE
    #     CYGINT_ISO_MQUEUE == 0
    #   --> 0

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value:  CYGNUM_POSIX_MQUEUE_OPEN_MAX > 0 ? CYGNUM_POSIX_MQUEUE_OPEN_MAX : 0 
    #     CYGNUM_POSIX_MQUEUE_OPEN_MAX (unknown) == 0
    #     CYGNUM_POSIX_MQUEUE_OPEN_MAX (unknown) == 0
    #   --> 0 0
};

# Maximum number of message priorities
#
cdl_option CYGNUM_ISO_MQUEUE_PRIO_MAX {
    # This option is not active
    # ActiveIf constraint: CYGINT_ISO_MQUEUE
    #     CYGINT_ISO_MQUEUE == 0
    #   --> 0

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 65535
    # value_source default
    # Default value: 1 65535
};

# <
# POSIX threads
#
cdl_component CYGPKG_ISO_PTHREAD {
    # There is no associated value.
};

# >
# POSIX pthread implementations
#
cdl_interface CYGINT_ISO_PTHREAD_IMPL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_PTHREAD_IMPL 
    #     CYGINT_ISO_PTHREAD_IMPL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_PTHREAD_IMPL
    #     Requires:  1 >= CYGINT_ISO_PTHREAD_IMPL 
};

# POSIX pthread implementation header
#
cdl_option CYGBLD_ISO_PTHREAD_IMPL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX mutex/cond var implementations
#
cdl_interface CYGINT_ISO_PTHREAD_MUTEX {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_PTHREAD_MUTEX 
    #     CYGINT_ISO_PTHREAD_MUTEX == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_PTHREAD_MUTEX
    #     Requires:  1 >= CYGINT_ISO_PTHREAD_MUTEX 
};

# POSIX mutex/cond var implementation header
#
cdl_option CYGBLD_ISO_PTHREAD_MUTEX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Limits
#
cdl_component CYGPKG_ISO_LIMITS {
    # There is no associated value.
};

# >
# POSIX pthread limits implementations
#
cdl_interface CYGINT_ISO_POSIX_LIMITS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_POSIX_LIMITS 
    #     CYGINT_ISO_POSIX_LIMITS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_LIMITS
    #     Requires:  1 >= CYGINT_ISO_POSIX_LIMITS 
};

# POSIX pthread limits implementation header
#
cdl_option CYGBLD_ISO_POSIX_LIMITS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# OPEN_MAX implementation header
#
cdl_option CYGBLD_ISO_OPEN_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# LINK_MAX implementation header
#
cdl_option CYGBLD_ISO_LINK_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# NAME_MAX implementation header
#
cdl_option CYGBLD_ISO_NAME_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# PATH_MAX implementation header
#
cdl_option CYGBLD_ISO_PATH_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX termios
#
cdl_component CYGPKG_ISO_TERMIOS {
    # There is no associated value.
};

# >
# POSIX termios implementations
#
cdl_interface CYGINT_ISO_TERMIOS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_TERMIOS 
    #     CYGINT_ISO_TERMIOS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_TERMIOS
    #     Requires:  1 >= CYGINT_ISO_TERMIOS 
};

# POSIX termios implementation header
#
cdl_option CYGBLD_ISO_TERMIOS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Dynamic load API
#
cdl_component CYGPKG_ISO_DLFCN {
    # There is no associated value.
};

# >
# Dynamic load implementations
#
cdl_interface CYGINT_ISO_DLFCN {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_DLFCN 
    #     CYGINT_ISO_DLFCN == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_DLFCN
    #     Requires:  1 >= CYGINT_ISO_DLFCN 
};

# Dynamic load implementation header
#
cdl_option CYGBLD_ISO_DLFCN_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# UNIX standard functions
#
cdl_component CYGPKG_ISO_UNISTD {
    # There is no associated value.
};

# >
# POSIX timer operations implementations
#
cdl_interface CYGINT_ISO_POSIX_TIMER_OPS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_TIMER_OPS 
    #     CYGINT_ISO_POSIX_TIMER_OPS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_TIMER_OPS
    #     Requires:  1 >= CYGINT_ISO_POSIX_TIMER_OPS 
};

# POSIX timer operations implementation header
#
cdl_option CYGBLD_ISO_POSIX_TIMER_OPS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX sleep() implementations
#
cdl_interface CYGINT_ISO_POSIX_SLEEP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_SLEEP 
    #     CYGINT_ISO_POSIX_SLEEP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_SLEEP
    #     Requires:  1 >= CYGINT_ISO_POSIX_SLEEP 
};

# POSIX sleep() implementation header
#
cdl_option CYGBLD_ISO_POSIX_SLEEP_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# select()/poll() functions
#
cdl_component CYGPKG_ISO_SELECT {
    # There is no associated value.
};

# >
# select() implementations
#
cdl_interface CYGINT_ISO_SELECT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_SELECT 
    #     CYGINT_ISO_SELECT == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SELECT
    #     Requires:  1 >= CYGINT_ISO_SELECT 
};

# select() implementation header
#
cdl_option CYGBLD_ISO_SELECT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# poll() implementations
#
cdl_interface CYGINT_ISO_POLL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POLL 
    #     CYGINT_ISO_POLL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POLL
    #     Requires:  1 >= CYGINT_ISO_POLL 
};

# poll() implementation header
#
cdl_option CYGBLD_ISO_POLL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# NetDB utility functions
#
cdl_component CYGPKG_ISO_NETDB {
    # There is no associated value.
};

# >
# DNS implementations
#
cdl_interface CYGINT_ISO_DNS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
    # Requires:  1 >= CYGINT_ISO_DNS 
    #     CYGINT_ISO_DNS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_DNS
    #     Requires:  1 >= CYGINT_ISO_DNS 
};

# DNS implementation header
#
cdl_option CYGBLD_ISO_DNS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Protocol network database implementations
#
cdl_interface CYGINT_ISO_NETDB_PROTO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
    # Requires:  1 >= CYGINT_ISO_NETDB_PROTO 
    #     CYGINT_ISO_NETDB_PROTO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_NETDB_PROTO
    #     Requires:  1 >= CYGINT_ISO_NETDB_PROTO 
};

# Protocol network database implementation header
#
cdl_option CYGBLD_ISO_NETDB_PROTO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Services network database implementations
#
cdl_interface CYGINT_ISO_NETDB_SERV {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
    # Requires:  1 >= CYGINT_ISO_NETDB_SERV 
    #     CYGINT_ISO_NETDB_SERV == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_NETDB_SERV
    #     Requires:  1 >= CYGINT_ISO_NETDB_SERV 
};

# Services network database implementation header
#
cdl_option CYGBLD_ISO_NETDB_SERV_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_ISOINFRA_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the ISO C and POSIX infrastructure package.
# These flags are used in addition to the set of global flags.
#
cdl_option CYGPKG_ISOINFRA_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the ISO C and POSIX infrastructure package.
# These flags are removed from the set of global flags
# if present.
#
cdl_option CYGPKG_ISOINFRA_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# <
# Compute CRCs
# doc: ref/services-crc.html
# This package provides support for CRC calculation. Currently 
# this is the POSIX 1003 defined CRC algorithm, a 32 CRC by 
# Gary S. Brown, and a 16 bit CRC.
#
cdl_package CYGPKG_CRC {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 v3_0
};

# >
# POSIX CRC tests
#
cdl_option CYGPKG_CRC_TESTS {
    # Calculated value:  "tests/crc_test" 
    # Flavor: data
    # Current_value: tests/crc_test
};

# <
# <

